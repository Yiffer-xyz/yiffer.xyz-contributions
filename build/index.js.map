{
  "version": 3,
  "sources": ["../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/auth.server.ts", "../app/utils/database-facade.ts", "../app/utils/request-helpers.ts", "../app/routes/error.tsx", "../app/components/InfoBox.tsx", "../app/utils/theme-provider.tsx", "../app/utils/theme.server.ts", "../app/routes/forgotten-password.tsx", "../app/components/Link.tsx", "../app/utils/loaders.ts", "../app/routes/contribute/index.tsx", "../app/routes/logout.tsx", "../app/routes/signup.tsx", "../app/components/Buttons/LoadingButton.tsx", "../app/components/Buttons/Button.tsx", "../app/components/TextInput/TextInput.tsx", "../app/components/TextInput/TextInputUncontrolled.tsx", "../app/utils/useGoodFetcher.tsx", "../app/routes/admin.tsx", "../app/utils/useWindowSize.ts", "../app/routes/api/funcs/get-artists.ts", "../app/routes/api/funcs/get-comics.ts", "../app/routes/api/funcs/get-tags.ts", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/contribute/your-contributions/data-fetchers.ts", "../app/types/contributions.ts", "../app/routes/contribute/upload/upload-handler.server.ts", "../app/routes/api/funcs/add-contribution-points.ts", "../app/routes/api/admin/recalculate-publishing-queue.ts", "../app/routes/api/funcs/publishing-queue.ts", "../app/routes/contribute/upload/step3-pagemanager.tsx", "../app/utils/general.ts", "../app/components/PageManager/PageManager.tsx", "../app/components/Buttons/IconButton.tsx", "../app/components/FileInput.tsx", "../app/routes/contribute/your-contributions/index.tsx", "../app/components/Table/Table.tsx", "../app/components/Table/TableBody.tsx", "../app/components/Table/TableCell.tsx", "../app/components/Table/TableHeadRow.tsx", "../app/components/Table/TableRow.tsx", "../app/routes/contribute/BackToContribute.tsx", "../app/routes/contribute/scoreboard/index.tsx", "../app/components/Checkbox/Checkbox.tsx", "../app/components/Spinner.tsx", "../app/components/Username.tsx", "../app/routes/api/admin/process-comic-suggestion.ts", "../app/utils/formdata-parser.ts", "../app/routes/api/admin/schedule-comic-to-queue.ts", "../app/routes/contribute/upload/step4-thumbnail.tsx", "../app/components/RadioButton/RadioButtonGroup.tsx", "../app/components/Select/Select.tsx", "../app/components/ThumbnailCropper/ThumbnailCropper.tsx", "../app/routes/api/admin/process-tag-suggestion.ts", "../app/routes/api/search-similarly-named-comic.ts", "../app/utils/string-distance.ts", "../app/routes/api/admin/process-comic-problem.ts", "../app/routes/api/admin/reject-pending-comic.ts", "../app/routes/contribute/join-us/apply/index.tsx", "../app/components/Textarea/Textarea.tsx", "../app/components/Textarea/TextareaUncontrolled.tsx", "../app/components/TopGradientBox.tsx", "../app/routes/api/funcs/get-mod-application.ts", "../app/routes/contribute/suggest-comic/index.tsx", "../app/routes/api/admin/process-anon-upload.tsx", "../app/routes/api/admin/process-user-upload.tsx", "../app/routes/api/funcs/get-artist.ts", "../app/routes/api/admin/manage-artist.ts", "../app/routes/api/admin/publish-comics-cron.ts", "../app/routes/api/funcs/get-pending-comics.ts", "../app/routes/api/admin/publish-comic.ts", "../app/routes/api/admin/update-artist-data.ts", "../app/routes/api/admin/move-queued-comic.ts", "../app/routes/api/admin/toggle-artist-ban.tsx", "../app/routes/api/admin/unlist-comic.tsx", "../app/routes/api/admin/update-comic-data.ts", "../app/routes/api/funcs/get-comic.ts", "../app/routes/api/admin/unschedule-comic.ts", "../app/routes/api/admin/set-comic-error.ts", "../app/routes/api/admin/unassign-action.ts", "../app/routes/api/search-similar-artist.ts", "../app/routes/contribute/feedback/index.tsx", "../app/routes/contribute/upload/success.tsx", "../app/routes/api/admin/dashboard-data.ts", "../app/routes/api/admin/schedule-comic.ts", "../app/routes/contribute/join-us/index.tsx", "../app/routes/api/admin/assign-action.ts", "../app/routes/contribute/upload/index.tsx", "../app/routes/contribute/upload/step1.tsx", "../app/components/ComicManager/ComicData.tsx", "../app/components/Checkbox/CheckboxUncontrolled.tsx", "../app/components/SearchableSelect/SearchableSelect.tsx", "../app/components/ComicManager/ComicNameEditor.tsx", "../app/components/ArtistEditor.tsx", "../app/components/MultiSelect/MultiSelect.tsx", "../app/components/ComicManager/Tags.tsx", "../app/routes/api/admin/relist-comic.tsx", "../app/routes/api/upload-comic-pages.ts", "../app/routes/api/set-theme.ts", "../app/routes/admin/dashboard/PendingComicProblem.tsx", "../app/components/Chip.tsx", "../app/routes/admin/dashboard/ComicSuggestion.tsx", "../app/components/Buttons/DropdownButton.tsx", "../app/routes/admin/dashboard/index.tsx", "../app/routes/admin/dashboard/TagSuggestion.tsx", "../app/routes/admin/dashboard/ComicUpload.tsx", "../app/routes/admin/dashboard/ComicProblem.tsx", "../app/routes/admin/pending-comics.tsx", "../app/components/Buttons/LoadingIconButton.tsx", "../app/routes/admin/thumbnails.tsx", "../app/routes/admin/artists.tsx", "../app/routes/admin/artists/$artist.tsx", "../app/routes/admin/comics.tsx", "../app/routes/admin/comics/AnonUploadedComicSection.tsx", "../app/routes/admin/comics/UserUploadedComicSection.tsx", "../app/routes/admin/comics/UnlistedComicSection.tsx", "../app/routes/admin/comics/scheduling/Scheduled.tsx", "../app/routes/admin/comics/PendingComicSection.tsx", "../app/routes/admin/comics/pending/Error.tsx", "../app/routes/admin/comics/pending/Reject.tsx", "../app/routes/admin/comics/scheduling/Schedule.tsx", "../app/routes/admin/comics/LiveComic.tsx", "../app/routes/admin/comics/$comic.tsx", "../app/routes/admin/stats.tsx", "../app/routes/admin/tags.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createPagesFunctionHandler } from '@remix-run/cloudflare-pages';\nimport * as build from '@remix-run/dev/server-build';\nimport { Env } from '~/types/types';\n\ntype Context = EventContext<Env, string, unknown>;\n\ndeclare module '@remix-run/server-runtime' {\n  interface AppLoadContext extends Env {}\n}\n\nconst handleRequest = createPagesFunctionHandler({\n  build,\n  mode: process.env.NODE_ENV,\n  getLoadContext: (context: Context) => ({\n    ...context.env,\n  }),\n});\n\nexport function onRequest(context: Context) {\n  return handleRequest(context);\n}\n", "\nimport * as entryServer from \"/Users/ragnar/scripts/contributions/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/forgotten-password.tsx\";\nimport * as route2 from \"./routes/contribute/index.tsx\";\nimport * as route3 from \"./routes/logout.tsx\";\nimport * as route4 from \"./routes/signup.tsx\";\nimport * as route5 from \"./routes/admin.tsx\";\nimport * as route6 from \"./routes/error.tsx\";\nimport * as route7 from \"./routes/index.tsx\";\nimport * as route8 from \"./routes/login.tsx\";\nimport * as route9 from \"./routes/contribute/your-contributions/data-fetchers.ts\";\nimport * as route10 from \"./routes/contribute/upload/upload-handler.server.ts\";\nimport * as route11 from \"./routes/api/admin/recalculate-publishing-queue.ts\";\nimport * as route12 from \"./routes/contribute/upload/step3-pagemanager.tsx\";\nimport * as route13 from \"./routes/contribute/your-contributions/index.tsx\";\nimport * as route14 from \"./routes/api/admin/process-comic-suggestion.ts\";\nimport * as route15 from \"./routes/api/admin/schedule-comic-to-queue.ts\";\nimport * as route16 from \"./routes/api/funcs/add-contribution-points.ts\";\nimport * as route17 from \"./routes/contribute/upload/step4-thumbnail.tsx\";\nimport * as route18 from \"./routes/api/admin/process-tag-suggestion.ts\";\nimport * as route19 from \"./routes/api/search-similarly-named-comic.ts\";\nimport * as route20 from \"./routes/api/admin/process-comic-problem.ts\";\nimport * as route21 from \"./routes/api/admin/reject-pending-comic.ts\";\nimport * as route22 from \"./routes/contribute/join-us/apply/index.tsx\";\nimport * as route23 from \"./routes/contribute/suggest-comic/index.tsx\";\nimport * as route24 from \"./routes/api/admin/process-anon-upload.tsx\";\nimport * as route25 from \"./routes/api/admin/process-user-upload.tsx\";\nimport * as route26 from \"./routes/api/admin/publish-comics-cron.ts\";\nimport * as route27 from \"./routes/api/funcs/get-mod-application.ts\";\nimport * as route28 from \"./routes/api/admin/update-artist-data.ts\";\nimport * as route29 from \"./routes/api/funcs/get-pending-comics.ts\";\nimport * as route30 from \"./routes/api/admin/move-queued-comic.ts\";\nimport * as route31 from \"./routes/api/admin/toggle-artist-ban.tsx\";\nimport * as route32 from \"./routes/api/admin/update-comic-data.ts\";\nimport * as route33 from \"./routes/contribute/BackToContribute.tsx\";\nimport * as route34 from \"./routes/contribute/scoreboard/index.tsx\";\nimport * as route35 from \"./routes/api/admin/unschedule-comic.ts\";\nimport * as route36 from \"./routes/api/funcs/publishing-queue.ts\";\nimport * as route37 from \"./routes/api/admin/set-comic-error.ts\";\nimport * as route38 from \"./routes/api/admin/unassign-action.ts\";\nimport * as route39 from \"./routes/api/search-similar-artist.ts\";\nimport * as route40 from \"./routes/contribute/feedback/index.tsx\";\nimport * as route41 from \"./routes/contribute/upload/success.tsx\";\nimport * as route42 from \"./routes/api/admin/dashboard-data.ts\";\nimport * as route43 from \"./routes/api/admin/schedule-comic.ts\";\nimport * as route44 from \"./routes/contribute/join-us/index.tsx\";\nimport * as route45 from \"./routes/api/admin/assign-action.ts\";\nimport * as route46 from \"./routes/api/admin/manage-artist.ts\";\nimport * as route47 from \"./routes/api/admin/publish-comic.ts\";\nimport * as route48 from \"./routes/contribute/upload/index.tsx\";\nimport * as route49 from \"./routes/contribute/upload/step1.tsx\";\nimport * as route50 from \"./routes/api/admin/relist-comic.tsx\";\nimport * as route51 from \"./routes/api/admin/unlist-comic.tsx\";\nimport * as route52 from \"./routes/api/upload-comic-pages.ts\";\nimport * as route53 from \"./routes/api/funcs/get-artists.ts\";\nimport * as route54 from \"./routes/api/funcs/get-artist.ts\";\nimport * as route55 from \"./routes/api/funcs/get-comics.ts\";\nimport * as route56 from \"./routes/api/funcs/get-comic.ts\";\nimport * as route57 from \"./routes/api/funcs/get-tags.ts\";\nimport * as route58 from \"./routes/contribute/index.tsx\";\nimport * as route59 from \"./routes/api/set-theme.ts\";\nimport * as route60 from \"./routes/admin/dashboard/PendingComicProblem.tsx\";\nimport * as route61 from \"./routes/admin/dashboard/ComicSuggestion.tsx\";\nimport * as route62 from \"./routes/admin/dashboard/TagSuggestion.tsx\";\nimport * as route63 from \"./routes/admin/dashboard/ComicProblem.tsx\";\nimport * as route64 from \"./routes/admin/dashboard/ComicUpload.tsx\";\nimport * as route65 from \"./routes/admin/dashboard/index.tsx\";\nimport * as route66 from \"./routes/admin/pending-comics.tsx\";\nimport * as route67 from \"./routes/admin/thumbnails.tsx\";\nimport * as route68 from \"./routes/admin/artists.tsx\";\nimport * as route69 from \"./routes/admin/artists/$artist.tsx\";\nimport * as route70 from \"./routes/admin/comics.tsx\";\nimport * as route71 from \"./routes/admin/comics/AnonUploadedComicSection.tsx\";\nimport * as route72 from \"./routes/admin/comics/UserUploadedComicSection.tsx\";\nimport * as route73 from \"./routes/admin/comics/UnlistedComicSection.tsx\";\nimport * as route74 from \"./routes/admin/comics/scheduling/Scheduled.tsx\";\nimport * as route75 from \"./routes/admin/comics/PendingComicSection.tsx\";\nimport * as route76 from \"./routes/admin/comics/scheduling/Schedule.tsx\";\nimport * as route77 from \"./routes/admin/comics/pending/Reject.tsx\";\nimport * as route78 from \"./routes/admin/comics/pending/Error.tsx\";\nimport * as route79 from \"./routes/admin/comics/LiveComic.tsx\";\nimport * as route80 from \"./routes/admin/comics/$comic.tsx\";\nimport * as route81 from \"./routes/admin/stats.tsx\";\nimport * as route82 from \"./routes/admin/tags.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/forgotten-password\": {\n      id: \"routes/forgotten-password\",\n      parentId: \"root\",\n      path: \"forgotten-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/contribute\": {\n      id: \"routes/contribute\",\n      parentId: \"root\",\n      path: \"contribute\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/contribute/your-contributions/data-fetchers\": {\n      id: \"routes/contribute/your-contributions/data-fetchers\",\n      parentId: \"root\",\n      path: \"contribute/your-contributions/data-fetchers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/contribute/upload/upload-handler.server\": {\n      id: \"routes/contribute/upload/upload-handler.server\",\n      parentId: \"root\",\n      path: \"contribute/upload/upload-handler/server\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/api/admin/recalculate-publishing-queue\": {\n      id: \"routes/api/admin/recalculate-publishing-queue\",\n      parentId: \"root\",\n      path: \"api/admin/recalculate-publishing-queue\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/contribute/upload/step3-pagemanager\": {\n      id: \"routes/contribute/upload/step3-pagemanager\",\n      parentId: \"root\",\n      path: \"contribute/upload/step3-pagemanager\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/contribute/your-contributions/index\": {\n      id: \"routes/contribute/your-contributions/index\",\n      parentId: \"root\",\n      path: \"contribute/your-contributions\",\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/api/admin/process-comic-suggestion\": {\n      id: \"routes/api/admin/process-comic-suggestion\",\n      parentId: \"root\",\n      path: \"api/admin/process-comic-suggestion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/api/admin/schedule-comic-to-queue\": {\n      id: \"routes/api/admin/schedule-comic-to-queue\",\n      parentId: \"root\",\n      path: \"api/admin/schedule-comic-to-queue\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/api/funcs/add-contribution-points\": {\n      id: \"routes/api/funcs/add-contribution-points\",\n      parentId: \"root\",\n      path: \"api/funcs/add-contribution-points\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/contribute/upload/step4-thumbnail\": {\n      id: \"routes/contribute/upload/step4-thumbnail\",\n      parentId: \"root\",\n      path: \"contribute/upload/step4-thumbnail\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/api/admin/process-tag-suggestion\": {\n      id: \"routes/api/admin/process-tag-suggestion\",\n      parentId: \"root\",\n      path: \"api/admin/process-tag-suggestion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/api/search-similarly-named-comic\": {\n      id: \"routes/api/search-similarly-named-comic\",\n      parentId: \"root\",\n      path: \"api/search-similarly-named-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/api/admin/process-comic-problem\": {\n      id: \"routes/api/admin/process-comic-problem\",\n      parentId: \"root\",\n      path: \"api/admin/process-comic-problem\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/api/admin/reject-pending-comic\": {\n      id: \"routes/api/admin/reject-pending-comic\",\n      parentId: \"root\",\n      path: \"api/admin/reject-pending-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/contribute/join-us/apply/index\": {\n      id: \"routes/contribute/join-us/apply/index\",\n      parentId: \"root\",\n      path: \"contribute/join-us/apply\",\n      index: true,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/contribute/suggest-comic/index\": {\n      id: \"routes/contribute/suggest-comic/index\",\n      parentId: \"root\",\n      path: \"contribute/suggest-comic\",\n      index: true,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/api/admin/process-anon-upload\": {\n      id: \"routes/api/admin/process-anon-upload\",\n      parentId: \"root\",\n      path: \"api/admin/process-anon-upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/api/admin/process-user-upload\": {\n      id: \"routes/api/admin/process-user-upload\",\n      parentId: \"root\",\n      path: \"api/admin/process-user-upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/api/admin/publish-comics-cron\": {\n      id: \"routes/api/admin/publish-comics-cron\",\n      parentId: \"root\",\n      path: \"api/admin/publish-comics-cron\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/api/funcs/get-mod-application\": {\n      id: \"routes/api/funcs/get-mod-application\",\n      parentId: \"root\",\n      path: \"api/funcs/get-mod-application\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/api/admin/update-artist-data\": {\n      id: \"routes/api/admin/update-artist-data\",\n      parentId: \"root\",\n      path: \"api/admin/update-artist-data\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/api/funcs/get-pending-comics\": {\n      id: \"routes/api/funcs/get-pending-comics\",\n      parentId: \"root\",\n      path: \"api/funcs/get-pending-comics\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/api/admin/move-queued-comic\": {\n      id: \"routes/api/admin/move-queued-comic\",\n      parentId: \"root\",\n      path: \"api/admin/move-queued-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/api/admin/toggle-artist-ban\": {\n      id: \"routes/api/admin/toggle-artist-ban\",\n      parentId: \"root\",\n      path: \"api/admin/toggle-artist-ban\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/api/admin/update-comic-data\": {\n      id: \"routes/api/admin/update-comic-data\",\n      parentId: \"root\",\n      path: \"api/admin/update-comic-data\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/contribute/BackToContribute\": {\n      id: \"routes/contribute/BackToContribute\",\n      parentId: \"root\",\n      path: \"contribute/BackToContribute\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/contribute/scoreboard/index\": {\n      id: \"routes/contribute/scoreboard/index\",\n      parentId: \"root\",\n      path: \"contribute/scoreboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/api/admin/unschedule-comic\": {\n      id: \"routes/api/admin/unschedule-comic\",\n      parentId: \"root\",\n      path: \"api/admin/unschedule-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/api/funcs/publishing-queue\": {\n      id: \"routes/api/funcs/publishing-queue\",\n      parentId: \"root\",\n      path: \"api/funcs/publishing-queue\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/api/admin/set-comic-error\": {\n      id: \"routes/api/admin/set-comic-error\",\n      parentId: \"root\",\n      path: \"api/admin/set-comic-error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/api/admin/unassign-action\": {\n      id: \"routes/api/admin/unassign-action\",\n      parentId: \"root\",\n      path: \"api/admin/unassign-action\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/api/search-similar-artist\": {\n      id: \"routes/api/search-similar-artist\",\n      parentId: \"root\",\n      path: \"api/search-similar-artist\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/contribute/feedback/index\": {\n      id: \"routes/contribute/feedback/index\",\n      parentId: \"root\",\n      path: \"contribute/feedback\",\n      index: true,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/contribute/upload/success\": {\n      id: \"routes/contribute/upload/success\",\n      parentId: \"root\",\n      path: \"contribute/upload/success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/api/admin/dashboard-data\": {\n      id: \"routes/api/admin/dashboard-data\",\n      parentId: \"root\",\n      path: \"api/admin/dashboard-data\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    },\n  \"routes/api/admin/schedule-comic\": {\n      id: \"routes/api/admin/schedule-comic\",\n      parentId: \"root\",\n      path: \"api/admin/schedule-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route43\n    },\n  \"routes/contribute/join-us/index\": {\n      id: \"routes/contribute/join-us/index\",\n      parentId: \"root\",\n      path: \"contribute/join-us\",\n      index: true,\n      caseSensitive: undefined,\n      module: route44\n    },\n  \"routes/api/admin/assign-action\": {\n      id: \"routes/api/admin/assign-action\",\n      parentId: \"root\",\n      path: \"api/admin/assign-action\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route45\n    },\n  \"routes/api/admin/manage-artist\": {\n      id: \"routes/api/admin/manage-artist\",\n      parentId: \"root\",\n      path: \"api/admin/manage-artist\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route46\n    },\n  \"routes/api/admin/publish-comic\": {\n      id: \"routes/api/admin/publish-comic\",\n      parentId: \"root\",\n      path: \"api/admin/publish-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route47\n    },\n  \"routes/contribute/upload/index\": {\n      id: \"routes/contribute/upload/index\",\n      parentId: \"root\",\n      path: \"contribute/upload\",\n      index: true,\n      caseSensitive: undefined,\n      module: route48\n    },\n  \"routes/contribute/upload/step1\": {\n      id: \"routes/contribute/upload/step1\",\n      parentId: \"root\",\n      path: \"contribute/upload/step1\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route49\n    },\n  \"routes/api/admin/relist-comic\": {\n      id: \"routes/api/admin/relist-comic\",\n      parentId: \"root\",\n      path: \"api/admin/relist-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route50\n    },\n  \"routes/api/admin/unlist-comic\": {\n      id: \"routes/api/admin/unlist-comic\",\n      parentId: \"root\",\n      path: \"api/admin/unlist-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route51\n    },\n  \"routes/api/upload-comic-pages\": {\n      id: \"routes/api/upload-comic-pages\",\n      parentId: \"root\",\n      path: \"api/upload-comic-pages\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route52\n    },\n  \"routes/api/funcs/get-artists\": {\n      id: \"routes/api/funcs/get-artists\",\n      parentId: \"root\",\n      path: \"api/funcs/get-artists\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route53\n    },\n  \"routes/api/funcs/get-artist\": {\n      id: \"routes/api/funcs/get-artist\",\n      parentId: \"root\",\n      path: \"api/funcs/get-artist\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route54\n    },\n  \"routes/api/funcs/get-comics\": {\n      id: \"routes/api/funcs/get-comics\",\n      parentId: \"root\",\n      path: \"api/funcs/get-comics\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route55\n    },\n  \"routes/api/funcs/get-comic\": {\n      id: \"routes/api/funcs/get-comic\",\n      parentId: \"root\",\n      path: \"api/funcs/get-comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route56\n    },\n  \"routes/api/funcs/get-tags\": {\n      id: \"routes/api/funcs/get-tags\",\n      parentId: \"root\",\n      path: \"api/funcs/get-tags\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route57\n    },\n  \"routes/contribute/index\": {\n      id: \"routes/contribute/index\",\n      parentId: \"root\",\n      path: \"contribute\",\n      index: true,\n      caseSensitive: undefined,\n      module: route58\n    },\n  \"routes/api/set-theme\": {\n      id: \"routes/api/set-theme\",\n      parentId: \"root\",\n      path: \"api/set-theme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route59\n    },\n  \"routes/admin/dashboard/PendingComicProblem\": {\n      id: \"routes/admin/dashboard/PendingComicProblem\",\n      parentId: \"routes/admin\",\n      path: \"dashboard/PendingComicProblem\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route60\n    },\n  \"routes/admin/dashboard/ComicSuggestion\": {\n      id: \"routes/admin/dashboard/ComicSuggestion\",\n      parentId: \"routes/admin\",\n      path: \"dashboard/ComicSuggestion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route61\n    },\n  \"routes/admin/dashboard/TagSuggestion\": {\n      id: \"routes/admin/dashboard/TagSuggestion\",\n      parentId: \"routes/admin\",\n      path: \"dashboard/TagSuggestion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route62\n    },\n  \"routes/admin/dashboard/ComicProblem\": {\n      id: \"routes/admin/dashboard/ComicProblem\",\n      parentId: \"routes/admin\",\n      path: \"dashboard/ComicProblem\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route63\n    },\n  \"routes/admin/dashboard/ComicUpload\": {\n      id: \"routes/admin/dashboard/ComicUpload\",\n      parentId: \"routes/admin\",\n      path: \"dashboard/ComicUpload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route64\n    },\n  \"routes/admin/dashboard/index\": {\n      id: \"routes/admin/dashboard/index\",\n      parentId: \"routes/admin\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route65\n    },\n  \"routes/admin/pending-comics\": {\n      id: \"routes/admin/pending-comics\",\n      parentId: \"routes/admin\",\n      path: \"pending-comics\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route66\n    },\n  \"routes/admin/thumbnails\": {\n      id: \"routes/admin/thumbnails\",\n      parentId: \"routes/admin\",\n      path: \"thumbnails\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route67\n    },\n  \"routes/admin/artists\": {\n      id: \"routes/admin/artists\",\n      parentId: \"routes/admin\",\n      path: \"artists\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route68\n    },\n  \"routes/admin/artists/$artist\": {\n      id: \"routes/admin/artists/$artist\",\n      parentId: \"routes/admin/artists\",\n      path: \":artist\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route69\n    },\n  \"routes/admin/comics\": {\n      id: \"routes/admin/comics\",\n      parentId: \"routes/admin\",\n      path: \"comics\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route70\n    },\n  \"routes/admin/comics/AnonUploadedComicSection\": {\n      id: \"routes/admin/comics/AnonUploadedComicSection\",\n      parentId: \"routes/admin/comics\",\n      path: \"AnonUploadedComicSection\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route71\n    },\n  \"routes/admin/comics/UserUploadedComicSection\": {\n      id: \"routes/admin/comics/UserUploadedComicSection\",\n      parentId: \"routes/admin/comics\",\n      path: \"UserUploadedComicSection\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route72\n    },\n  \"routes/admin/comics/UnlistedComicSection\": {\n      id: \"routes/admin/comics/UnlistedComicSection\",\n      parentId: \"routes/admin/comics\",\n      path: \"UnlistedComicSection\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route73\n    },\n  \"routes/admin/comics/scheduling/Scheduled\": {\n      id: \"routes/admin/comics/scheduling/Scheduled\",\n      parentId: \"routes/admin/comics\",\n      path: \"scheduling/Scheduled\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route74\n    },\n  \"routes/admin/comics/PendingComicSection\": {\n      id: \"routes/admin/comics/PendingComicSection\",\n      parentId: \"routes/admin/comics\",\n      path: \"PendingComicSection\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route75\n    },\n  \"routes/admin/comics/scheduling/Schedule\": {\n      id: \"routes/admin/comics/scheduling/Schedule\",\n      parentId: \"routes/admin/comics\",\n      path: \"scheduling/Schedule\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route76\n    },\n  \"routes/admin/comics/pending/Reject\": {\n      id: \"routes/admin/comics/pending/Reject\",\n      parentId: \"routes/admin/comics\",\n      path: \"pending/Reject\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route77\n    },\n  \"routes/admin/comics/pending/Error\": {\n      id: \"routes/admin/comics/pending/Error\",\n      parentId: \"routes/admin/comics\",\n      path: \"pending/Error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route78\n    },\n  \"routes/admin/comics/LiveComic\": {\n      id: \"routes/admin/comics/LiveComic\",\n      parentId: \"routes/admin/comics\",\n      path: \"LiveComic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route79\n    },\n  \"routes/admin/comics/$comic\": {\n      id: \"routes/admin/comics/$comic\",\n      parentId: \"routes/admin/comics\",\n      path: \":comic\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route80\n    },\n  \"routes/admin/stats\": {\n      id: \"routes/admin/stats\",\n      parentId: \"routes/admin\",\n      path: \"stats\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route81\n    },\n  \"routes/admin/tags\": {\n      id: \"routes/admin/tags\",\n      parentId: \"routes/admin\",\n      path: \"tags\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route82\n    }\n  };", "import type { EntryContext } from '@remix-run/cloudflare';\nimport { RemixServer } from '@remix-run/react';\nimport { renderToString } from 'react-dom/server';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { LoaderFunction, MetaFunction } from '@remix-run/cloudflare';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n'@remix-run/react';\nimport clsx from 'clsx';\n\nimport styles from './styles/app.css';\nimport rootStyles from './styles/main.css';\nimport { UserSession } from './types/types';\nimport { getUserSession } from './utils/auth.server';\n\nimport { NonFlashOfWrongThemeEls, ThemeProvider, useTheme } from './utils/theme-provider';\nimport { getThemeSession } from './utils/theme.server';\n\nimport { ToastContainer } from 'react-toastify';\nimport toastCss from 'react-toastify/dist/ReactToastify.css';\n\nimport * as Sentry from '@sentry/browser';\nSentry.init({\n  dsn: 'https://74fe377e56b149fa9f1fa9d41d5de90b@o4504978928959488.ingest.sentry.io/4504978941542400',\n  // Alternatively, use `process.env.npm_package_version` for a dynamic release version\n  // if your build tool supports it.\n  integrations: [new Sentry.BrowserTracing()],\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0\n});\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1'\n});\n\n// TODO: How to do preconnect\n/* <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"> */\n/* <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>  */\nexport function links() {\n  return [\n  { rel: 'stylesheet', href: styles },\n  { rel: 'stylesheet', href: rootStyles },\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Mulish:wght@300;600&display=swap'\n  },\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Shrikhand&text=Yiffer.xyz&display=swap'\n  },\n  { rel: 'stylesheet', href: toastCss }];\n\n}\n\nexport const loader: LoaderFunction = async function ({ request, context }) {\n  const themeSession = await getThemeSession(request);\n  const userSession = await getUserSession(request, context.JWT_CONFIG_STR);\n\n  const data = {\n    theme: themeSession.getTheme(),\n    user: userSession,\n    frontPageUrl: context.FRONT_PAGE_URL\n  };\n  return data;\n};\n\n// export const UserContext = createContext('user');\n\nexport function App() {\n  const [theme] = useTheme();\n  const data = useLoaderData();\n\n  return (\n    <html lang=\"en\" className={clsx(theme)}>\n      <head>\n        <Meta />\n        <Links />\n        {/* TODO: Seems this isn't needed? Do more thorough research before deleting though. */}\n        {/* <NonFlashOfWrongThemeEls ssrTheme={Boolean(data.theme)} /> */}\n      </head>\n      <body className=\"dark:bg-bgDark text-text-light dark:text-text-dark\">\n        <Layout user={data.user} frontPageUrl={data.frontPageUrl}>\n          {/* <UserContext.Provider value={data.user}> */}\n          <Outlet />\n          {/* </UserContext.Provider> */}\n        </Layout>\n        <ScrollRestoration />\n        <ToastContainer />\n        <Scripts />\n        <LiveReload />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`\n          }} />\n\n      </body>\n    </html>);\n\n}\n\n// TODO: Make it work later. Currently causes infinite error loops.\n// export function ErrorBoundary({ error }: { error: Error }) {\n//   return (\n//     <>\n//       <div role=\"alert\">\n//         <p>Something went wrong:(</p>\n//         <p>Nice error message here, hide stack of course.</p>\n//       </div>\n//       <pre>\n//         <code>{error.message}</code>\n//       </pre>\n//       <pre>\n//         <code>{error?.stack}</code>\n//       </pre>\n//     </>\n//   );\n// }\n\nexport default function AppWithProviders() {\n  const data = useLoaderData();\n\n  return (\n    <ThemeProvider specifiedTheme={data.theme}>\n      <App />\n    </ThemeProvider>);\n\n}\n\nfunction Layout({\n  frontPageUrl,\n  user,\n  children\n\n\n\n\n}: {frontPageUrl: string;user: UserSession | null;children: React.ReactNode;}) {\n  const [, setTheme] = useTheme();\n  const isLoggedIn = !!user;\n  const isMod = true; // TODO:\n\n  return (\n    <>\n      <nav\n        className=\"flex bg-gradient-to-r from-theme1-primary to-theme2-primary dark:bg-none\n          px-4 py-1.5 nav-shadowing justify-between mb-4 text-gray-400 w-full z-20\">\n\n\n        <div className=\"flex items-center justify-between mx-auto flex-grow max-w-full lg:max-w-80p\">\n          <div className=\"flex gap-6 items-center\">\n            <a\n              href={frontPageUrl}\n              className=\"text-gray-400 hidden lg:block bg-none dark:text-blue-strong-300\"\n              style={{\n                fontFamily: 'Shrikhand,cursive',\n                fontSize: '1.25rem',\n                fontWeight: 400\n              }}>\n\n              Yiffer.xyz\n            </a>\n            <a\n              href={frontPageUrl}\n              className=\"text-gray-400 block lg:hidden bg-none dark:text-blue-strong-300\"\n              style={{\n                fontFamily: 'Shrikhand,cursive',\n                fontSize: '1.25rem',\n                fontWeight: 400\n              }}>\n\n              Y\n            </a>\n            {isLoggedIn ?\n            <>\n                <a\n                href=\"https://yiffer.xyz/account\"\n                className=\"text-gray-400 font-semibold bg-none dark:text-blue-strong-300\">\n\n                  Account\n                </a>\n                {isMod &&\n              <a\n                href=\"/admin\"\n                className=\"font-semibold bg-none dark:text-blue-strong-300\">\n\n                    Admin\n                  </a>}\n\n                <a\n                href=\"/logout\"\n                className=\"font-semibold bg-none dark:text-blue-strong-300\">\n\n                  Log out\n                </a>\n              </> :\n\n            <a\n              href=\"/login\"\n              className=\"text-gray-400 font-semibold bg-none dark:text-blue-strong-300\">\n\n                Log in\n              </a>}\n\n          </div>\n          <div className=\"flex gap-6\">\n            <p\n              onClick={() => setTheme('light')}\n              className=\"cursor-pointer font-bold dark:text-blue-strong-300\">\n\n              Light\n            </p>\n            <p\n              onClick={() => setTheme('dark')}\n              className=\"cursor-pointer font-bold dark:text-blue-strong-300\">\n\n              Dark\n            </p>\n          </div>\n        </div>\n      </nav>\n      {children}\n    </>);\n\n}", "import { redirect } from '@remix-run/cloudflare';\nimport jwt from '@tsndr/cloudflare-worker-jwt';\nimport { JwtConfig, User, UserSession } from '~/types/types';\nimport { queryDb } from './database-facade';\nimport { ApiError, makeDbErrObj, wrapApiError } from './request-helpers';\nimport { createWelcomeEmail, sendEmail } from './send-email';\nconst bcrypt = require('bcryptjs');\nconst { hash, compare } = bcrypt;\n\ntype AuthResponse = {\n  err?: ApiError;\n  redirect?: Response;\n  errorMessage?: string;\n};\n\ntype UserWithPassword = User & { password: string };\n\nexport async function login(\n  username: string,\n  password: string,\n  urlBase: string,\n  jwtConfigStr: string\n): Promise<AuthResponse> {\n  const { err, errorMessage, user } = await authenticate(urlBase, username, password);\n  if (err) {\n    return { err: wrapApiError(err, 'Error in login func', { username, password }) };\n  }\n  if (errorMessage) {\n    return { errorMessage };\n  }\n\n  const redirect = await createUserSession(user as User, jwtConfigStr);\n  return { redirect };\n}\n\nexport async function signup(\n  username: string,\n  email: string,\n  password: string,\n  urlBase: string,\n  jwtConfigStr: string,\n  postmarkToken: string\n): Promise<AuthResponse> {\n  const usernameQuery = 'SELECT * FROM user WHERE username = ?';\n  const emailQuery = 'SELECT * FROM user WHERE email = ?';\n\n  const [usernameResult, emailResult] = await Promise.all([\n    queryDb<any[]>(urlBase, usernameQuery, [username]),\n    queryDb<any[]>(urlBase, emailQuery, [email]),\n  ]);\n  if (usernameResult.isError) {\n    return makeDbErrObj(usernameResult, 'Signup error fetching username');\n  }\n  if (emailResult.isError) {\n    return makeDbErrObj(emailResult, 'Signup error fetching email');\n  }\n  if (usernameResult.result?.length) {\n    return { errorMessage: 'Username already exists' };\n  }\n  if (emailResult.result?.length) {\n    return { errorMessage: 'Email already exists' };\n  }\n\n  // TODO: prevent spam, as in old api\n\n  const hashedPassword = await hash(password, 8);\n  const insertQuery = 'INSERT INTO user (username, password, email) VALUES (?, ?, ?)';\n  const insertResult = await queryDb(urlBase, insertQuery, [\n    username,\n    hashedPassword,\n    email,\n  ]);\n  if (insertResult.isError) {\n    return makeDbErrObj(insertResult, 'Error inserting user');\n  }\n  if (!insertResult.insertId) {\n    return makeDbErrObj(insertResult, 'Error inserting user - no insertId');\n  }\n\n  const user: User = {\n    id: insertResult.insertId,\n    username,\n    email,\n    userType: 'user',\n  };\n\n  sendEmail(createWelcomeEmail(username, email), postmarkToken);\n\n  const redirect = await createUserSession(user, jwtConfigStr);\n\n  return { redirect };\n}\n\nasync function authenticate(\n  urlBase: string,\n  usernameOrEmail: string,\n  password: string\n): Promise<{ err?: ApiError; errorMessage?: string; user?: User }> {\n  const query =\n    'SELECT id, username, email, userType, password FROM user WHERE username = ? OR email = ?';\n  const queryParams = [usernameOrEmail, usernameOrEmail];\n\n  const fetchDbRes = await queryDb<UserWithPassword[]>(urlBase, query, queryParams);\n  if (fetchDbRes.isError) {\n    return makeDbErrObj(fetchDbRes, 'Login error fetching username/email');\n  }\n  if (!fetchDbRes.result?.length) {\n    return { errorMessage: 'Username does not exist or wrong password' };\n  }\n\n  const user = fetchDbRes.result[0];\n  const isPasswordValid = await compare(password, user.password);\n  if (!isPasswordValid) {\n    return { errorMessage: 'Username does not exist or wrong password' };\n  }\n\n  return {\n    user: {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      userType: user.userType,\n    },\n  };\n}\n\n// To get the user data - {userId, username}\n// Basically, use this from components/routes\nexport async function getUserSession(\n  request: Request,\n  jwtConfigstr: string\n): Promise<UserSession | null> {\n  const jwtConfig: JwtConfig = JSON.parse(jwtConfigstr);\n  const allCookies = request.headers.get('cookie');\n\n  const sessionCookieContent = cookiesStringToYifferSessionCookie(\n    allCookies,\n    jwtConfig.cookie.name\n  );\n  if (!sessionCookieContent) {\n    return null;\n  }\n\n  const isTokenValid = await jwt.verify(sessionCookieContent, jwtConfig.tokenSecret);\n  if (!isTokenValid) {\n    return null;\n  }\n\n  const tokenContent = jwt.decode(sessionCookieContent);\n  if (\n    !tokenContent.payload ||\n    !tokenContent.payload.id ||\n    !tokenContent.payload.username ||\n    !tokenContent.payload.userType\n  ) {\n    return null;\n  }\n\n  return {\n    userId: tokenContent.payload.id,\n    username: tokenContent.payload.username,\n    userType: tokenContent.payload.userType,\n  };\n}\n\nexport async function logout(jwtConfigStr: string) {\n  const jwtConfig: JwtConfig = JSON.parse(jwtConfigStr);\n\n  const destroyUserDataHeader = destroyUserDataCookieHeader(jwtConfig);\n  const destroySessionCookieHeader = destroyJwtAuthCookieHeader(jwtConfig);\n\n  const headers = new Headers();\n  headers.append('Set-Cookie', destroySessionCookieHeader);\n  headers.append('Set-Cookie', destroyUserDataHeader);\n\n  return redirect('/', { headers });\n}\n\nexport async function createUserSession(user: User, jwtConfigStr: string) {\n  const jwtConfig: JwtConfig = JSON.parse(jwtConfigStr);\n\n  // This one is for auth - will be verified on the server(s)\n  const sessionCookieHeader = await createJwtAuthCookieHeader(\n    user.id,\n    user.username,\n    user.userType,\n    jwtConfig\n  );\n\n  // This one is to ensure cross-subdomain auth, will not need when everything is Remix.\n  // This one is not serialized/anything like that, and not httpOnly, so it can be read by the\n  // Vue code in the browser - which ensures a smooth experience since that's not SSR.\n  const userDataCookieHeader = createUserDataCookieHeader(user, jwtConfig);\n\n  const headers = new Headers();\n  headers.append('Set-Cookie', sessionCookieHeader);\n  headers.append('Set-Cookie', userDataCookieHeader);\n\n  return redirect('/', {\n    headers,\n  });\n}\n\nasync function createJwtAuthCookieHeader(\n  userId: number,\n  username: string,\n  userType: string,\n  jwtConfig: JwtConfig\n) {\n  const token = await jwt.sign({ id: userId, username, userType }, jwtConfig.tokenSecret);\n  // Creating it manually, because the Remix methods transform it for some reason??\n  return `${jwtConfig.cookie.name}=${token}; Max-Age=${jwtConfig.cookie.maxAge}; Domain=${\n    jwtConfig.cookie.domain\n  };${jwtConfig.cookie.secure ? ' Secure;' : ''}${\n    jwtConfig.cookie.httpOnly ? ' HttpOnly;' : ''\n  }`;\n}\n\nfunction destroyJwtAuthCookieHeader(jwtConfig: JwtConfig): string {\n  // Creating it manually, because the Remix methods transform it for some reason??\n  return `${jwtConfig.cookie.name}=; Max-Age=0; Domain=${jwtConfig.cookie.domain};${\n    jwtConfig.cookie.secure ? ' Secure;' : ''\n  }${\n    jwtConfig.cookie.httpOnly ? ' HttpOnly;' : ''\n  } Expires=Thu, 01 Jan 1970 00:00:00 GMT;`;\n}\n\nfunction createUserDataCookieHeader(userData: any, jwtConfig: JwtConfig) {\n  // Creating it manually, because the Remix methods transform it for some reason??\n  return `yiffer_userdata=${JSON.stringify(userData)}; Max-Age=${\n    jwtConfig.cookie.maxAge\n  }; Domain=${jwtConfig.cookie.domain}; ${jwtConfig.cookie.secure ? 'Secure' : ''};`;\n}\n\nfunction destroyUserDataCookieHeader(jwtConfig: JwtConfig) {\n  // Creating it manually, because the Remix methods transform it for some reason??\n  return `yiffer_userdata=; Max-Age=0; Domain=${jwtConfig.cookie.domain}; ${\n    jwtConfig.cookie.secure ? 'Secure' : ''\n  }; Expires=Thu, 01 Jan 1970 00:00:00 GMT;`;\n}\n\nfunction cookiesStringToYifferSessionCookie(\n  allCookies: string | null,\n  cookieName: string\n): string | undefined {\n  if (!allCookies) {\n    return;\n  }\n  const cookiesSplit = allCookies.split(';').map(cookieStr => cookieStr.trim());\n  const yifferSessionCookie = cookiesSplit.find(cookie =>\n    cookie.startsWith(`${cookieName}=`)\n  );\n  if (!yifferSessionCookie) {\n    return;\n  }\n  return yifferSessionCookie.slice(cookieName.length + 1);\n}\n", "export interface DBResponse<T> {\n  isError: boolean;\n  errorMessage: string;\n  errorCode?: string;\n  result?: T;\n  sql?: string;\n  insertId?: number;\n}\n\n// T should be an array with the responses expected in order\nexport async function queryDbMultiple<T>(\n  urlBase: string,\n  queries: { query: string; params?: any[] }[]\n): Promise<DBResponse<T>> {\n  const response = await fetch(`${urlBase}/new-api/query-db-multiple`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(queries),\n  });\n\n  if (!response.ok) {\n    return {\n      isError: true,\n      errorMessage: 'Error connecting to server',\n    };\n  } else {\n    const responseContent = await response.json();\n    return responseContent as DBResponse<T>;\n  }\n}\n\nexport async function queryDb<T>(\n  urlBase: string,\n  query: string,\n  params: any[] = []\n): Promise<DBResponse<T>> {\n  const response = await fetch(`${urlBase}/new-api/query-db`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query,\n      params,\n    }),\n  });\n\n  if (!response.ok) {\n    return {\n      isError: true,\n      errorMessage: 'Error connecting to server',\n    };\n  } else {\n    const responseContent = await response.json();\n    return responseContent as DBResponse<T>;\n  }\n}\n", "import { json, TypedResponse } from '@remix-run/cloudflare';\nimport { DBResponse } from './database-facade';\nimport { HANDLED_ERR_MSG } from '~/routes/error';\nimport * as Sentry from '@sentry/browser';\n\nexport type ApiResponse<T = void> = {\n  success: boolean;\n  error: string | null;\n  data?: T;\n};\n\nexport type ApiError = {\n  error?: DBResponse<any>;\n  logMessage: string;\n  context?: { [key: string]: any };\n};\n\n// Logs and throws an error to be caught by error boundary. Use for server errors.\nexport async function processApiError(\n  prependMessage: string | undefined,\n  err: ApiError,\n  context?: { [key: string]: any }\n): Promise<never> {\n  logApiError(prependMessage, {\n    ...err,\n    context: {\n      ...(err.context || {}),\n      ...(context || {}),\n    },\n  });\n\n  throw new Error(HANDLED_ERR_MSG);\n}\n\n// Use this when not wanting to throw an error (when you want\n// to show a nice error message to the user), but still need to log it.\nexport function logApiError(\n  prependMessage: string | undefined,\n  err: ApiError,\n  context?: { [key: string]: any }\n) {\n  const fullErrMsg = prependMessage\n    ? prependMessage + ' >> ' + err.logMessage\n    : err.logMessage;\n\n  console.log('ERROR, message: ', fullErrMsg);\n  console.log(err);\n\n  const extra: any = {\n    ...(err.context || {}),\n    ...(context || {}),\n  };\n  if (err.error) {\n    extra.dbResponse = err.error;\n  }\n\n  Sentry.captureMessage(fullErrMsg, {\n    extra,\n    level: 'error',\n  });\n}\n\n// Log a message when something fails drastically but there's no error object\nexport function logApiErrorMessage(message: string, context?: { [key: string]: any }) {\n  Sentry.captureMessage(message, {\n    extra: {\n      ...(context || {}),\n    },\n    level: 'error',\n  });\n}\n\n// Quality of life, save some lines of code\nexport function makeDbErr(\n  err: DBResponse<any>,\n  message: string,\n  context?: { [key: string]: any }\n): ApiError {\n  return {\n    error: err,\n    logMessage: message,\n    context: context || {},\n  };\n}\n\n// Quality of life, save some lines of code. Same as above but wrapped in {err}\nexport function makeDbErrObj(\n  err: DBResponse<any>,\n  message: string,\n  context?: { [key: string]: any }\n): { err: ApiError } {\n  return {\n    err: {\n      error: err,\n      logMessage: message,\n      context: context || {},\n    },\n  };\n}\n\n// This is for front-end errors that are thrown and thus not handled by\n// the API's error handling. Not to be called from anything other than\n// an error boundary.\nexport function logErrorBoundaryException(err: Error) {\n  console.log('Error boundary captured and logging exception!');\n  console.log(err);\n  Sentry.captureException(err, {\n    tags: {\n      errorBoundary: 'true',\n    },\n  });\n}\n\n// Wraps an api error with an additional level of message, plus optional context fields\nexport function wrapApiError(\n  err: ApiError,\n  message: string,\n  additionalContext?: { [key: string]: any }\n): ApiError {\n  const newErr = {\n    ...err,\n    logMessage: message + ' >> ' + err.logMessage,\n  };\n  if (additionalContext) {\n    newErr.context = {\n      ...(err.context || {}),\n      ...additionalContext,\n    };\n  }\n\n  return newErr;\n}\n\n// Use when we want to not throw \"ugly\" to an error boundary, but rather display\n// this generic error message typically in an infobox instead. Use this in submit\n// routes where we don't want the user to lose all their \"work\" if something fails.\n// Eg. comic upload, mod applications form, and other places where they've spent\n// time filling out a form and don't want to just lose all their work.\nexport function create500Json(message?: string): TypedResponse<ApiResponse> {\n  return json(\n    {\n      error:\n        message ||\n        'Server error. Site admins have been notified of and will look into it.',\n      success: false,\n    },\n    { status: 500 }\n  );\n}\n\n// Use when the user has made an error, meaning it's not a server error. Message\n// should typically always be shown in an infobox.\nexport function create400Json(message: string): TypedResponse<ApiResponse> {\n  return json(\n    {\n      error: message,\n      success: false,\n    },\n    { status: 400 }\n  );\n}\n\n// Same as create400Json, but with any status code. For example, 401 for failed auth.\nexport function createAnyErrorCodeJson(\n  code: number,\n  message: string\n): TypedResponse<ApiResponse> {\n  return json(\n    {\n      error: message,\n      success: false,\n    },\n    { status: code }\n  );\n}\n\n// This exists because it returns the correct response type,\n// allowing us to infer a single type with useActionData<typeof action>()\n// in the actual component.\nexport function createSuccessJson(data?: any): TypedResponse<ApiResponse> {\n  return json(\n    {\n      success: true,\n      error: null,\n      data: data,\n    },\n    { status: 200 }\n  );\n}\n\n// Put this in all api routes that don't support GET requests, otherwise\n// we'll get an exception for \"not exporting a get route\".\n// Like this: export { noGetRoute } as loader\nexport async function noGetRoute() {\n  return new Response('Cannot GET this route', { status: 405 });\n}\n", "import InfoBox from '~/components/InfoBox';\nimport { useEffect } from 'react';\nimport { logErrorBoundaryException } from '~/utils/request-helpers';\nimport { isRouteErrorResponse, useRouteError } from '@remix-run/react';\n\nexport const HANDLED_ERR_MSG = 'HANDLED server error';\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  return isRouteErrorResponse(error) ? (\n    <CatchBoundary status={error.data} />\n  ) : (\n    <ErrorBoundaryInner error={error} />\n  );\n}\n\nfunction CatchBoundary({ status }: { status?: number }) {\n  if (status === 404) {\n    return (\n      <div>\n        <h1>Not found</h1>\n        <pre>404 - could not find the resource you were looking for!</pre>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>{status}</h1>\n      <pre>Something went wrong!</pre>\n    </div>\n  );\n}\n\n// TODO: Verify working\nfunction ErrorBoundaryInner({ error }: { error: any }) {\n  useEffect(() => {\n    // If the message is handledErrMsg, then it's an api error that\n    // has already been logged to Sentry. Otherwise, it's a front-end\n    // crash that should be logged.\n    if (error && error.message !== HANDLED_ERR_MSG) {\n      logErrorBoundaryException(error);\n    }\n  }, [error]);\n\n  return (\n    <div role=\"alert\">\n      <InfoBox variant=\"error\" showIcon disableElevation className=\"mx-auto w-fit\">\n        Something went wrong in this beloved admin panel of ours :(\n      </InfoBox>\n\n      {['clientMessage', 'message', 'errorCode'].map(errField => {\n        if (error[errField]) {\n          return (\n            <p className=\"mt-4 p-4 bg-theme1-primaryTrans max-w-xl mx-auto\">\n              {error[errField]}\n            </p>\n          );\n        }\n      })}\n    </div>\n  );\n}\n", "import { useState } from 'react';\nimport { MdCancel, MdCheckCircle, MdError, MdInfo, MdWarning } from 'react-icons/md';\n\ntype InfoBoxProps = {\n  variant: 'info' | 'success' | 'error' | 'warning';\n  text?: string;\n  title?: string;\n  showIcon?: Boolean;\n  closable?: Boolean;\n  boldText?: Boolean;\n  centerText?: Boolean;\n  disableElevation?: Boolean;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nexport default function InfoBox({\n  variant = 'info',\n  title,\n  text,\n  showIcon = false,\n  closable = false,\n  boldText = true,\n  centerText = false,\n  disableElevation = false,\n  children,\n  className = '',\n  ...props\n}: InfoBoxProps) {\n  const [hidden, setHidden] = useState(false);\n  let variantClassname = '';\n  let Icon = null;\n\n  switch (variant) {\n    case 'info':\n      variantClassname = 'from-status-info1 to-status-info2 ';\n      Icon = MdInfo;\n      break;\n    case 'error':\n      variantClassname = 'from-red-strong-300 to-status-error2 ';\n      Icon = MdError;\n      break;\n    case 'success':\n      variantClassname = 'from-theme1-darker to-theme2-darker ';\n      Icon = MdCheckCircle;\n      break;\n    case 'warning':\n      variantClassname = 'from-status-warn1 to-status-warn2 ';\n      Icon = MdWarning;\n      break;\n  }\n\n  let fullClassname = `px-6 py-4 flex flex-row justify-between items-center gap-2\n    rounded ${disableElevation ? '' : 'shadow-md'} bg-gradient-to-r \n    text-white ${variantClassname} ${className}`;\n\n  if (boldText) {\n    fullClassname += ' font-semibold';\n  }\n\n  if (hidden) {\n    fullClassname += ' hidden';\n  }\n\n  const textClassName = centerText ? 'text-center' : '';\n\n  return (\n    <div className={fullClassname} {...props}>\n      {showIcon && <Icon size={36} className=\"-ml-2 flex-shrink-0 w-8 md:w-auto\" />}\n      <div className={`${textClassName} flex flex-col flex-grow`}>\n        {title ? <p className=\"text-xl\">{title}</p> : undefined}\n        {text ? <p>{text}</p> : undefined}\n        {children}\n      </div>\n      {closable && (\n        <MdCancel\n          size={24}\n          className=\"cursor-pointer flex-shrink-0 w-5 md:w-auto\"\n          onClick={() => setHidden(true)}\n        />\n      )}\n    </div>\n  );\n}\n", "import { useFetcher } from '@remix-run/react';\nimport {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nconst themes = {\n  light: 'light',\n  dark: 'dark',\n};\n\nconst prefersDarkMQ = '(prefers-color-scheme: dark)';\n\nfunction getPreferredTheme() {\n  return window.matchMedia(prefersDarkMQ).matches ? themes.dark : themes.light;\n}\n\ninterface IThemeContext {\n  theme: string | null;\n  setTheme: Dispatch<SetStateAction<string | null>>;\n}\n\nconst ThemeContext = createContext<IThemeContext>({\n  theme: null,\n  setTheme: () => {},\n});\n\ntype ThemeProviderProps = {\n  specifiedTheme?: string;\n  children: React.ReactNode;\n};\n\nfunction ThemeProvider({ specifiedTheme, children }: ThemeProviderProps) {\n  const [theme, setTheme] = useState(() => {\n    if (specifiedTheme) {\n      if (isTheme(specifiedTheme)) {\n        return specifiedTheme;\n      }\n      return null;\n    }\n    if (typeof window !== 'object') {\n      return null;\n    }\n    return getPreferredTheme();\n  });\n\n  const persistTheme = useFetcher();\n  // TODO: remove this when persistTheme is memoized properly\n  const persistThemeRef = useRef(persistTheme);\n  useEffect(() => {\n    persistThemeRef.current = persistTheme;\n  }, [persistTheme]);\n\n  const mountRun = useRef(false);\n\n  useEffect(() => {\n    if (!mountRun.current) {\n      mountRun.current = true;\n      return;\n    }\n    if (!theme) {\n      return;\n    }\n\n    persistThemeRef.current.submit(\n      { theme },\n      { action: 'api/set-theme', method: 'post' }\n    );\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>{children}</ThemeContext.Provider>\n  );\n}\n\nfunction useTheme(): [string | null, Dispatch<SetStateAction<string | null>>] {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n\n  return [context.theme, context.setTheme];\n}\n\nfunction isTheme(theme: string | null) {\n  return theme !== null && Object.values(themes).includes(theme);\n}\n\nconst clientThemeCode = `\n  ;(() => {\n    const theme = window.matchMedia(${JSON.stringify(prefersDarkMQ)}).matches\n      ? 'dark'\n      : 'light';\n    const cl = document.documentElement.classList;\n    const themeAlreadyApplied = cl.contains('light') || cl.contains('dark');\n    if (themeAlreadyApplied) {\n      // this script shouldn't exist if the theme is already applied!\n      console.warn(\n        \"Theme bug\",\n      );\n    } else {\n      cl.add(theme);\n    }\n  })();\n`;\n\nfunction NonFlashOfWrongThemeEls({ ssrTheme }: { ssrTheme: boolean }) {\n  return (\n    <>\n      {ssrTheme ? null : <script dangerouslySetInnerHTML={{ __html: clientThemeCode }} />}\n    </>\n  );\n}\n\nexport { ThemeProvider, useTheme, isTheme, NonFlashOfWrongThemeEls };\n", "import { createCookieSessionStorage } from '@remix-run/cloudflare';\nimport { isTheme } from './theme-provider';\n\nconst themeStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'dev-yiffer-theme',\n    secure: false, // TODO:\n    sameSite: 'lax',\n    path: '/',\n    httpOnly: false, // TODO:\n  },\n});\n\nasync function getThemeSession(request: Request) {\n  const session = await themeStorage.getSession(request.headers.get('Cookie'));\n\n  return {\n    getTheme: function (): string {\n      const themeVal = session.get('theme');\n      return isTheme(themeVal) ? themeVal : null;\n    },\n    setTheme: function (theme: string | null) {\n      return session.set('theme', theme);\n    },\n    commit: async function (): Promise<string> {\n      return themeStorage.commitSession(session);\n    },\n  };\n}\n\nexport { getThemeSession };\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { Form } from '@remix-run/react';\nimport Link from '~/components/Link';\nimport { redirectIfLoggedIn } from '~/utils/loaders';\n\nexport async function loader(args: LoaderFunctionArgs) {\n  await redirectIfLoggedIn(args);\n  return null;\n}\n\nexport default function ForgottenPassword() {\n  return (\n    <Form method=\"post\" className=\"max-w-xs mx-auto\">\n      <h1 className=\"text-3xl\">Forgotten password</h1>\n\n      <p>Content here.</p>\n\n      <Link href=\"/login\" text=\"Log in instead\" className=\"mb-4\" />\n      <br />\n      <Link href=\"/signup\" text=\"Sign up instead\" />\n    </Form>\n  );\n}\n", "import { Link as RemixLink } from '@remix-run/react';\nimport React from 'react';\n\ntype LinkProps = {\n  href: string;\n  text: string;\n  newTab?: boolean;\n  Icon?: React.ElementType;\n  IconRight?: React.ElementType;\n  className?: string;\n};\n\nexport default function Link({\n  href,\n  text,\n  newTab,\n  Icon,\n  IconRight,\n  className,\n  ...props\n}: LinkProps) {\n  const linkClass = `\n    w-fit h-fit text-blue-weak-200 dark:text-blue-strong-300 font-semibold\n    bg-gradient-to-r from-blue-weak-200 to-blue-weak-200\n    dark:from-blue-strong-300 dark:to-blue-strong-300 bg-no-repeat\n    focus:no-underline cursor-pointer\n    ${className}\n  `;\n\n  // NOTE that there are a few lines regarding links in `main.css`.\n  // These special things are not supported in tailwind yet.\n\n  if (href.includes('http')) {\n    // external link\n    // eslint-disable-next-line react/jsx-no-target-blank\n    return (\n      <a\n        href={href}\n        target={newTab ? '_blank' : '_self'}\n        rel={newTab ? 'noreferrer' : undefined}\n        className={linkClass}\n        style={{ paddingBottom: '1px' }}>\n\n        {text}\n      </a>);\n\n  } else {\n    // internal link\n    return (\n      <RemixLink\n        to={href}\n        target={newTab ? '_blank' : '_self'}\n        rel={newTab ? 'noreferrer' : undefined}\n        className={linkClass}\n        style={{ paddingBottom: '1px' }}\n        prefetch=\"intent\"\n        {...props}>\n\n        {Icon ? <Icon style={{ marginRight: '4px' }} /> : undefined}\n        {text}\n        {IconRight ? <IconRight style={{ marginLeft: '4px' }} /> : undefined}\n      </RemixLink>);\n\n  }\n}", "import { LoaderFunctionArgs, redirect } from '@remix-run/cloudflare';\nimport { getUserSession } from './auth.server';\n\n// A way to get the user session. Can be awaited as a normal func,\n// but can also be exported directly if a route needs no other loader.\n// Like this: export { authLoader as loader }\nexport async function authLoader(args: LoaderFunctionArgs) {\n  const userSession = await getUserSession(args.request, args.context.JWT_CONFIG_STR);\n  return userSession;\n}\n\nexport async function redirectIfNotLoggedIn(args: LoaderFunctionArgs) {\n  const user = await authLoader(args);\n  if (!user) throw redirect('/');\n  return user;\n}\n\nexport async function redirectIfLoggedIn(args: LoaderFunctionArgs) {\n  const user = await authLoader(args);\n  if (user) throw redirect('/');\n  return user;\n}\n\nexport async function redirectIfNotMod(args: LoaderFunctionArgs) {\n  const user = await authLoader(args);\n  if (user?.userType !== 'moderator' && user?.userType !== 'admin') {\n    throw redirect('/');\n  }\n  return user;\n}\n\nexport async function redirectIfNotAdmin(args: LoaderFunctionArgs) {\n  const user = await authLoader(args);\n  if (user?.userType !== 'admin') {\n    throw redirect('/');\n  }\n  return user;\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { MdHome } from 'react-icons/md';\nimport YifferLink from '~/components/Link';\nimport { authLoader } from '~/utils/loaders';\n\nexport async function loader(args: LoaderFunctionArgs) {\n  return await authLoader(args);\n}\n\nexport default function Index() {\n  const user = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h1 className=\"text-center\">Contribute</h1>\n      <p className=\"text-center mx-auto\">\n        <YifferLink href=\"https://yiffer.xyz\" text=\"To main page\" Icon={MdHome} />\n      </p>\n\n      <div className=\"max-w-4xl mx-auto mt p-4 grid gap-4 grid-cols-1 sm:grid-cols-2 sm:gap-8 sm:p-8\">\n        <ContributionCard\n          title=\"Upload a comic yourself\"\n          description=\"Add files yourself, in addition to specifying artist, tags, and more\"\n          href=\"upload\"\n        />\n        <ContributionCard\n          title=\"Suggest a comic\"\n          description=\"Suggest a comic for the mod team to upload, providing links and what information you can\"\n          href=\"suggest-comic\"\n        />\n        <ContributionCard\n          title=\"Your contributions\"\n          description=\"See the status and history of your previous contributions\"\n          href=\"your-contributions\"\n          disabled={!user}\n        >\n          <p className=\"text-center\">Requires login</p>\n        </ContributionCard>\n        <ContributionCard\n          title=\"Contributions scoreboard\"\n          description=\"See the monthly and all-time top contributors\"\n          href=\"scoreboard\"\n        />\n        <ContributionCard\n          title=\"Become a mod\"\n          description=\"Be a part of the incredible team that keeps this site running!\"\n          href=\"join-us\"\n        />\n        <ContributionCard\n          title=\"Feedback &amp; Support\"\n          description=\"Have any tips for how Yiffer.xyz could be better? Need help?\"\n          href=\"feedback\"\n        />\n      </div>\n    </div>\n  );\n}\n\ntype ContributionCardProps = {\n  title: string;\n  description: string;\n  href: string;\n  disabled?: boolean;\n  children?: React.ReactNode;\n};\n\nfunction ContributionCard({\n  title,\n  description,\n  href,\n  disabled,\n  children,\n}: ContributionCardProps) {\n  return disabled ? (\n    <div\n      className=\"rounded-lg p-4 h-full flex flex-col \n      justify-evenly bg-white dark:bg-gray-300 border-2 border-gray-900 dark:border-0\"\n    >\n      <h2 className=\"text-theme2-darker dark:text-theme2-dark text-xl text-center font-semibold\">\n        {title}\n      </h2>\n      <p className=\"text-black dark:text-text-dark text-center\">{description}</p>\n      {children}\n    </div>\n  ) : (\n    <Link\n      to={'/contribute/' + href}\n      prefetch=\"intent\"\n      style={{ backgroundImage: 'none' }}\n    >\n      <div\n        className=\"rounded-lg shadow-md p-4 hover:shadow-lg h-full flex flex-col \n          justify-evenly bg-white dark:bg-gray-400\"\n      >\n        <h2 className=\"text-theme2-darker dark:text-theme2-dark text-xl text-center font-semibold\">\n          {title}\n        </h2>\n        <p className=\"text-black dark:text-text-dark text-center\">{description}</p>\n      </div>\n    </Link>\n  );\n}\n", "import { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { logout } from '../utils/auth.server';\n\nexport async function action(args: ActionFunctionArgs) {\n  return logout(args.context.JWT_CONFIG_STR);\n}\n\nexport function loader(args: LoaderFunctionArgs) {\n  return logout(args.context.JWT_CONFIG_STR);\n}\n", "import { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport InfoBox from '~/components/InfoBox';\nimport Link from '~/components/Link';\nimport TextInputUncontrolled from '~/components/TextInput/TextInputUncontrolled';\nimport { signup } from '~/utils/auth.server.js';\nimport { redirectIfLoggedIn } from '~/utils/loaders';\nimport {\n  create400Json,\n  createAnyErrorCodeJson,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport default function Signup() {\n  const fetcher = useGoodFetcher({\n    method: 'post',\n    toastError: false,\n  });\n\n  return (\n    <fetcher.Form className=\"max-w-xs mx-auto\">\n      <h1 className=\"text-3xl\">Sign up</h1>\n\n      <div className=\"mt-4 flex flex-col gap-6\">\n        <TextInputUncontrolled\n          name=\"username\"\n          label=\"Username\"\n          autocomplete=\"username\"\n          className=\"mb-6 mt-4\"\n          type=\"text\"\n        />\n\n        <TextInputUncontrolled\n          name=\"email\"\n          label=\"Email\"\n          autocomplete=\"email\"\n          className=\"mb-6\"\n          type=\"text\"\n        />\n\n        <TextInputUncontrolled\n          name=\"password\"\n          label=\"Password - at least 6 characters\"\n          autocomplete=\"password\"\n          type=\"password\"\n          className=\"mb-6\"\n        />\n\n        <TextInputUncontrolled\n          name=\"password2\"\n          label=\"Repeat password\"\n          autocomplete=\"password\"\n          type=\"password\"\n          className=\"mb-6\"\n        />\n      </div>\n\n      {fetcher?.isError && (\n        <InfoBox variant=\"error\" text={fetcher.errorMessage} className=\"my-2\" />\n      )}\n\n      <div className=\"flex\">\n        <LoadingButton\n          text=\"Sign up\"\n          color=\"primary\"\n          variant=\"contained\"\n          className=\"mt-2 mb-6\"\n          fullWidth\n          isLoading={fetcher.isLoading}\n          isSubmit\n        />\n      </div>\n\n      <Link href=\"/login\" text=\"Log in instead\" />\n      <br />\n      <Link href=\"/forgotten-password\" text=\"Forgotten password?\" />\n    </fetcher.Form>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  await redirectIfLoggedIn(args);\n  return null;\n}\n\nexport async function action(args: ActionFunctionArgs) {\n  const reqBody = await args.request.formData();\n  const {\n    username: formUsername,\n    email: formEmail,\n    password: formPassword,\n    password2: formPassword2,\n  } = Object.fromEntries(reqBody);\n\n  if (!formUsername || !formEmail || !formPassword || !formPassword2) {\n    return create400Json('Missing fields');\n  }\n\n  const username = formUsername.toString().trim();\n  const email = formEmail.toString().trim();\n  const password = formPassword.toString().trim();\n  const password2 = formPassword2.toString().trim();\n\n  const validationErr = getSignupValidationError(username, email, password, password2);\n  if (validationErr) {\n    return create400Json(validationErr);\n  }\n  const { err, redirect, errorMessage } = await signup(\n    username,\n    email,\n    password,\n    args.context.DB_API_URL_BASE,\n    args.context.JWT_CONFIG_STR,\n    args.context.POSTMARK_TOKEN\n  );\n\n  if (err) {\n    return processApiError('Error in /signup', err, { username, email });\n  }\n  if (errorMessage) {\n    return createAnyErrorCodeJson(401, errorMessage);\n  }\n  throw redirect;\n}\n\nfunction getSignupValidationError(\n  username: string,\n  email: string,\n  password: string,\n  password2: string\n): string | undefined {\n  if (!username) {\n    return 'Missing username';\n  }\n  if (username.length < 2 || username.length > 25) {\n    return 'Username must be between 2 and 25 characters';\n  }\n  if (!password || !password2) {\n    return 'Missing password';\n  }\n  if (password !== password2) {\n    return 'Passwords do not match';\n  }\n  if (password.length < 6) {\n    return 'Password must be at least 6 characters';\n  }\n  if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n    return 'Invalid email';\n  }\n\n  return;\n}\n", "import { useMemo } from 'react';\nimport Button, { ButtonProps } from './Button';\n\ntype LoadingButtonProps = {\n  isLoading: boolean;\n} & ButtonProps;\n\nexport default function LoadingButton({\n  isLoading,\n  variant = 'contained',\n  color = 'primary',\n  onClick,\n  ...props\n}: LoadingButtonProps) {\n  const className = (isLoading ? 'opacity-70 ' : '') + props.className;\n\n  // Memoize to avoid resetting the spinner spinny on every render\n  const Spinner = useMemo(() => getSpinner(variant, color), [variant, color]);\n\n  return (\n    <Button\n      {...props}\n      startIcon={isLoading ? Spinner : props.startIcon}\n      variant={variant}\n      color={color}\n      className={className}\n      onClick={isLoading ? () => {} : onClick}\n    />\n  );\n}\n\nconst getSpinner = (\n  variant: 'contained' | 'outlined' | 'naked',\n  color: 'primary' | 'error'\n) => {\n  let borderRightColor = '';\n\n  if (variant === 'contained') {\n    borderRightColor = 'border-r-white';\n  } else {\n    borderRightColor = 'dark:border-r-white';\n    if (color === 'error') {\n      borderRightColor += ' border-r-red-weak-200';\n      if (variant !== 'naked') borderRightColor += ' hover:border-r-white';\n    } else {\n      borderRightColor += ' border-r-blue-weak-200';\n      if (variant !== 'naked') borderRightColor += ' hover:border-r-white';\n    }\n  }\n\n  return () => (\n    <div\n      className={`mr-3 w-4 h-4 animate-spin border-solid border-transparent ${borderRightColor} border border-r-2 rounded-full`}\n    />\n  );\n};\n", "export interface ButtonProps {\n  text: string;\n  variant?: 'contained' | 'outlined' | 'naked';\n  color?: 'primary' | 'error';\n  fullWidth?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  disabled?: boolean;\n  startIcon?: React.ElementType;\n  endIcon?: React.ElementType;\n  noPadding?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n  buttonRef?: React.Ref<HTMLButtonElement>;\n  isSubmit?: boolean;\n}\n\nexport default function Button({\n  text = '',\n  variant = 'contained',\n  color = 'primary',\n  fullWidth = false,\n  onClick,\n  disabled = false,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  noPadding = false, // TODO: Maybe a temporary hack. It's for IconButton.\n  className,\n  style = {},\n  buttonRef,\n  isSubmit = false,\n  ...props\n}: ButtonProps) {\n  let variantClassname = '';\n\n  const paddingString = noPadding\n    ? ''\n    : variant === 'contained' || variant === 'naked'\n    ? ' py-1.25 px-3 '\n    : ' py-1 px-2.75 ';\n\n  if (variant === 'contained' && color === 'primary') {\n    variantClassname += ` bg-blue-weak-200 hover:bg-blue-weak-100 focus:bg-blue-weak-100\n      dark:bg-blue-strong-200 dark:hover:bg-blue-strong-100 dark:focus:bg-blue-strong-100\n      shadow hover:shadow-md focus:shadow-md\n      text-white ${paddingString} `;\n  }\n\n  if (variant === 'outlined' && color === 'primary') {\n    variantClassname += ` bg-transparent \n      hover:bg-blue-weak-200 focus:bg-blue-weak-200\n      dark:hover:bg-blue-strong-200 dark:focus:bg-blue-strong-200\n      hover:text-white focus:text-white border-2 border-blue-weak-200 dark:border-blue-strong-200\n      dark:text-white text-blue-weak-200 ${paddingString} `;\n  }\n\n  if (variant === 'naked' && color === 'primary') {\n    variantClassname += ` bg-transparent dark:text-white text-blue-weak-200 ${paddingString} `;\n  }\n\n  if (variant === 'contained' && color === 'error') {\n    variantClassname += ` bg-red-weak-200 hover:bg-red-weak-100 focus:bg-red-weak-100\n      dark:bg-red-strong-200 dark:hover:bg-red-strong-100 dark:focus:bg-red-strong-100\n      shadow hover:shadow-md focus:shadow-md\n      text-white ${paddingString} `;\n  }\n\n  if (variant === 'outlined' && color === 'error') {\n    variantClassname += ` bg-transparent hover:bg-red-weak-200 focus:bg-red-weak-200\n      dark:hover:bg-red-strong-200 dark:focus:bg-red-strong-200\n      hover:text-white focus:text-white dark:text-white text-red-weak-200\n      border-2 border-red-weak-200 dark:border-red-strong-200 ${paddingString} `;\n  }\n\n  if (variant === 'naked' && color === 'error') {\n    variantClassname += ` bg-transparent dark:text-white text-red-weak-200 ${paddingString} `;\n  }\n\n  if (disabled && variant === 'contained') {\n    variantClassname += ` bg-gray-800 hover:bg-gray-800 dark:bg-gray-600 dark:hover:bg-gray-600\n    text-gray-900 dark:text-gray-700 cursor-not-allowed `;\n  }\n\n  if (disabled && variant === 'outlined') {\n    variantClassname += ` bg-transparent border-2 border-gray-800 dark:border-gray-600\n    text-gray-800 dark:text-gray-700 cursor-not-allowed\n    hover:bg-transparent focus:bg-transparent dark:hover:bg-transparent dark:focus:bg-transparent\n    hover:text-gray-800 focus:text-gray-800 hover:border-gray-800 focus:border-gray-800`;\n  }\n\n  if (disabled && variant === 'naked') {\n    variantClassname += ` text-gray-800 dark:text-gray-700 cursor-not-allowed `;\n  }\n\n  const widthClass = noPadding ? '' : fullWidth ? 'w-full' : 'w-fit';\n\n  const fullClassName =\n    `rounded ${\n      noPadding ? '' : 'py-1.5 px-3'\n    } font-bold flex flex-nowrap justify-center ` +\n    `items-center transition-all duration-100 break-all text-sm` +\n    ` ${widthClass}` +\n    ` ${variantClassname} ${className} `;\n\n  return (\n    <button\n      className={fullClassName}\n      disabled={disabled}\n      onClick={onClick}\n      {...props}\n      style={style}\n      ref={buttonRef}\n      type={isSubmit ? 'submit' : 'button'}\n    >\n      {StartIcon ? <StartIcon style={text ? { marginRight: '4px' } : {}} /> : undefined}{' '}\n      {text} {EndIcon ? <EndIcon style={text ? { marginLeft: '4px' } : {}} /> : undefined}\n    </button>\n  );\n}\n", "import { MdClear } from 'react-icons/md';\nimport { useMemo } from 'react';\n\nexport type BaseTextInputProps = {\n  label: string;\n  name: string;\n  type?: 'text' | 'password';\n  autocomplete?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  clearable?: boolean;\n  helperText?: string;\n  errorText?: string;\n  error?: boolean;\n  className?: string;\n};\n\ntype FullTextInputProps = {\n  value: string;\n  onChange: (newVal: string) => void;\n  onBlur?: () => void;\n} & BaseTextInputProps;\n\nexport default function TextInput({\n  value,\n  onChange,\n  label,\n  name,\n  type = 'text',\n  autocomplete,\n  placeholder,\n  disabled = false,\n  clearable = false,\n  helperText = '',\n  errorText = '',\n  error = false,\n  className = '',\n  onBlur,\n  ...props\n}: FullTextInputProps) {\n  function clear() {\n    onChange('');\n  }\n  const borderClass = useMemo(() => {\n    if (error) {\n      return 'border-red-strong-300';\n    }\n    if (disabled) {\n      return 'border-gray-800 dark:border-gray-600';\n    }\n    return '';\n  }, [error, disabled]);\n\n  const borderStyle = borderClass\n    ? ''\n    : { borderImage: 'linear-gradient(to right, #9aebe7, #adfee0) 1' };\n\n  return (\n    <div className={`flex flex-col ${className}`} {...props}>\n      {label && (\n        <label className={`${error ? 'text-red-strong-300' : ''} text-sm`}>{label}</label>\n      )}\n      <div className={`-mt-1 relative`}>\n        <input\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          type={type}\n          name={name}\n          autoComplete={autocomplete || undefined}\n          placeholder={placeholder}\n          disabled={disabled}\n          className={`w-full bg-transparent p-1.5 outline-none border border-0 border-b-2 \n            border-gradient-to-r placeholder-gray-800 dark:placeholder-gray-700 ${borderClass}`}\n          style={{\n            appearance: 'textfield',\n            ...borderStyle,\n          }}\n          onBlur={onBlur}\n        />\n        {clearable && value && (\n          <span\n            onClick={clear}\n            className=\"absolute block top-1.5 right-2 hover:cursor-pointer\"\n          >\n            <MdClear className=\"text-red hover:fill-theme2-darker\" />\n            {/* TODO: make ^ work */}\n          </span>\n        )}\n      </div>\n      {errorText && error && (\n        <p className=\"text-sm py-0.5 px-2 text-red-strong-300\">{errorText}</p>\n      )}\n      {!(errorText && error) && helperText && (\n        <label className=\"text-sm py-0.5 px-2\">{helperText}</label>\n      )}\n    </div>\n  );\n}\n", "import TextInput, { BaseTextInputProps } from './TextInput';\nimport { useMemo, useState } from 'react';\n\ntype UncontrolledTextInputProps = {\n  validatorFunc?: (val: string) => boolean;\n  onErrorChange?: (newVal: boolean) => void;\n} & BaseTextInputProps;\n\nexport default function TextInputUncontrolled({\n  label,\n  name,\n  type = 'text',\n  autocomplete,\n  placeholder = '',\n  disabled = false,\n  clearable = false,\n  helperText = '',\n  errorText = '',\n  error = false,\n  validatorFunc,\n  onErrorChange,\n  className = '',\n  ...props\n}: UncontrolledTextInputProps) {\n  const [state, setState] = useState('');\n  const [hasBeenBlurred, setHasBeenBlurred] = useState(false);\n  const [lastErrorUpdate, setLastErrorUpdate] = useState(false);\n\n  const isInternalError = useMemo(() => {\n    if (validatorFunc) {\n      const isError = !validatorFunc(state);\n      if (onErrorChange && isError !== lastErrorUpdate) {\n        onErrorChange(isError);\n        setLastErrorUpdate(isError);\n      }\n      return isError;\n    }\n    return false;\n  }, [state, validatorFunc]);\n\n  const shouldShowError = error || (hasBeenBlurred && isInternalError);\n\n  return (\n    <TextInput\n      value={state}\n      onChange={newVal => setState(newVal)}\n      label={label}\n      name={name}\n      type={type}\n      placeholder={placeholder}\n      disabled={disabled}\n      clearable={clearable}\n      helperText={helperText}\n      errorText={shouldShowError ? errorText : ''}\n      error={shouldShowError}\n      className={className}\n      onBlur={() => setHasBeenBlurred(true)}\n      {...props}\n    />\n  );\n}\n", "import { FormEncType, FormMethod, SubmitOptions, useFetcher } from '@remix-run/react';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { ApiResponse } from './request-helpers';\nimport { useTheme } from './theme-provider';\n\n// For some reason, Remix doesn't export SubmitTarget, so redeclare it...\ntype RemixSubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | {\n      [name: string]: string;\n    }\n  | null;\n\ntype ToastFetcherArgs<T = void> = {\n  url?: string;\n  method?: FormMethod;\n  onFinish?: () => void;\n  toastSuccessMessage?: string;\n  preventToastClose?: boolean;\n  toastError?: boolean;\n  fetchGetOnLoad?: boolean;\n  encType?: FormEncType;\n};\n\n// Not a huge fan of the way Remix' fetchers are called.\n// Imo, much cleaner to initialize it with a url and method, and\n// then only call on it with the optional body.\n// Also wrapping our own ApiResponse inside internally here,\n// Just to have a bit more control over types.\n// A little gotcha: This MUST be used with stuff returning ApiResponse,\n// but it'll be very evident if it's not, stuff will fail fast.\n\n// The submit function can be awaited, OR an onFinish callback can be passed in.\nexport function useGoodFetcher<T = void>({\n  url,\n  method = 'get',\n  onFinish,\n  toastSuccessMessage,\n  preventToastClose = false,\n  toastError = true, // TODO: Probably flip this\n  fetchGetOnLoad = false,\n  encType,\n}: ToastFetcherArgs<T>) {\n  const [hasFetchedOnce, setHasFetchedOnce] = useState(false);\n  const fetcher = useFetcher<ApiResponse<T>>();\n  const fetchingStateRef = useRef<'is-fetching' | 'not-started'>('not-started');\n  const [theme] = useTheme();\n\n  useEffect(() => {\n    // Technically if it's a POST, the fetch itself is done at 'loading',\n    // but waiting until 'idle' is better UX, to avoid a flicker.\n    const stateToCheck = 'idle';\n\n    // This happens when using fetcher.Form, as the submit method is not actively\n    // invoked in that case.\n    const didJustInitiateNativeFormSubmit =\n      fetcher.state === 'submitting' && fetchingStateRef.current === 'not-started';\n    if (didJustInitiateNativeFormSubmit) {\n      fetchingStateRef.current = 'is-fetching';\n      return;\n    }\n\n    const didJustFinish =\n      fetcher.state === stateToCheck && fetchingStateRef.current === 'is-fetching';\n\n    if (didJustFinish) {\n      fetchingStateRef.current = 'not-started';\n      setHasFetchedOnce(true);\n      if (onFinish) {\n        onFinish();\n      }\n\n      if (fetcher.data) {\n        if (toastSuccessMessage && fetcher.data.success) {\n          showSuccessToast(toastSuccessMessage, preventToastClose, theme);\n        } else if (toastError && fetcher.data.error) {\n          showErrorToast(fetcher.data.error, theme);\n        }\n      }\n    }\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    // The component can unmount before the state has gone 'idle'\n    // (which can happen when revalidation automatically happens after)\n    // a post, during which it'll be 'loading' and then whichever component\n    // using useGoodFetcher unmounts because of changes.\n    // If this happens and we should've toasted, do so!\n    // \uD83D\uDEA8Weakness! If the component (intentionally) unmounts this way but\n    // the fetch result is an ERROR, this will still toast success.\n    // This, however, seems to be a bad situation. On errors, either crash\n    // and let an error boundary catch, or keep whatever form it is open without\n    // unmounting it.\n    return () => {\n      if (fetchingStateRef.current === 'is-fetching' && toastSuccessMessage) {\n        showSuccessToast(toastSuccessMessage, preventToastClose, theme);\n      }\n    };\n  }, [toastSuccessMessage, theme]);\n\n  useEffect(() => {\n    if (fetchGetOnLoad && method === 'get') {\n      submit();\n    }\n  }, [method, url, fetchGetOnLoad]);\n\n  let returnData: T | undefined;\n  // @ts-ignore\n  if (fetcher.data?.data) {\n    // @ts-ignore\n    returnData = fetcher.data.data;\n  }\n\n  const submit = useCallback(\n    (body?: RemixSubmitTarget) => {\n      fetchingStateRef.current = 'is-fetching';\n      const submitOptions: SubmitOptions = {\n        method: method,\n      };\n      if (url) submitOptions.action = url;\n      if (encType) submitOptions.encType = encType;\n      fetcher.submit(body ?? null, submitOptions);\n    },\n    [fetcher, method]\n  );\n\n  // Because Remix FORCES you to use useEffect to respond to fetches,\n  // which is just terrible. With this, you can await a fetch.\n  // Preferable alternative to this: use the onFinish callback.\n  const awaitSubmit = useCallback(\n    async (body?: RemixSubmitTarget) => {\n      submit(body);\n      while (fetchingStateRef.current === 'is-fetching') {\n        await new Promise(resolve => setTimeout(resolve, 25));\n      }\n    },\n    [submit]\n  );\n\n  // Allows for using fetcher.Form for uncontrolled forms, but without\n  // having to supply url and action, since we already have that from fetcher init.\n  const form = useCallback(\n    ({ children, className }: { children: React.ReactNode; className?: string }) => {\n      return (\n        <fetcher.Form action={url} method={method} className={className}>\n          {children}\n        </fetcher.Form>\n      );\n    },\n    []\n  );\n\n  return {\n    data: returnData,\n    isError: !!fetcher.data?.error && fetcher.state === 'idle',\n    errorMessage: fetcher.data?.error || '',\n    success: fetcher.data?.success,\n    isLoading: fetcher.state !== 'idle',\n    hasFetchedOnce: hasFetchedOnce,\n    submit: submit,\n    awaitSubmit: awaitSubmit,\n    Form: form,\n  };\n}\n\nexport function showSuccessToast(\n  message: string,\n  preventClose: boolean,\n  theme: string | null\n) {\n  toast.success(message, {\n    position: toast.POSITION.TOP_RIGHT,\n    theme: theme === 'dark' ? 'dark' : 'light',\n    className(context?) {\n      return context?.defaultClassName + ' dark:bg-gray-300';\n    },\n    style: { width: 'fit-content', minHeight: 'auto' },\n    autoClose: preventClose ? false : 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    progress: undefined,\n    closeButton: false,\n  });\n}\n\nexport function showErrorToast(message: string, theme: string | null) {\n  toast.error(message, {\n    position: toast.POSITION.TOP_RIGHT,\n    theme: theme === 'dark' ? 'dark' : 'light',\n    className(context?) {\n      return context?.defaultClassName + ' dark:bg-gray-300';\n    },\n    style: { width: 'fit-content', minHeight: 'auto' },\n    autoClose: false,\n    hideProgressBar: true,\n    closeOnClick: true,\n    progress: undefined,\n    closeButton: false,\n  });\n}\n", "import { LoaderFunctionArgs, redirect } from '@remix-run/cloudflare';\nimport { Link, Outlet, useLoaderData, useMatches } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport { MdChevronRight } from 'react-icons/md';\nimport { ArtistTiny, ComicTiny, Tag } from '~/types/types';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport useWindowSize from '~/utils/useWindowSize';\nimport { getAllArtists } from './api/funcs/get-artists';\nimport { getAllComicNamesAndIDs } from './api/funcs/get-comics';\nimport { getAllTags } from './api/funcs/get-tags';\nimport { processApiError } from '~/utils/request-helpers';\n\nexport type GlobalAdminContext = {\n  comics: ComicTiny[];\n  artists: ArtistTiny[];\n  tags: Tag[];\n};\n\nexport { ErrorBoundary, CatchBoundary } from './error';\n\nconst navWidth = 200;\nconst mobileClosedBarW = 24;\nconst mobileClosedBarTailwindUnits = mobileClosedBarW / 4;\n\nexport default function Admin({}) {\n  const { isLgUp, width } = useWindowSize();\n  const globalContext = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <Sidebar alwaysShow={isLgUp} delay={!width} />\n      <div\n        className=\"pb-4 px-6 lg:px-8\"\n        style={{ marginLeft: isLgUp ? navWidth : mobileClosedBarW }}\n      >\n        <Outlet context={globalContext} />\n      </div>\n    </>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  await redirectIfNotMod(args);\n\n  const url = new URL(args.request.url);\n  if (url.pathname === '/admin' || url.pathname === '/admin/') {\n    return redirect('/admin/dashboard');\n  }\n\n  const [comicsRes, artistsRes, tagsRes] = await Promise.all([\n    getAllComicNamesAndIDs(urlBase, {\n      modifyNameIncludeType: true,\n      includeUnlisted: true,\n      includeThumbnailStatus: true,\n    }),\n    getAllArtists(urlBase, {\n      includePending: true,\n      includeBanned: true,\n      modifyNameIncludeType: true,\n    }),\n    getAllTags(urlBase),\n  ]);\n\n  if (comicsRes.err || !comicsRes.comics) {\n    return processApiError(\n      'Error getting comics in mod panel',\n      comicsRes.err || { logMessage: 'Comics returned as null' }\n    );\n  }\n  if (artistsRes.err || !artistsRes.artists) {\n    return processApiError(\n      'Error getting artists in mod panel',\n      artistsRes.err || { logMessage: 'Artists returned as null' }\n    );\n  }\n  if (tagsRes.err || !tagsRes.tags) {\n    return processApiError(\n      'Error getting tags in mod panel',\n      tagsRes.err || { logMessage: 'Tags returned as null' }\n    );\n  }\n\n  const globalContext: GlobalAdminContext = {\n    comics: comicsRes.comics,\n    artists: artistsRes.artists,\n    tags: tagsRes.tags,\n  };\n\n  return globalContext;\n}\n\nfunction Sidebar({ alwaysShow, delay }: { alwaysShow: boolean; delay: boolean }) {\n  const matches = useMatches();\n  const [isOpen, setIsOpen] = useState(alwaysShow);\n  const [lastRoute, setLastRoute] = useState('');\n\n  function isRoute(matchString: string) {\n    return matches.some(match => {\n      return match.pathname.includes(`/admin/${matchString}`);\n    });\n  }\n\n  useEffect(() => {\n    setLastRoute(matches[matches.length - 1].pathname);\n  }, [matches]);\n\n  // Close on navigation - aka a link selected\n  useEffect(() => {\n    setIsOpen(alwaysShow);\n  }, [lastRoute]);\n\n  // Prevent initially rendering wrong until the window size has been determined\n  if (delay) {\n    return <></>;\n  }\n\n  return (\n    <>\n      {/* backdrop, close when clicking outside, will only show when small screens & sidebar open */}\n      {!delay && !alwaysShow && (\n        <div\n          className={`fixed inset-0 bg-black bg-opacity-30 z-10 transition-opacity duration-150 ${\n            isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'\n          }`}\n          onClick={() => setIsOpen(false)}\n        />\n      )}\n\n      <div\n        className={`flex flex-row h-screen bg-white w-fit fixed -mt-4 shadow-lg lg:dark:shadow-2xl z-20\n        dark:bg-gray-200 lg:dark:bg-gray-200 transition-width duration-150`}\n        style={{\n          width: navWidth,\n          marginLeft: isOpen || alwaysShow ? 0 : mobileClosedBarW - navWidth,\n        }}\n      >\n        {!alwaysShow && <MobileExpander isOpen={isOpen} setIsOpen={setIsOpen} />}\n\n        <div className=\"flex flex-col w-full\">\n          <p className=\"pt-6 pr-4 pb-4 pl-4 italic\">\n            Yiffer.xyz admin hub, sidebar style wip\n          </p>\n          <SidebarLink\n            href=\"/admin/dashboard\"\n            text=\"Action dashboard\"\n            isSelected={isRoute('dashboard')}\n          />\n          <SidebarLink\n            href=\"/admin/pending-comics\"\n            text=\"Pending comics\"\n            isSelected={isRoute('pending-comics')}\n          />\n          <SidebarLink\n            href=\"/admin/comics\"\n            text=\"Comic manager\"\n            isSelected={isRoute('comics')}\n          />\n          <SidebarLink\n            href=\"/admin/artists\"\n            text=\"Artist manager\"\n            isSelected={isRoute('artists')}\n          />\n          <SidebarLink\n            href=\"/admin/tags\"\n            text=\"Tag manager\"\n            isSelected={isRoute('tags')}\n          />\n          <SidebarLink\n            href=\"/admin/thumbnails\"\n            text=\"Update thumbnails\"\n            isSelected={isRoute('thumbnails')}\n          />\n          <SidebarLink href=\"/admin/stats\" text=\"Stats\" isSelected={isRoute('stats')} />\n        </div>\n      </div>\n    </>\n  );\n}\n\ninterface SidebarLinkProps {\n  href: string;\n  text: string;\n  isSelected?: boolean;\n  isIndented?: boolean;\n}\n\nconst selectedClassname = 'bg-theme1-dark dark:bg-blue-strong-200 text-white';\nfunction SidebarLink({\n  href,\n  text,\n  isSelected = false,\n  isIndented = false,\n}: SidebarLinkProps) {\n  const className = isSelected ? selectedClassname : '';\n  return (\n    <div className={className}>\n      <Link to={href}>\n        <div\n          className={`\n            font-bold py-2 px-4 hover:bg-theme1-primaryTrans dark:hover:bg-blue-trans transition-background duration-100\n            ${isIndented ? 'pr-4 pl-10' : 'px-4'}\n          `}\n        >\n          {text}\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nfunction MobileExpander({\n  isOpen,\n  setIsOpen,\n}: {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}) {\n  return (\n    <div\n      className={`bg-theme1-primary dark:bg-gray-150 h-full w-${\n        mobileClosedBarTailwindUnits + 2\n      } \n            -right-[1px] top-0 hover:cursor-pointer hover:bg-theme1-dark transition-opacity\n            flex items-center justify-center absolute ${\n              !isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'\n            }`}\n      onClick={() => setIsOpen(true)}\n    >\n      <MdChevronRight className=\"ml-[6px]\" style={{ height: 24, width: 24 }} />\n    </div>\n  );\n}\n", "import { useEffect, useState } from 'react';\n\n// Tailwind's breakpoints:\n// sm 640\n// md 768\n// lg 1024\n// xl 1280\n// 2xl 1536\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState<{\n    width?: number;\n    height?: number;\n    isMobile: boolean;\n    isSmUp: boolean;\n    isMdUp: boolean;\n    isLgUp: boolean;\n    isXlUp: boolean;\n  }>({\n    width: undefined,\n    height: undefined,\n    isMobile: false,\n    isSmUp: false,\n    isMdUp: false,\n    isLgUp: false,\n    isXlUp: false,\n  });\n\n  useEffect(() => {\n    if (!window) {\n      return;\n    }\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        isMobile: window.innerWidth < 640,\n        isSmUp: window.innerWidth >= 640,\n        isMdUp: window.innerWidth >= 768,\n        isLgUp: window.innerWidth >= 1024,\n        isXlUp: window.innerWidth >= 1280,\n      });\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n", "import { ArtistTiny } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\nexport async function getAllArtists(\n  urlBase: string,\n  options: {\n    modifyNameIncludeType?: boolean;\n    includePending?: boolean;\n    includeBanned?: boolean;\n  }\n): Promise<{ err?: ApiError; artists?: ArtistTiny[] }> {\n  let query = `SELECT\n      id,\n      name,\n      patreonName,\n      e621Name,\n      isPending,\n      isBanned\n    FROM artist\n    WHERE isRejected = 0`;\n\n  if (!options.includePending) {\n    query += ' AND IsPending = 0';\n  }\n  if (!options.includeBanned) {\n    query += ' AND IsBanned = 0';\n  }\n\n  const artistsRes = await queryDb<ArtistTiny[]>(urlBase, query);\n  if (artistsRes.isError) {\n    return makeDbErrObj(artistsRes, 'Error getting artists from db', options);\n  }\n\n  const boolArtists = artistsRes.result!.map(artist => {\n    artist.isPending = !!artist.isPending;\n    artist.isBanned = !!artist.isBanned;\n    return artist;\n  });\n\n  if (!options.modifyNameIncludeType) return { artists: boolArtists };\n\n  const mappedArtists = boolArtists.map(artist => {\n    if (artist.isPending) {\n      artist.name = artist.name + ' (PENDING)';\n    }\n    if (artist.isBanned) {\n      artist.name = artist.name + ' (BANNED)';\n    }\n    return artist;\n  });\n\n  return { artists: mappedArtists };\n}\n", "import { ComicPublishStatus, ComicTiny } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\ntype DbComicTiny = {\n  name: string;\n  id: number;\n  publishStatus: ComicPublishStatus;\n  hasHighresThumbnail?: 0 | 1;\n  published?: string;\n};\n\nexport async function getAllComicNamesAndIDs(\n  urlBase: string,\n  options?: {\n    modifyNameIncludeType?: boolean;\n    includeRejectedList?: boolean;\n    includeUnlisted?: boolean;\n    includeThumbnailStatus?: boolean; // TODO: Remove once all thumbnails are fixed\n  }\n): Promise<{ err?: ApiError; comics?: ComicTiny[] }> {\n  const thumbnailQuery = options?.includeThumbnailStatus\n    ? ', hasHighresThumbnail, published'\n    : '';\n\n  let query =\n    'SELECT name, id, publishStatus' +\n    thumbnailQuery +\n    ' FROM comic WHERE publishStatus != \"rejected\"';\n\n  if (!options?.includeRejectedList) {\n    query += ' AND publishStatus != \"rejected-list\" ';\n  }\n  if (!options?.includeUnlisted) {\n    query += ' AND publishStatus != \"unlisted\" ';\n  }\n\n  const response = await queryDb<DbComicTiny[]>(urlBase, query);\n  if (response.isError || !response.result) {\n    return makeDbErrObj(response, 'Error  getting comics', options);\n  }\n\n  const comics: ComicTiny[] = response.result.map(comic => ({\n    name: comic.name,\n    id: comic.id,\n    publishStatus: comic.publishStatus,\n    temp_published: comic.published,\n    temp_hasHighresThumbnail: comic.hasHighresThumbnail === 1,\n  }));\n\n  if (!options?.modifyNameIncludeType) return { comics };\n\n  const mappedComics = addStateToComicNames(comics);\n  return { comics: mappedComics };\n}\n\nexport async function getComicsByArtistId(\n  urlBase: string,\n  artistId: number,\n  options?: {\n    includeUnlisted: boolean;\n  }\n): Promise<{ comics?: ComicTiny[]; err?: ApiError }> {\n  const query = `SELECT\n      name, id, publishStatus\n    FROM comic\n    WHERE artist = ?\n      AND publishStatus != \"rejected\"\n      AND publishStatus != \"rejected-list\"\n      ${options?.includeUnlisted ? '' : 'AND publishStatus != \"unlisted\"'}`;\n\n  const dbRes = await queryDb<ComicTiny[]>(urlBase, query, [artistId]);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting comics by artist', { artistId, options });\n  }\n\n  const mappedComics = addStateToComicNames(dbRes.result as ComicTiny[]);\n  return { comics: mappedComics };\n}\n\nfunction addStateToComicNames(comics: ComicTiny[]): ComicTiny[] {\n  const mappedComics = comics.map(comic => {\n    if (comic.publishStatus === 'uploaded') {\n      comic.name = comic.name + ' (UPLOADED)';\n    }\n    if (comic.publishStatus === 'pending') {\n      comic.name = comic.name + ' (PENDING)';\n    }\n    if (comic.publishStatus === 'scheduled') {\n      comic.name = comic.name + ' (SCHEDULED)';\n    }\n    if (comic.publishStatus === 'unlisted') {\n      comic.name = comic.name + ' (UNLISTED)';\n    }\n    return comic;\n  });\n\n  return mappedComics;\n}\n", "import { queryDb } from '~/utils/database-facade';\nimport { Tag } from '~/types/types';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\nexport async function getAllTags(urlBase: string): Promise<{\n  err?: ApiError;\n  tags?: Tag[];\n}> {\n  let keywordsQuery = 'SELECT id, keywordName AS name FROM keyword';\n  const dbRes = await queryDb<Tag[]>(urlBase, keywordsQuery);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting all tags');\n  }\n  return { tags: dbRes.result };\n}\n", "import { MdStar } from 'react-icons/md';\nimport Link from '~/components/Link';\n\nexport default function Index() {\n  return (\n    <div>\n      <h1 className=\"text-center\">Yes hello this is Yiffer</h1>\n      <p className=\"text-center mx-auto\">\n        <Link\n          href=\"/contribute\"\n          text=\"Contribute!\"\n          Icon={MdStar}\n          style={{ fontSize: '6rem' }}\n        />\n      </p>\n    </div>\n  );\n}\n", "import { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport InfoBox from '~/components/InfoBox';\nimport Link from '~/components/Link';\nimport TextInputUncontrolled from '~/components/TextInput/TextInputUncontrolled';\nimport { login } from '~/utils/auth.server.js';\nimport { redirectIfLoggedIn } from '~/utils/loaders';\nimport {\n  create400Json,\n  createAnyErrorCodeJson,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport default function Signup() {\n  const fetcher = useGoodFetcher({\n    method: 'post',\n    toastError: false,\n  });\n\n  return (\n    <fetcher.Form className=\"max-w-xs mx-auto\">\n      <h1 className=\"text-3xl\">Log in</h1>\n\n      <div className=\"mt-4 flex flex-col gap-6\">\n        <TextInputUncontrolled\n          name=\"username\"\n          label=\"Username or email\"\n          autocomplete=\"username\"\n          className=\"mb-6 mt-4\"\n          type=\"text\"\n        />\n\n        <TextInputUncontrolled\n          name=\"password\"\n          label=\"Password - at least 6 characters\"\n          autocomplete=\"password\"\n          type=\"password\"\n          className=\"mb-6\"\n        />\n      </div>\n\n      {fetcher.isError && (\n        <InfoBox variant=\"error\" text={fetcher.errorMessage} className=\"my-2\" />\n      )}\n\n      <div className=\"flex\">\n        <LoadingButton\n          text=\"Log in\"\n          color=\"primary\"\n          variant=\"contained\"\n          className=\"mt-2 mb-6\"\n          fullWidth\n          isLoading={fetcher.isLoading}\n          isSubmit\n        />\n      </div>\n\n      <Link href=\"/signup\" text=\"Sign up instead\" />\n      <br />\n      <Link href=\"/forgotten-password\" text=\"Forgotten password?\" />\n    </fetcher.Form>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  await redirectIfLoggedIn(args);\n  return null;\n}\n\nexport async function action(args: ActionFunctionArgs) {\n  const reqBody = await args.request.formData();\n  const { username: formUsername, password: formPassword } = Object.fromEntries(reqBody);\n\n  if (!formUsername || !formPassword) {\n    return create400Json('Missing username or password');\n  }\n\n  const username = formUsername.toString().trim();\n  const password = formPassword.toString().trim();\n\n  const { err, redirect, errorMessage } = await login(\n    username,\n    password,\n    args.context.DB_API_URL_BASE,\n    args.context.JWT_CONFIG_STR\n  );\n\n  if (err) {\n    return processApiError('Error in /login', err, { username, password });\n  }\n  if (errorMessage) {\n    return createAnyErrorCodeJson(401, errorMessage);\n  }\n  throw redirect;\n}\n", "import { queryDb } from '~/utils/database-facade';\nimport { ComicProblem, ComicSuggestion, ContributedComic, TagSuggestion } from '.';\nimport type { ContributionStatus } from '.';\nimport { CONTRIBUTION_POINTS } from '~/types/contributions';\nimport { ComicPublishStatus, ComicUploadVerdict } from '~/types/types';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\ntype DbContributedComic = {\n  name: string;\n  timestamp: string;\n  publishStatus: ComicPublishStatus;\n  verdict?: ComicUploadVerdict;\n  modComment?: string;\n  artistName: string;\n  numberOfPages: number;\n  numberOfKeywords: number;\n  originalNameIfRejected?: string;\n  originalArtistIfRejected?: string;\n};\n\nfunction publishStatusToContributionStatus(\n  publishStatus: ComicPublishStatus\n): ContributionStatus {\n  switch (publishStatus) {\n    case 'uploaded':\n      return 'pending';\n    case 'rejected':\n    case 'rejected-list':\n      return 'rejected';\n    default:\n      return 'approved';\n  }\n}\n\nexport async function getYourContributedComics(\n  urlBase: string,\n  userId: number\n): Promise<{ err?: ApiError; contributions?: ContributedComic[] }> {\n  const query = `SELECT \n      comic.name,\n      timestamp,\n      publishStatus,\n      verdict,\n      modComment,\n      artist.name AS artistName,\n      numberOfPages,\n      COUNT(*) AS numberOfKeywords,\n      comicmetadata.originalNameIfRejected,\n      comicmetadata.originalArtistIfRejected\n    FROM comic \n    INNER JOIN artist ON (artist.Id = comic.Artist)\n    INNER JOIN comicmetadata ON (comicmetadata.comicId = comic.id)\n    LEFT JOIN comickeyword ON (comickeyword.comicId = comic.id)\n    WHERE comicmetadata.uploadUserId = ?\n    GROUP BY comic.name, timestamp, publishStatus, verdict, modComment, artistName, numberOfPages`;\n\n  const dbComicsRes = await queryDb<DbContributedComic[]>(urlBase, query, [userId]);\n  if (dbComicsRes.isError || !dbComicsRes.result) {\n    return makeDbErrObj(dbComicsRes, 'Error getting your contributed comics', { userId });\n  }\n\n  const comics: ContributedComic[] = dbComicsRes.result.map(dbComic => {\n    const { points, description } = dbComic.verdict\n      ? CONTRIBUTION_POINTS.comicUpload[dbComic.verdict]\n      : { points: 0, description: undefined };\n\n    let comicName = dbComic.name;\n    let artistName = dbComic.artistName;\n    if (dbComic.publishStatus === 'rejected') {\n      if (dbComic.originalNameIfRejected) {\n        comicName = dbComic.originalNameIfRejected || dbComic.name;\n      }\n      if (dbComic.originalArtistIfRejected) {\n        artistName = dbComic.originalArtistIfRejected;\n      }\n    }\n\n    return {\n      comicName: comicName,\n      artistName: artistName,\n      status: publishStatusToContributionStatus(dbComic.publishStatus),\n      timestamp: dbComic.timestamp,\n      points,\n      pointsDescription: description,\n      modComment: dbComic.modComment,\n      type: 'ContributedComic',\n      numberOfPages: dbComic.numberOfPages,\n      numberOfKeywords: dbComic.numberOfKeywords,\n    };\n  });\n\n  return { contributions: comics };\n}\n\ntype DbTagSuggestion = {\n  comicName: string;\n  status: ContributionStatus;\n  timestamp: string;\n  tagName: string;\n  isAdding: boolean;\n};\n\nexport async function getYourTagSuggestions(\n  urlBase: string,\n  userId: number\n): Promise<{ err?: ApiError; contributions?: TagSuggestion[] }> {\n  const query = `SELECT \n      comic.Name AS comicName,\n      status,\n      timestamp,\n      keyword.KeywordName AS tagName,\n      isAdding\n    FROM keywordsuggestion\n    INNER JOIN comic ON (comic.Id = keywordsuggestion.ComicId)\n    INNER JOIN keyword ON (keyword.Id = keywordsuggestion.KeywordId)\n    WHERE userId = ?;\n  `;\n\n  const dbTagSuggRes = await queryDb<DbTagSuggestion[]>(urlBase, query, [userId]);\n\n  if (dbTagSuggRes.isError || !dbTagSuggRes.result) {\n    return makeDbErrObj(dbTagSuggRes, 'Error getting your tag suggestions', { userId });\n  }\n\n  const tagSuggestions: TagSuggestion[] = dbTagSuggRes.result.map(dbTagSuggestion => ({\n    comicName: dbTagSuggestion.comicName,\n    status: dbTagSuggestion.status,\n    timestamp: dbTagSuggestion.timestamp,\n    suggestion: `${dbTagSuggestion.isAdding ? 'ADD' : 'REMOVE'} ${\n      dbTagSuggestion.tagName\n    }`,\n    points: dbTagSuggestion.status === 'approved' ? 5 : 0,\n    pointsDescription: undefined,\n    modComment: undefined,\n    type: 'TagSuggestion',\n  }));\n\n  return { contributions: tagSuggestions };\n}\n\ntype DbComicProblem = {\n  comicName: string;\n  status: ContributionStatus;\n  timestamp: string;\n  problemCategory: string;\n};\n\nexport async function getYourComicProblems(\n  urlBase: string,\n  userId: number\n): Promise<{ err?: ApiError; contributions?: ComicProblem[] }> {\n  const query = `SELECT\n      comic.Name AS comicName,\n      Status AS status,\n      Timestamp AS timestamp,\n      comicproblemcategory.Name AS problemCategory\n    FROM comicproblem\n    INNER JOIN comic ON (comic.Id = comicproblem.ComicId)\n    INNER JOIN comicproblemcategory ON (comicproblemcategory.Id = comicproblem.ProblemCategoryId)\n    WHERE UserId = ?;\n  `;\n\n  const dbProblemsRes = await queryDb<DbComicProblem[]>(urlBase, query, [userId]);\n\n  if (dbProblemsRes.isError || !dbProblemsRes.result) {\n    return makeDbErrObj(dbProblemsRes, 'Error getting your comic problems', { userId });\n  }\n\n  const comicProblems: ComicProblem[] = dbProblemsRes.result.map(dbComicProblem => ({\n    comicName: dbComicProblem.comicName,\n    status: dbComicProblem.status,\n    timestamp: dbComicProblem.timestamp,\n    points: dbComicProblem.status === 'approved' ? 15 : undefined,\n    pointsDescription: undefined,\n    modComment: undefined,\n    type: 'ComicProblem',\n    problemCategory: dbComicProblem.problemCategory,\n  }));\n\n  return { contributions: comicProblems };\n}\n\ntype DbComicSuggestion = {\n  comicName: string;\n  status: ContributionStatus;\n  verdict?: 'good' | 'bad';\n  timestamp: string;\n  modComment?: string;\n};\n\nexport async function getYourComicSuggestions(\n  urlBase: string,\n  userId: number\n): Promise<{ err?: ApiError; contributions?: ComicSuggestion[] }> {\n  const query = `SELECT\n      Name AS comicName,\n      timestamp,\n      status,\n      verdict,\n      modComment\n    FROM comicsuggestion\n    WHERE UserId = ?;\n  `;\n\n  const dbSuggestionsRes = await queryDb<DbComicSuggestion[]>(urlBase, query, [userId]);\n\n  if (dbSuggestionsRes.isError || !dbSuggestionsRes.result) {\n    return makeDbErrObj(dbSuggestionsRes, 'Error getting your comic suggestions', {\n      userId,\n    });\n  }\n\n  const comicSuggestions: ComicSuggestion[] = dbSuggestionsRes.result.map(\n    dbComicSuggestion => ({\n      comicName: dbComicSuggestion.comicName,\n      status: dbComicSuggestion.status,\n      timestamp: dbComicSuggestion.timestamp,\n      points: dbComicSuggestion.verdict\n        ? CONTRIBUTION_POINTS.comicSuggestion[dbComicSuggestion.verdict].points\n        : 0,\n      pointsDescription: dbComicSuggestion.verdict\n        ? CONTRIBUTION_POINTS.comicSuggestion[dbComicSuggestion.verdict].description\n        : undefined,\n      modComment: dbComicSuggestion.modComment,\n      type: 'ComicSuggestion',\n    })\n  );\n\n  return { contributions: comicSuggestions };\n}\n", "export const CONTRIBUTION_POINTS = {\n  tagSuggestion: {\n    points: 5,\n  },\n  comicProblem: {\n    points: 10,\n  },\n  comicSuggestion: {\n    good: {\n      points: 30,\n      description: undefined,\n    },\n    bad: {\n      points: 15,\n      description: 'Lacking links/info',\n    },\n  },\n  comicUpload: {\n    excellent: {\n      points: 200,\n      description: undefined,\n      scoreListDescription: 'Uploaded comic, excellent info',\n      actionDashboardDescription: 'Excellent info',\n      modPanelDescription: 'No issues found',\n    },\n    'minor-issues': {\n      points: 150,\n      description: 'Minor issues',\n      scoreListDescription:\n        'Uploaded comic, minor issues found (incorrect category/classification, wrong name)',\n      actionDashboardDescription: 'Minor issues',\n      modPanelDescription:\n        'Minor issues (e.g. incorrect category/classification, name spelling error)',\n    },\n    'major-issues': {\n      points: 100,\n      description: 'Major issues',\n      scoreListDescription:\n        'Uploaded comic, major issues found (lacking artist links, poor tagging, bad thumbnail)',\n      actionDashboardDescription: 'Major issues',\n      modPanelDescription:\n        'Major issues (e.g. lacking artist links, poor tagging, bad thumbnail)',\n    },\n    'page-issues': {\n      points: 50,\n      description: 'Page issues',\n      scoreListDescription:\n        'Uploaded comic, page issues (resolution, ordering, some premium pages uploaded)',\n      actionDashboardDescription: 'Page issues',\n      modPanelDescription:\n        'Page issues (poor resolution, wrong ordering, some premium pages uploaded)',\n    },\n    terrible: {\n      points: 15,\n      description: 'Major page issues',\n      scoreListDescription:\n        'Uploaded comic, major page issues (most/all pages needed replacing)',\n      actionDashboardDescription: 'Major page issues',\n      modPanelDescription: 'Major page issues (most/all pages needs replacing)',\n    },\n    'rejected-list': {\n      points: 0,\n      description: undefined,\n      scoreListDescription: '',\n      actionDashboardDescription: 'Rejected, added to ban list',\n      modPanelDescription:\n        'Reject submission due to the nature of the comic - add to ban list (click to read more)',\n    },\n    rejected: {\n      points: 0,\n      description: undefined,\n      scoreListDescription: '',\n      actionDashboardDescription: 'Rejected',\n      modPanelDescription:\n        'Reject submission due to poorly provided info in the submission (click to read more)',\n    },\n  },\n};\n", "import { addContributionPoints } from '~/routes/api/funcs/add-contribution-points';\nimport { UserSession } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErr, makeDbErrObj, wrapApiError } from '~/utils/request-helpers';\nimport { NewArtist, UploadBody } from '.';\n\nexport async function processUpload(\n  urlBase: string,\n  uploadBody: UploadBody,\n  user: UserSession | null,\n  userIP?: string\n): Promise<ApiError | undefined> {\n  const skipApproval = !!user && ['moderator', 'admin'].includes(user?.userType);\n\n  if (uploadBody.newArtist) {\n    const { artistId, err } = await createArtist(\n      urlBase,\n      uploadBody.newArtist,\n      skipApproval\n    );\n    if (err) return wrapApiError(err, 'Error uploading', { uploadBody });\n    uploadBody.artistId = artistId;\n  }\n\n  let { err, comicId } = await createComic(urlBase, uploadBody, skipApproval);\n  if (err) return wrapApiError(err, 'Error uploading', { uploadBody });\n\n  err = await createComicMetadata(\n    urlBase,\n    comicId!,\n    uploadBody,\n    skipApproval,\n    user?.userId,\n    userIP\n  );\n  if (err) return wrapApiError(err, 'Error uploading', { uploadBody });\n\n  if (uploadBody.previousComic || uploadBody.nextComic) {\n    const err = await createComicLinks(urlBase, uploadBody, comicId!);\n    if (err) return wrapApiError(err, 'Error uploading', { uploadBody });\n  }\n\n  if (uploadBody.tagIds) {\n    const err = await createComicTags(urlBase, uploadBody.tagIds, comicId!);\n    if (err) return wrapApiError(err, 'Error uploading', { uploadBody });\n  }\n}\n\nasync function createComicTags(\n  urlBase: string,\n  tagIds: number[],\n  comicId: number\n): Promise<ApiError | undefined> {\n  let query = `\n    INSERT INTO comickeyword\n    (comicId, keywordId)\n    VALUES \n  `;\n  const params: number[] = [];\n\n  tagIds.forEach((tagId, index) => {\n    query += `(?, ?)`;\n    params.push(comicId, tagId);\n    if (index < tagIds.length - 1) {\n      query += ', ';\n    }\n  });\n\n  const dbRes = await queryDb(urlBase, query, params);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error creating comic tags');\n  }\n}\n\nasync function createComicLinks(\n  urlBase: string,\n  uploadBody: UploadBody,\n  comicId: number\n): Promise<ApiError | undefined> {\n  let query = `\n    INSERT INTO comiclink\n    (firstComic, lastComic)\n    VALUES (?, ?)\n  `;\n  let queryParams: any[] = [];\n\n  if (uploadBody.previousComic) {\n    queryParams.push(uploadBody.previousComic.id, comicId);\n  }\n  if (uploadBody.nextComic) {\n    queryParams.push(comicId, uploadBody.nextComic.id);\n  }\n  if (uploadBody.previousComic && uploadBody.nextComic) {\n    query += ', (?, ?)';\n  }\n\n  const dbRes = await queryDb(urlBase, query, queryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error creating comic links');\n  }\n}\n\nasync function createComicMetadata(\n  urlBase: string,\n  comicId: number,\n  uploadBody: UploadBody,\n  skipApproval: boolean,\n  userId?: number,\n  userIP?: string\n): Promise<ApiError | undefined> {\n  const query = `\n    INSERT INTO comicmetadata\n    (comicId, uploadUserId, uploadUserIP, uploadId, verdict)\n    VALUES (?, ?, ?, ?, ?)\n  `;\n\n  const values = [\n    comicId,\n    userId || null,\n    userIP || null,\n    uploadBody.uploadId,\n    skipApproval ? 'excellent' : null,\n  ];\n\n  const dbRes = await queryDb(urlBase, query, values);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error creating comic metadata');\n  }\n\n  if (skipApproval) {\n    const err = await addContributionPoints(urlBase, userId!, `comicUploadexcellent`);\n    if (err) {\n      return wrapApiError(err, 'Error adding contribution points for direct mod upload');\n    }\n  }\n}\n\nasync function createComic(\n  urlBase: string,\n  uploadBody: UploadBody,\n  skipApproval: boolean\n): Promise<{ comicId?: number; err?: ApiError }> {\n  const query = `\n    INSERT INTO comic\n    (name, cat, tag, state, numberOfPages, artist, publishStatus)\n    VALUES (?, ?, ?, ?, ?, ?, ?)\n  `;\n  const values = [\n    uploadBody.comicName.trim(),\n    uploadBody.classification,\n    uploadBody.category,\n    uploadBody.state,\n    uploadBody.numberOfPages,\n    uploadBody.artistId,\n    skipApproval ? 'pending' : 'uploaded',\n  ];\n\n  const result = await queryDb(urlBase, query, values);\n  if (result.isError) {\n    return makeDbErrObj(result, 'Error inserting comic');\n  }\n  if (!result.insertId) {\n    return makeDbErrObj(result, 'Error inserting comic: no insert ID');\n  }\n  return { comicId: result.insertId };\n}\n\nasync function createArtist(\n  urlBase: string,\n  newArtist: NewArtist,\n  skipApproval: boolean\n): Promise<{ artistId?: number; err?: ApiError | undefined }> {\n  const insertQuery = `\n    INSERT INTO artist (name, e621name, patreonName, isPending)\n    VALUES (?, ?, ?, ?)\n  `;\n  const insertValues = [\n    newArtist.artistName.trim(),\n    newArtist.e621Name ? newArtist.e621Name.trim() : null,\n    newArtist.patreonName ? newArtist.patreonName.trim() : null,\n    skipApproval ? 0 : 1,\n  ];\n  let dbRes = await queryDb(urlBase, insertQuery, insertValues);\n  const artistId = dbRes.insertId;\n\n  if (dbRes.isError || !artistId) {\n    return makeDbErrObj(dbRes, 'Error inserting artist');\n  }\n\n  if (newArtist.links && newArtist.links.length > 0) {\n    const err = await createArtistLinks(urlBase, newArtist, artistId);\n    if (err) {\n      return { err: wrapApiError(err, 'Error creating artist links') };\n    }\n  }\n\n  return { artistId };\n}\n\nasync function createArtistLinks(\n  urlBase: string,\n  newArtist: NewArtist,\n  newArtistId: number\n): Promise<ApiError | undefined> {\n  let filteredLinks = newArtist.links.filter(link => link.length > 0);\n  let linkInsertQuery = `INSERT INTO artistlink (ArtistId, LinkUrl) VALUES `;\n  const linkInsertValues = [];\n\n  for (let i = 0; i < filteredLinks.length; i++) {\n    linkInsertQuery += `(?, ?)`;\n    linkInsertValues.push(newArtistId, filteredLinks[i].trim());\n    if (i < newArtist.links.length - 1) {\n      linkInsertQuery += ', ';\n    }\n  }\n\n  const dbRes = await queryDb(urlBase, linkInsertQuery, linkInsertValues);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error inserting artist links');\n  }\n}\n", "import { format } from 'date-fns';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErr } from '~/utils/request-helpers';\n\nexport async function addContributionPoints(\n  urlBase: string,\n  userId: number | null,\n  pointColumn: string\n): Promise<ApiError | undefined> {\n  const yearMonth = format(new Date(), 'yyyy-MM');\n  const logCtx = { userId, pointColumn, yearMonth };\n\n  const getExistingPointsForMonthQuery = `\n    SELECT yearMonth FROM contributionpoints\n    WHERE userId = ? AND (yearMonth = ? OR yearMonth = 'all-time')\n  `;\n  const getExistingPointsForMonthQueryParams = [userId, yearMonth];\n  const existingDbRes = await queryDb<{ yearMonth: string }[]>(\n    urlBase,\n    getExistingPointsForMonthQuery,\n    getExistingPointsForMonthQueryParams\n  );\n\n  if (existingDbRes.isError) {\n    return makeDbErr(existingDbRes, 'Error adding contribution points', logCtx);\n  }\n\n  ['all-time', yearMonth].forEach(async timeVal => {\n    const existingPoints = existingDbRes.result!.filter(\n      entry => entry.yearMonth === timeVal\n    );\n\n    if (existingPoints.length === 0) {\n      const insertPointsQuery = `\n        INSERT INTO contributionpoints (userId, yearMonth, ${pointColumn})\n        VALUES (?, ?, 1)\n      `;\n      const insertPointsQueryParams = [userId, timeVal];\n      const insertDbRes = await queryDb(\n        urlBase,\n        insertPointsQuery,\n        insertPointsQueryParams\n      );\n      if (insertDbRes.isError) {\n        return makeDbErr(insertDbRes, 'Error adding contribution points', logCtx);\n      }\n    } else {\n      const updatePointsQuery = `\n        UPDATE contributionpoints\n        SET ${pointColumn} = ${pointColumn} + 1\n        WHERE userId = ? AND yearMonth = ?\n      `;\n      const updatePointsQueryParams = [userId, timeVal];\n      const updateDbRes = await queryDb(\n        urlBase,\n        updatePointsQuery,\n        updatePointsQueryParams\n      );\n      if (updateDbRes.isError) {\n        return makeDbErr(updateDbRes, 'Error updating contribution points', logCtx);\n      }\n    }\n  });\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport { createSuccessJson, processApiError } from '~/utils/request-helpers';\nimport { recalculatePublishingQueue } from '../funcs/publishing-queue';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await recalculatePublishingQueue(urlBase);\n  if (err) {\n    return processApiError('Error recalculating publishing queue from API endpoint', err);\n  }\n  return createSuccessJson();\n}\n", "import { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErr } from '~/utils/request-helpers';\n\ntype ComicInQueue = {\n  publishingQueuePos: number;\n  comicId: number;\n};\n\nexport async function moveComicInQueue(\n  urlBase: string,\n  comicId: number,\n  moveBy: 1 | -1\n): Promise<ApiError | undefined> {\n  const logCtx = { comicId, moveBy };\n  const getPosQuery = 'SELECT publishingQueuePos FROM comicmetadata WHERE comicId = ?';\n  const positionDbRes = await queryDb<{ publishingQueuePos: number }[]>(\n    urlBase,\n    getPosQuery,\n    [comicId]\n  );\n\n  if (positionDbRes.isError || !positionDbRes.result) {\n    return makeDbErr(positionDbRes, 'Error moving comic in publishing queue', logCtx);\n  }\n\n  const oldPos = positionDbRes.result[0].publishingQueuePos;\n\n  const moveComicQuery =\n    'UPDATE comicmetadata SET publishingQueuePos = ? WHERE comicId = ?';\n  const moveComicQueryParams = [oldPos + moveBy, comicId];\n\n  const moveOtherComicQuery =\n    'UPDATE comicmetadata SET publishingQueuePos = ? WHERE publishingQueuePos = ?';\n  const moveOtherComicQueryParams = [oldPos, oldPos + moveBy];\n\n  const moveOtherDbRes = await queryDb(\n    urlBase,\n    moveOtherComicQuery,\n    moveOtherComicQueryParams\n  );\n  if (moveOtherDbRes.isError) {\n    return makeDbErr(\n      moveOtherDbRes,\n      'Error moving other comic in publishing queue',\n      logCtx\n    );\n  }\n\n  const moveComicDbRes = await queryDb(urlBase, moveComicQuery, moveComicQueryParams);\n  if (moveComicDbRes.isError) {\n    return makeDbErr(\n      moveComicDbRes,\n      'Error moving this comic in publishing queue',\n      logCtx\n    );\n  }\n}\n\nexport async function recalculatePublishingQueue(\n  urlBase: string\n): Promise<ApiError | undefined> {\n  const query = `\n    SELECT publishingQueuePos, comicId\n    FROM comicmetadata INNER JOIN comic ON (comic.id = comicmetadata.comicId)\n    WHERE\n      publishStatus = 'scheduled'\n      AND publishDate IS NULL\n    ORDER BY publishingQueuePos ASC\n  `;\n\n  const queueDbRes = await queryDb<ComicInQueue[]>(urlBase, query);\n  if (queueDbRes.isError) {\n    return makeDbErr(queueDbRes, 'Error getting comics in queue');\n  }\n\n  let queue = queueDbRes.result as ComicInQueue[];\n  const comicsWithPos = queue.filter(comic => comic.publishingQueuePos !== null);\n  const comicsWithoutPos = queue.filter(comic => comic.publishingQueuePos === null);\n\n  const newQueue = comicsWithPos\n    .sort((a, b) => a.publishingQueuePos - b.publishingQueuePos)\n    .map((comic, index) => {\n      return {\n        ...comic,\n        publishingQueuePos: index + 1,\n      };\n    })\n    .concat(\n      comicsWithoutPos.map((comic, index) => {\n        return {\n          ...comic,\n          publishingQueuePos: comicsWithPos.length + index + 1,\n        };\n      })\n    );\n\n  // only update comics whose position changed\n  const comicsToUpdate = [];\n  for (const comic of queue) {\n    const newQueuePos = newQueue.find(\n      newComic => newComic.comicId === comic.comicId\n    )?.publishingQueuePos;\n    if (newQueuePos !== comic.publishingQueuePos) {\n      comicsToUpdate.push({\n        comicId: comic.comicId,\n        newQueuePos,\n      });\n    }\n  }\n\n  const updateQuery = `\n    UPDATE comicmetadata\n    SET publishingQueuePos = ?\n    WHERE comicId = ?\n  `;\n\n  const updatePromises = comicsToUpdate.map(comic =>\n    queryDb(urlBase, updateQuery, [comic.newQueuePos, comic.comicId])\n  );\n\n  const updateDbRes = await Promise.all(updatePromises);\n  for (const result of updateDbRes) {\n    if (result.isError) {\n      return makeDbErr(result, 'Error updating queue position of pending comic');\n    }\n  }\n}\n", "import { NewComicData } from '.';\nimport { useState } from 'react';\nimport useWindowSize from '~/utils/useWindowSize';\nimport { getFilesWithBase64 } from '~/utils/general';\nimport PageManager from '~/components/PageManager/PageManager';\nimport Button from '~/components/Buttons/Button';\nimport { MdClear } from 'react-icons/md';\nimport FileInput from '~/components/FileInput';\n\ntype Step3Props = {\n  comicData: NewComicData;\n  onUpdate: (newData: NewComicData) => void;\n};\n\nexport default function Step3Pagemanager({ comicData, onUpdate }: Step3Props) {\n  const { isMobile } = useWindowSize();\n  const [isClearingPages, setIsClearingPages] = useState(false);\n  const [isLoadingFileContents, setIsLoadingFileContents] = useState(false);\n\n  async function onFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.files) {\n      setIsLoadingFileContents(true);\n      const filesWithString = await getFilesWithBase64(event.target.files);\n      setIsLoadingFileContents(false);\n      onUpdate({ ...comicData, files: filesWithString });\n    }\n  }\n\n  return (\n    <>\n      <h4 className=\"mt-8\">Pages</h4>\n\n      {comicData.files.length === 0 && (\n        <FileInput onChange={onFileChange} multiple accept=\"image/*\" />\n      )}\n\n      {(comicData.files.length > 0 || isLoadingFileContents) && (\n        <p className=\"mb-2\">\n          {isMobile ? 'Tap' : 'Click'} an image to see it full size. Make sure the pages\n          are correctly ordered.\n        </p>\n      )}\n\n      {isLoadingFileContents && <p>Processing files...</p>}\n\n      {comicData.files.length > 0 && (\n        <>\n          <PageManager\n            files={comicData.files}\n            onChange={newFiles => onUpdate({ ...comicData, files: newFiles })}\n          />\n\n          {!isClearingPages && (\n            <Button\n              variant=\"outlined\"\n              text=\"Clear pages\"\n              onClick={() => setIsClearingPages(true)}\n              startIcon={MdClear}\n              className=\"mt-2\"\n            />\n          )}\n          {isClearingPages && (\n            <div className=\"flex flex-row gap-2 mt-2\">\n              <Button\n                variant=\"outlined\"\n                onClick={() => setIsClearingPages(false)}\n                text=\"Cancel\"\n                startIcon={MdClear}\n              />\n              <Button\n                text=\"Clear pages\"\n                color=\"error\"\n                onClick={() => {\n                  onUpdate({ ...comicData, files: [] });\n                  setIsClearingPages(false);\n                }}\n                startIcon={MdClear}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n", "export function capitalizeString(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport async function waitMillisec(millisec: number) {\n  return new Promise<void>(resolve => {\n    setTimeout(() => resolve(), millisec);\n  });\n}\n\nexport function randomString(i: number): string {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\n  for (let j = 0; j < i; j++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\nexport type FieldChange = {\n  field: string;\n  oldValue?: string;\n  newValue?: string;\n  newDataValue?: any;\n};\n\nexport type ComicImage = {\n  base64?: string;\n  url?: string;\n  file?: File;\n};\n\nexport async function getFilesWithBase64(files: FileList): Promise<ComicImage[]> {\n  const filePromises = Array.from(files).map(file => getFileWithBase64(file));\n  return Promise.all(filePromises);\n}\n\nexport async function getFileWithBase64(file: File): Promise<ComicImage> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.result) {\n        resolve({ base64: reader.result.toString(), file });\n      }\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nexport function isUsernameUrl(str: string): boolean {\n  if (str.includes('http:') || str.includes('https:') || str.includes('www.')) {\n    return true;\n  }\n  if (str.includes('.com') || str.includes('.net')) {\n    return true;\n  }\n\n  return false;\n}\n", "import { GridContextProvider, GridDropZone, GridItem, swap } from 'react-grid-dnd';\nimport { useMemo, useRef, useState } from 'react';\nimport useWindowSize from '~/utils/useWindowSize';\nimport { ComicImage } from '~/utils/general';\nimport { MdDelete } from 'react-icons/md';\nimport IconButton from '../Buttons/IconButton';\nimport Button from '../Buttons/Button';\n\nconst RATIO = Math.round(400 / 564);\nconst PAGE_NAME_HEIGHT = 40;\nconst PAGES_SPACING = 4;\n\ntype PageManagerProps = {\n  files: ComicImage[];\n  onChange: (newFiles: ComicImage[]) => void;\n};\n\nexport default function PageManager({ files, onChange }: PageManagerProps) {\n  const gridContainerRef = useRef<any>();\n  const { width, isMobile } = useWindowSize();\n  const [hoveredPageNum, setHoveredPageNum] = useState<number>();\n  const [isHalfSize, setIsHalfSize] = useState(false);\n  const [fullSizeImage, setFullSizeImage] = useState<ComicImage | undefined>(undefined);\n  const lastDragEndTime = useRef<number>(0);\n  const isDragging = useRef<boolean>(false);\n\n  let PAGE_IMG_HEIGHT = isMobile ? 100 : 160;\n  if (isHalfSize) PAGE_IMG_HEIGHT = PAGE_IMG_HEIGHT / 2;\n  const PAGE_CONTAINER_HEIGHT = PAGE_IMG_HEIGHT + PAGE_NAME_HEIGHT;\n  const PAGE_IMG_WIDTH = PAGE_IMG_HEIGHT * RATIO;\n\n  function onDragEnd(_: any, sourceIndex: number, targetIndex: number) {\n    lastDragEndTime.current = Date.now();\n    if (sourceIndex === targetIndex) return;\n    const newFiles = swap(files, sourceIndex, targetIndex);\n    onChange(newFiles);\n  }\n\n  const dragdropSizing = useMemo<{ pagesPerRow: number; containerHeight: number }>(() => {\n    if (!gridContainerRef?.current) {\n      return { containerHeight: 1, pagesPerRow: 1 };\n    }\n    const containerWidth = gridContainerRef?.current.clientWidth;\n    const pagesPerRow = Math.floor(containerWidth / (PAGE_IMG_WIDTH + PAGES_SPACING));\n    const numberOfRows = Math.ceil(files.length / pagesPerRow);\n    const containerHeight = numberOfRows * (PAGE_CONTAINER_HEIGHT + PAGES_SPACING);\n    return { pagesPerRow, containerHeight };\n  }, [width, files, PAGE_IMG_HEIGHT]);\n\n  function deleteImage(imageIndex: number) {\n    const newFiles = [...files];\n    newFiles.splice(imageIndex, 1);\n    onChange(newFiles);\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        onClick={() => setIsHalfSize(!isHalfSize)}\n        text={isHalfSize ? 'Larger' : 'Smaller'}\n        className=\"mb-2\"\n      />\n\n      <div ref={gridContainerRef}>\n        <GridContextProvider onChange={onDragEnd}>\n          <GridDropZone\n            id=\"pages\"\n            boxesPerRow={dragdropSizing.pagesPerRow}\n            rowHeight={PAGE_CONTAINER_HEIGHT + PAGES_SPACING}\n            style={{\n              height: dragdropSizing.containerHeight,\n            }}\n          >\n            {files.map((file, index) => (\n              <GridItem\n                key={file.file?.name || file.url || index}\n                style={{\n                  height: PAGE_CONTAINER_HEIGHT + PAGES_SPACING,\n                  width: PAGE_IMG_WIDTH + PAGES_SPACING,\n                }}\n                onMouseEnter={() => setHoveredPageNum(index)}\n                onMouseLeave={() => setHoveredPageNum(undefined)}\n                className=\"flex justify-center items-center\"\n                onClick={() => {\n                  if (isDragging.current || Date.now() - lastDragEndTime.current < 200)\n                    return;\n                  setFullSizeImage(file);\n                }}\n                onDragStart={() => (isDragging.current = true)}\n              >\n                <IconButton\n                  onClick={() => deleteImage(index)}\n                  icon={MdDelete}\n                  color=\"error\"\n                  className={`\n                    absolute top-1 right-1 \n                    ${isMobile || hoveredPageNum === index ? 'visible' : 'invisible'}\n                  `}\n                />\n                <div className=\"h-full flex flex-col items-center justify-center hover:cursor-move\">\n                  <img\n                    src={file.url || file.base64}\n                    height={PAGE_IMG_HEIGHT}\n                    style={{\n                      objectFit: 'cover',\n                      maxHeight: PAGE_IMG_HEIGHT,\n                      maxWidth: PAGE_IMG_WIDTH,\n                    }}\n                    draggable={false}\n                  />\n                  <p\n                    className=\"whitespace-pre-wrap break-all overflow-ellipsis overflow-hidden leading-none\"\n                    style={{ height: PAGE_NAME_HEIGHT, width: PAGE_IMG_WIDTH }}\n                  >\n                    <span className=\"mr-1\">\n                      <b>{index + 1}</b>\n                    </span>\n                    <span className=\"text-xs\">{file.file?.name || file.url}</span>\n                  </p>\n                </div>\n              </GridItem>\n            ))}\n          </GridDropZone>\n        </GridContextProvider>\n      </div>\n\n      {fullSizeImage && (\n        <div\n          className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\"\n          onClick={() => setFullSizeImage(undefined)}\n        >\n          <img\n            src={fullSizeImage.url || fullSizeImage.base64}\n            style={{ maxHeight: '90%', maxWidth: '90%' }}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n", "import Button, { ButtonProps } from './Button';\n\ntype IconButtonProps = {\n  icon: React.ElementType;\n} & Omit<ButtonProps, 'startIcon' | 'endIcon' | 'fullWidth' | 'text'>;\n\nexport default function IconButton({ icon, className, ...props }: IconButtonProps) {\n  return (\n    <Button\n      {...props}\n      startIcon={icon}\n      noPadding\n      className={`rounded-full w-8 h-8 p-0 text-base ${className}`}\n      text=\"\"\n      style={{ paddingTop: '2px' }}\n    />\n  );\n}\n", "import { forwardRef } from 'react';\n\nconst FileInput = forwardRef(\n  (\n    props: React.InputHTMLAttributes<HTMLInputElement>,\n    ref: React.Ref<HTMLInputElement>\n  ) => {\n    return (\n      <label>\n        <input\n          type=\"file\"\n          ref={ref}\n          className=\"text-sm text-grey-500 file:mr-5 file:py-3 file:px-10 file:transition-all file:duration-100\n          file:rounded file:border-0 file:text-md file:font-semibold file:text-white\n          file:bg-blue-weak-200 file:hover:bg-blue-weak-100\n          file:focus:bg-blue-weak-100 \n          file:dark:bg-blue-strong-200 file:dark:hover:bg-blue-strong-100\n          file:dark:focus:bg-blue-strong-100\n          hover:file:cursor-pointer file:shadow file:hover:file:shadow-md\n          file:focus:file:shadow-md\"\n          {...props}\n        />\n      </label>\n    );\n  }\n);\n\nexport default FileInput;\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport { MdArrowDropDown, MdArrowDropUp } from 'react-icons/md';\nimport { Table, TableBody, TableCell, TableHeadRow, TableRow } from '~/components/Table';\nimport { capitalizeString } from '~/utils/general';\nimport { redirectIfNotLoggedIn } from '~/utils/loaders';\nimport { processApiError } from '~/utils/request-helpers';\nimport BackToContribute from '../BackToContribute';\nimport { PointInfo } from '../scoreboard';\nimport {\n  getYourComicProblems,\n  getYourComicSuggestions,\n  getYourContributedComics,\n  getYourTagSuggestions,\n} from './data-fetchers';\n\nexport type ContributionStatus = 'pending' | 'approved' | 'rejected';\n\nexport interface ContributionBase {\n  comicName: string;\n  status: ContributionStatus;\n  timestamp: string;\n  points?: number;\n  pointsDescription?: string;\n  modComment?: string;\n}\n\nexport interface ComicSuggestion extends ContributionBase {\n  type: 'ComicSuggestion';\n}\n\nexport interface ContributedComic extends ContributionBase {\n  type: 'ContributedComic';\n  artistName: string;\n  numberOfPages: number;\n  numberOfKeywords: number;\n}\n\nexport interface TagSuggestion extends ContributionBase {\n  type: 'TagSuggestion';\n  suggestion: string;\n}\n\nexport interface ComicProblem extends ContributionBase {\n  type: 'ComicProblem';\n  problemCategory: string;\n}\n\nexport type Contribution =\n  | ComicSuggestion\n  | ContributedComic\n  | TagSuggestion\n  | ComicProblem;\n\nexport default function YourContributions() {\n  const { contributions }: { contributions: Array<Contribution> } = useLoaderData();\n  const [showPointInfo, setShowPointInfo] = useState(false);\n\n  return (\n    <section className=\"flex-col\">\n      <h1 className=\"text-center mb-2\">Your contributions</h1>\n      <p className=\"text-center mb-4\">\n        <BackToContribute />\n      </p>\n\n      <p className=\"text-center\">\n        <button\n          onClick={() => setShowPointInfo(!showPointInfo)}\n          className={`w-fit h-fit text-blue-weak-200 dark:text-blue-strong-300 font-semibold\n          bg-gradient-to-r from-blue-weak-200 to-blue-weak-200\n          dark:from-blue-strong-300 dark:to-blue-strong-300 bg-no-repeat\n          focus:no-underline cursor-pointer bg-[length:0%_1px] transition-[background-size]\n          duration-200 bg-[center_bottom] hover:bg-[length:100%_1px]`}\n        >\n          {showPointInfo ? 'Hide' : 'Show'} point info{' '}\n          {showPointInfo ? <MdArrowDropUp /> : <MdArrowDropDown />}\n        </button>\n      </p>\n\n      {showPointInfo && <PointInfo showInfoAboutUploadedComics />}\n\n      {contributions.length > 0 && (\n        <Table horizontalScroll={true} className=\"mx-auto mt-8\">\n          <TableHeadRow isTableMaxHeight={false}>\n            <TableCell>Contribution</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Date</TableCell>\n            <TableCell>Points</TableCell>\n            <TableCell>Mod comment</TableCell>\n            <TableCell>Contribution Details</TableCell>\n          </TableHeadRow>\n          <TableBody>\n            {contributions.map((contribution, index) => (\n              <TableRow\n                key={contribution.comicName + index}\n                className=\"border-b border-gray-800 dark:border-gray-500\"\n              >\n                <TableCell>\n                  <p className=\"font-extralight\">{getContributionName(contribution)}</p>\n                </TableCell>\n                <TableCell>\n                  <p\n                    className={`${getContributionStatusColor(\n                      contribution.status\n                    )} font-extralight`}\n                  >\n                    {capitalizeString(contribution.status)}\n                  </p>\n                </TableCell>\n                <TableCell>\n                  <p className=\"font-extralight\">{getDate(contribution.timestamp)}</p>\n                </TableCell>\n                <TableCell>\n                  <p className=\"font-semibold\">{contribution.points || '-'}</p>\n                  <p className=\"font-extralight\">{contribution.pointsDescription}</p>\n                </TableCell>\n                <TableCell>\n                  <p className=\"font-extralight\">{contribution.modComment || '-'}</p>\n                </TableCell>\n                <TableCell>\n                  <p className=\"font-extralight\">\n                    {getContributionDetails(contribution)}\n                  </p>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n\n      {contributions.length === 0 && (\n        <p className=\"text-center mt-8\">You have no contributions yet.</p>\n      )}\n    </section>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const urlBase: string = args.context.DB_API_URL_BASE;\n  const user = await redirectIfNotLoggedIn(args);\n\n  const uploadedComicsPromise = getYourContributedComics(urlBase, user.userId);\n  const tagSuggestionsPromise = getYourTagSuggestions(urlBase, user.userId);\n  const comicProblemsPromise = getYourComicProblems(urlBase, user.userId);\n  const comicSuggestionsPromise = getYourComicSuggestions(urlBase, user.userId);\n\n  const resolvedPromises = await Promise.all([\n    uploadedComicsPromise,\n    tagSuggestionsPromise,\n    comicProblemsPromise,\n    comicSuggestionsPromise,\n  ]);\n\n  for (const promise of resolvedPromises) {\n    if (promise.err || !promise.contributions) {\n      return processApiError(\n        'Error getting your contributions',\n        promise.err || { logMessage: 'Contributions returned as null' },\n        {\n          userId: user.userId,\n        }\n      );\n    }\n  }\n\n  let contributions = resolvedPromises\n    .map(res => res.contributions)\n    .flat() as Contribution[];\n\n  contributions = contributions.sort((a, b) => {\n    return a.timestamp.localeCompare(b.timestamp, undefined, {}) * -1;\n  });\n\n  return {\n    contributions,\n  };\n}\n\nfunction getContributionDetails(contribution: Contribution) {\n  switch (contribution.type) {\n    case 'ContributedComic':\n      return (\n        <>\n          <p>Comic: {contribution.comicName}</p>\n          <p>Artist: {contribution.artistName}</p>\n          <p>\n            {contribution.numberOfPages} pages, {contribution.numberOfKeywords} tags\n          </p>\n        </>\n      );\n    case 'ComicProblem':\n      return (\n        <>\n          <p>Comic: {contribution.comicName}</p>\n          <p>Problem: {contribution.problemCategory}</p>\n        </>\n      );\n    case 'ComicSuggestion':\n      return (\n        <>\n          <p>Comic name: {contribution.comicName}</p>\n        </>\n      );\n    case 'TagSuggestion':\n      return (\n        <>\n          <p>Comic: {contribution.comicName}</p>\n          <p>Tag: {contribution.suggestion}</p>\n        </>\n      );\n    default:\n      return '-';\n  }\n}\n\nfunction getContributionName(contribution: Contribution) {\n  switch (contribution.type) {\n    case 'ContributedComic':\n      return 'Comic upload';\n    case 'ComicSuggestion':\n      return 'Comic suggestion';\n    case 'ComicProblem':\n      return 'Comic problem';\n    case 'TagSuggestion':\n      return 'Tag suggestion';\n\n    default:\n      return 'ERROR';\n  }\n}\n\nfunction getContributionStatusColor(status: ContributionStatus): string {\n  switch (status) {\n    case 'approved':\n      return 'text-green-500 dark:text-green-300';\n    case 'pending':\n      return 'text-blue-800 dark:text-blue-300';\n    case 'rejected':\n      return 'text-red-500 dark:text-red-300';\n  }\n}\n\nfunction getDate(timestamp: string): string {\n  const d = new Date(timestamp);\n  const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\n  const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\n\n  return `${mo} ${da}`;\n}\n", "interface TableProps {\n  horizontalScroll?: boolean;\n  /** A style value that'll be applied to the container - eg. 70vh, 20rem, etc. */\n  maxHeight?: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function Table({\n  horizontalScroll,\n  maxHeight,\n  children,\n  className = '',\n}: TableProps) {\n  const horizontalScrollClass = `overflow-x-auto max-w-full whitespace-nowrap `;\n  const verticalScrollStyle = maxHeight ? { maxHeight } : {};\n  const fullClassName = `\n    w-fit\n    ${className} ${horizontalScroll ? horizontalScrollClass : ''}\n  `;\n\n  if (horizontalScroll || maxHeight) {\n    return (\n      <div className={fullClassName} style={verticalScrollStyle}>\n        <table>{children}</table>\n      </div>\n    );\n  }\n\n  return <table className={fullClassName}>{children}</table>;\n}\n", "interface TableBodyProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function TableBody({ children, className }: TableBodyProps) {\n  return <tbody className={className}>{children}</tbody>;\n}\n", "interface TableCellProps {\n  /** A style string that'll be directly applied. Longer text will wrap. */\n  maxWidth?: string;\n  colspan?: number;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function TableCell({\n  maxWidth,\n  colspan,\n  children,\n  className = '',\n}: TableCellProps) {\n  const style = maxWidth ? { maxWidth } : {};\n  const fullClassName = `py-2 px-3 ${maxWidth ? 'whitespace-pre-wrap' : ''} ${className}`;\n  return (\n    <td className={fullClassName} style={style} colSpan={colspan}>\n      {children}\n    </td>\n  );\n}\n", "export type TableHeadProps = {\n  isTableMaxHeight?: boolean;\n  children: React.ReactNode;\n  className?: string;\n};\n\n// I did not find a better way to make it sticky than having to use this\n// isTableMaxHeight prop, in addition to specifying the maxHeight prop on the table itself.\nexport default function TableHeadRow({\n  isTableMaxHeight = false,\n  children,\n  className = '',\n}: TableHeadProps) {\n  const theadRowClass = `bg-gray-900 dark:bg-gray-300 text-left border-b\n    border-gray-borderLight font-bold`;\n  return (\n    <thead>\n      <tr\n        className={`${theadRowClass} ${className} ${\n          isTableMaxHeight ? 'sticky top-0' : ''\n        }`}\n      >\n        {children}\n      </tr>\n    </thead>\n  );\n}\n", "interface TableRowProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function TableRow({ children, className = '' }: TableRowProps) {\n  return <tr className={`border-b border-gray-borderLight ${className}`}>{children}</tr>;\n}\n", "import { MdArrowBack } from 'react-icons/md';\nimport Link from '~/components/Link';\n\nexport default function BackToContribute({}) {\n  return <Link href=\"/contribute\" text=\"Back\" Icon={MdArrowBack} />;\n}\n", "import type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { add, format, sub } from 'date-fns';\nimport { Fragment, useState } from 'react';\nimport {\n  MdArrowBack,\n  MdArrowDropDown,\n  MdArrowDropUp,\n  MdArrowForward,\n  MdHome,\n} from 'react-icons/md';\nimport Button from '~/components/Buttons/Button';\nimport IconButton from '~/components/Buttons/IconButton';\nimport Checkbox from '~/components/Checkbox/Checkbox';\nimport Link from '~/components/Link';\nimport Spinner from '~/components/Spinner';\nimport { Table, TableBody, TableCell, TableHeadRow, TableRow } from '~/components/Table';\nimport Username from '~/components/Username';\nimport BackToContribute from '~/routes/contribute/BackToContribute';\nimport { CONTRIBUTION_POINTS } from '~/types/contributions';\nimport { ContributionPointsEntry, UserType } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport {\n  ApiError,\n  ApiResponse,\n  makeDbErrObj,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype CachedPoints = {\n  yearMonth: string;\n  excludeMods: boolean;\n  points: TopContributionPointsRow[];\n};\n\nexport default function Scoreboard() {\n  const fetcher = useGoodFetcher<TopContributionPointsRow[]>({\n    method: 'post',\n    onFinish: () => {\n      setPoints(fetcher.data || []);\n      setCachedPoints(prev => [\n        ...prev,\n        {\n          yearMonth: showAllTime ? 'all-time' : format(date, 'yyyy-MM'),\n          excludeMods,\n          points: fetcher.data || [],\n        },\n      ]);\n    },\n  });\n\n  const allTimePoints = useLoaderData<typeof loader>();\n\n  const [showPointInfo, setShowPointInfo] = useState(false);\n  const [showAllTime, setShowAllTime] = useState(false);\n  const [excludeMods, setExcludeMods] = useState(false);\n  const [date, setDate] = useState(new Date());\n\n  const [points, setPoints] = useState<TopContributionPointsRow[]>(\n    allTimePoints.topScores || []\n  );\n\n  const [cachedPoints, setCachedPoints] = useState<CachedPoints[]>([\n    {\n      yearMonth: format(new Date(), 'yyyy-MM'),\n      excludeMods: false,\n      points: allTimePoints.topScores || [],\n    },\n  ]);\n\n  function changeDisplayInterval(\n    incrementBy: 1 | -1 | undefined,\n    setAllTime: boolean | undefined,\n    newExcludeMods: boolean | undefined\n  ) {\n    let newDate = new Date();\n    if (incrementBy === 1) {\n      newDate = add(date, { months: 1 });\n      setDate(newDate);\n    }\n    if (incrementBy === -1) {\n      newDate = sub(date, { months: 1 });\n      setDate(newDate);\n    }\n\n    if (setAllTime !== undefined) {\n      setShowAllTime(setAllTime);\n    }\n    if (newExcludeMods !== undefined) {\n      setExcludeMods(newExcludeMods);\n    }\n\n    const excludeMonthsValForQuery =\n      newExcludeMods === undefined ? excludeMods : newExcludeMods;\n\n    let yearMonth = format(date, 'yyyy-MM');\n    if (setAllTime) yearMonth = 'all-time';\n    if (incrementBy !== undefined) yearMonth = format(newDate, 'yyyy-MM');\n\n    const foundCachedPoints = cachedPoints.find(\n      cp => cp.yearMonth === yearMonth && cp.excludeMods === excludeMonthsValForQuery\n    );\n\n    if (foundCachedPoints) {\n      setPoints(foundCachedPoints.points);\n      return;\n    }\n\n    fetcher.submit({ yearMonth, excludeMods: excludeMonthsValForQuery.toString() });\n  }\n\n  const canIncrementMonth =\n    !(\n      date.getMonth() === new Date().getMonth() &&\n      date.getFullYear() === new Date().getFullYear()\n    ) && !fetcher.isLoading;\n\n  return (\n    <div className=\"container mx-auto justify-items-center\">\n      <h1 className=\"text-center mb-2\">Contributions scoreboard</h1>\n      <p className=\"text-center\">\n        <BackToContribute />\n      </p>\n      <p className=\"mb-4 text-center\">\n        <Link href=\"https://yiffer.xyz/\" text=\"To front page\" Icon={MdHome} />\n      </p>\n\n      <p>\n        Points are awarded only when a contribution has been approved or accepted by a\n        mod.\n      </p>\n      <p className=\"mb-6\">\n        Currently, these points can&apos;t be used for anything, and there are no concrete\n        plans to change this, but who knows what the future holds?\n      </p>\n\n      <p className=\"text-center\">\n        <button\n          onClick={() => setShowPointInfo(!showPointInfo)}\n          className={`w-fit h-fit text-blue-weak-200 dark:text-blue-strong-300 font-semibold\n          bg-gradient-to-r from-blue-weak-200 to-blue-weak-200\n          dark:from-blue-strong-300 dark:to-blue-strong-300 bg-no-repeat\n          focus:no-underline cursor-pointer bg-[length:0%_1px] transition-[background-size]\n          duration-200 bg-[center_bottom] hover:bg-[length:100%_1px]`}\n        >\n          {showPointInfo ? 'Hide' : 'Show'} point info{' '}\n          {showPointInfo ? <MdArrowDropUp /> : <MdArrowDropDown />}\n        </button>\n      </p>\n\n      {showPointInfo && <PointInfo />}\n\n      <div className=\"flex flex-col justify-center items-center w-fit mx-auto mt-8\">\n        <Checkbox\n          label=\"Include mods\"\n          checked={!excludeMods}\n          onChange={() => changeDisplayInterval(undefined, undefined, !excludeMods)}\n          className=\"mb-4\"\n        />\n\n        <div className=\"flex mb-4\">\n          <Button\n            text=\"Monthly\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={\n              'rounded-r-none' + disabledClass + (showAllTime ? '' : enabledClass)\n            }\n            onClick={() => changeDisplayInterval(undefined, false, undefined)}\n          />\n          <Button\n            text=\"All time\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={\n              'rounded-l-none' + disabledClass + (showAllTime ? enabledClass : '')\n            }\n            onClick={() => changeDisplayInterval(undefined, true, undefined)}\n          />\n        </div>\n\n        {!showAllTime && (\n          <div className=\"flex justify-between items-center w-fit mb-2 text-lg\">\n            <IconButton\n              icon={MdArrowBack}\n              onClick={() => changeDisplayInterval(-1, false, undefined)}\n              disabled={fetcher.isLoading}\n              variant=\"naked\"\n            />\n\n            {format(date, 'MMM y')}\n\n            <IconButton\n              icon={MdArrowForward}\n              onClick={() => changeDisplayInterval(1, false, undefined)}\n              disabled={!canIncrementMonth}\n              variant=\"naked\"\n            />\n          </div>\n        )}\n\n        {fetcher.isLoading && <Spinner />}\n\n        {points.length === 0 && !fetcher.isLoading && (\n          <p>There are contributions for this month.</p>\n        )}\n\n        {points.length > 0 && !fetcher.isLoading && (\n          <Table className=\"mb-6\">\n            <TableHeadRow isTableMaxHeight>\n              <TableCell>User</TableCell>\n              <TableCell>Score</TableCell>\n            </TableHeadRow>\n            <TableBody>\n              {points.map((point, i) => (\n                <TableRow key={i}>\n                  <TableCell>\n                    <Username\n                      user={{\n                        username: point.username,\n                        id: point.userId,\n                        userType: point.userType,\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell>{point.points}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const scoresRes = await getTopScores(args.context.DB_API_URL_BASE, 'all-time', false);\n  if (scoresRes.err) {\n    return processApiError('Error in loader of contribution scoreboard', scoresRes.err);\n  }\n  return scoresRes;\n}\n\nexport async function action(\n  args: ActionFunctionArgs\n): Promise<ApiResponse<TopContributionPointsRow[]>> {\n  const reqBody = await args.request.formData();\n  const { yearMonth, excludeMods } = Object.fromEntries(reqBody);\n  const res = await getTopScores(\n    args.context.DB_API_URL_BASE,\n    yearMonth.toString(),\n    excludeMods === 'true'\n  );\n  if (res.err) {\n    return processApiError('Error in action of contribution scoreboard', res.err);\n  }\n  return {\n    success: true,\n    data: res.topScores,\n    error: null,\n  };\n}\n\ntype TopContributionPointsRow = {\n  userId: number;\n  username: string;\n  userType: UserType;\n  points: number;\n};\n\nasync function getTopScores(\n  urlBase: 'all-time' | string,\n  yearMonth: string,\n  excludeMods: boolean\n): Promise<{ topScores?: TopContributionPointsRow[]; err?: ApiError }> {\n  const query = `\n    SELECT \n      user.id AS userId, \n      user.username,\n      user.userType,\n      tagSuggestion,\n      comicProblem,\n      comicSuggestiongood,\n      comicSuggestionbad,\n      comicUploadexcellent,\n      comicUploadminorissues,\n      comicUploadmajorissues,\n      comicUploadpageissues,\n      comicUploadterrible\n    FROM contributionpoints\n    INNER JOIN user ON (user.id = contributionpoints.userId)\n    WHERE yearMonth = ?\n    ${excludeMods ? `AND userType != 'moderator' AND userType != 'admin'` : ''}\n  `;\n\n  const dbRes = await queryDb<ContributionPointsEntry[]>(urlBase, query, [yearMonth]);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting top score list', {\n      yearMonth,\n      excludeMods,\n    });\n  }\n  return {\n    topScores: topScoreEntriesToPointList(dbRes.result!),\n  };\n}\n\nfunction topScoreEntriesToPointList(\n  entries: ContributionPointsEntry[]\n): TopContributionPointsRow[] {\n  let topScoreRows: TopContributionPointsRow[] = entries.map(userContrib => {\n    const points =\n      userContrib.tagSuggestion * CONTRIBUTION_POINTS.tagSuggestion.points +\n      userContrib.comicProblem * CONTRIBUTION_POINTS.comicProblem.points +\n      userContrib.comicSuggestiongood * CONTRIBUTION_POINTS.comicSuggestion.good.points +\n      userContrib.comicSuggestionbad * CONTRIBUTION_POINTS.comicSuggestion.bad.points +\n      userContrib.comicUploadexcellent *\n        CONTRIBUTION_POINTS.comicUpload.excellent.points +\n      userContrib.comicUploadminorissues *\n        CONTRIBUTION_POINTS.comicUpload['minor-issues'].points +\n      userContrib.comicUploadmajorissues *\n        CONTRIBUTION_POINTS.comicUpload['major-issues'].points +\n      userContrib.comicUploadpageissues *\n        CONTRIBUTION_POINTS.comicUpload['page-issues'].points +\n      userContrib.comicUploadterrible * CONTRIBUTION_POINTS.comicUpload.terrible.points;\n\n    return {\n      userId: userContrib.userId,\n      username: userContrib.username,\n      userType: userContrib.userType,\n      points,\n    };\n  });\n\n  return topScoreRows;\n}\n\nconst pInfoColors = {\n  pValues: {\n    green: 'dark:text-green-600 text-green-700',\n    blue: 'dark:text-blue-600 text-blue-700',\n    purple: 'dark:text-purple-600 text-purple-700',\n    yellow: 'dark:text-yellow-500 text-yellow-600',\n  },\n  pDescriptions: {\n    green: 'dark:text-green-400 text-green-600',\n    blue: 'dark:text-blue-400 text-blue-600',\n    purple: 'dark:text-purple-400 text-purple-600',\n    yellow: 'dark:text-yellow-200 text-yellow-500',\n  },\n};\n\nconst enabledClass = `\n    dark:text-gray-100 text-gray-100 bg-gradient-to-r from-theme1-primary to-theme2-primary\n  `;\nconst disabledClass = `\n    dark:text-white dark:bg-gray-500 dark:hover:bg-gray-300 dark:focus:bg-gray-300\n    text-white bg-gray-700 hover:bg-gray-700 focus:bg-gray-700\n  `;\n\nconst nonRejectedUploads = Object.entries(CONTRIBUTION_POINTS.comicUpload)\n  .filter(([verdict]) => verdict !== 'rejected' && verdict !== 'rejected-list')\n  .map(([_, value]) => ({\n    points: value.points,\n    text: value.scoreListDescription,\n  }));\n\nexport function PointInfo({ showInfoAboutUploadedComics = false }) {\n  return (\n    <>\n      <div\n        className=\"grid gap-y-1 gap-x-2 mt-4 mx-auto w-fit\"\n        style={{ gridTemplateColumns: 'auto auto' }}\n      >\n        {nonRejectedUploads.map(({ points, text }) => (\n          <Fragment key={points}>\n            <p className={pInfoColors.pValues.green}>\n              <b>{points}</b>\n            </p>\n            <p className={pInfoColors.pDescriptions.green}>{text}</p>\n          </Fragment>\n        ))}\n\n        <p className={pInfoColors.pValues.blue}>\n          <b>30</b>\n        </p>\n        <p className={pInfoColors.pDescriptions.blue}>\n          Comic suggestion approved with good links/information\n        </p>\n\n        <p className={pInfoColors.pValues.blue}>\n          <b>15</b>\n        </p>\n        <p className={pInfoColors.pDescriptions.blue}>\n          Comic suggestion approved with lacking links/information\n        </p>\n\n        <p className={pInfoColors.pValues.purple}>\n          <b>10</b>\n        </p>\n        <p className={pInfoColors.pDescriptions.purple}>Comic problem reported</p>\n\n        <p className={pInfoColors.pValues.yellow}>\n          <b>5</b>\n        </p>\n        <p className={pInfoColors.pDescriptions.yellow}>\n          Add/remove tag suggestion approved\n        </p>\n      </div>\n      {showInfoAboutUploadedComics && (\n        <p className=\"mt-4 text-center\">\n          Note that even if your comic upload has the status Approved it might still not\n          be available on the site. This is because we queue comics to spread them evenly\n          over time.\n        </p>\n      )}\n    </>\n  );\n}\n", "import { FaCheck } from 'react-icons/fa';\nimport { useState } from 'react';\nimport type { KeyboardEvent } from 'react';\n\nexport type BaseCheckboxProps = {\n  label: string;\n  disabled?: boolean;\n  className?: string;\n};\n\ntype ChecboxProps = BaseCheckboxProps & {\n  checked: boolean;\n  onChange: (newVal: boolean) => void;\n};\n\n// TODO figure out some UX-friendly way to indicate focus.\n// Ideally, a theme1-primaryTrans background color on the square element.\n// Might require some light javascript.\n\nexport default function Checkbox({\n  label,\n  checked,\n  disabled,\n  onChange,\n  className = '',\n  ...props\n}: ChecboxProps) {\n  // Maybe kinda hacky, but this is to prevent double state changes. It works.\n  const [lastChange, setLastChange] = useState({\n    type: '',\n    time: 0,\n  });\n\n  const disabledClass = disabled ? 'text-gray-700' : 'hover:cursor-pointer';\n  const fullClassname = `block relative select-none pl-8 \n    outline-none w-fit ${disabledClass} ${className} `;\n\n  function onKeyPressed(keyEvent: KeyboardEvent<HTMLLabelElement>) {\n    if (keyEvent.key === 'Enter' || keyEvent.key === ' ') {\n      onChange(!checked);\n      setLastChange({\n        type: 'key',\n        time: Date.now(),\n      });\n    }\n  }\n\n  function onStateChange(newVal: boolean) {\n    if (lastChange.type === 'key' && Date.now() - lastChange.time < 300) {\n      return;\n    }\n    onChange(newVal);\n    setLastChange({\n      type: 'internal',\n      time: Date.now(),\n    });\n  }\n\n  return (\n    <label className={fullClassname} {...props} onKeyPress={e => onKeyPressed(e)}>\n      {label}\n\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={e => onStateChange(e.target.checked)}\n        disabled={disabled}\n        className=\"absolute opacity-0 cursor-pointer h-0 w-0 peer\"\n      />\n\n      <span className=\"absolute top-0 left-0 h-6 w-6 border-2 border-theme1-primary peer-focus:border-theme1-verydark peer-checked:bg-theme1-primary rounded-sm flex justify-center items-center peer-disabled:bg-trans peer-disabled:border-gray-800 dark:peer-disabled:border-gray-600\">\n        {checked && (\n          <FaCheck className=\"mt-0.5 text-white dark:text-text-light\" size={16} />\n        )}\n      </span>\n    </label>\n  );\n}\n", "export default function Spinner() {\n  return (\n    <div role=\"status\">\n      <svg\n        aria-hidden=\"true\"\n        className=\"w-8 h-8 mr-2 text-gray-900 animate-spin dark:text-gray-600 fill-theme1-dark dark:fill-theme1-primary\"\n        viewBox=\"0 0 100 101\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n          fill=\"currentFill\"\n        />\n      </svg>\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n", "import { RiShieldFill, RiShieldStarFill } from 'react-icons/ri';\nimport type { User } from '~/types/types';\nimport { UserType } from '~/types/types';\n\ntype UsernameProps = {\n  user: Omit<User, 'email'>;\n  className?: string;\n};\n\nconst Username = ({ user, className }: UsernameProps) => {\n  const { username, userType } = user;\n\n  const isMod = userType === UserType.Mod;\n  const isAdmin = userType === UserType.Admin;\n\n  const title = isMod ? 'Moderator' : isAdmin ? 'Admin' : '';\n  const Icon = isAdmin ? RiShieldStarFill : isMod ? RiShieldFill : null;\n\n  return (\n    <p title={title} className={className}>\n      {username}\n      {Icon && <Icon className=\"ml-1 text-theme1-primary\" />}\n    </p>\n  );\n};\n\nexport default Username;\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { ComicSuggestionVerdict } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { parseFormJson } from '~/utils/formdata-parser';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { addContributionPoints } from '../funcs/add-contribution-points';\n\nexport type ProcessComicSuggestionBody = {\n  actionId: number;\n  isApproved: boolean;\n  verdict?: ComicSuggestionVerdict;\n  modComment?: string;\n  suggestingUserId?: number;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const { fields, user, isUnauthorized } =\n    await parseFormJson<ProcessComicSuggestionBody>(args, 'mod');\n  if (isUnauthorized) return new Response('Unauthorized', { status: 401 });\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await processComicSuggestion(\n    urlBase,\n    fields.actionId,\n    fields.isApproved,\n    user!.userId,\n    fields.verdict,\n    fields.modComment,\n    fields.suggestingUserId\n  );\n\n  if (err) {\n    return processApiError('Error in /process-comic-suggestion', err, {\n      ...fields,\n    });\n  }\n  return createSuccessJson();\n}\n\nasync function processComicSuggestion(\n  urlBase: string,\n  actionId: number,\n  isApproved: boolean,\n  modId: number,\n  verdict?: ComicSuggestionVerdict, // always if approved, otherwise none\n  modComment?: string, // only potentially if rejected\n  suggestingUserId?: number // only if non-anon suggestion\n): Promise<ApiError | undefined> {\n  const updateQuery = `UPDATE comicsuggestion\n    SET status = ?, modId = ?\n    ${verdict ? ', verdict = ?' : ''}\n    ${modComment ? ', modComment = ?' : ''}\n    WHERE id = ?`;\n\n  const updateQueryParams = [\n    isApproved ? 'approved' : 'rejected',\n    modId,\n    ...(verdict ? [verdict] : []),\n    ...(modComment ? [modComment] : []),\n    actionId,\n  ];\n\n  const dbRes = await queryDb(urlBase, updateQuery, updateQueryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error updating comic suggestion');\n  }\n\n  const columnName = isApproved ? `comicSuggestion${verdict}` : 'comicSuggestionRejected';\n  const err = await addContributionPoints(urlBase, suggestingUserId ?? null, columnName);\n  if (err) return err;\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { UserSession } from '~/types/types';\nimport { authLoader } from './loaders';\n\nexport type ParsedFormdataJson<T> = {\n  fields: T;\n  user: UserSession | null;\n  isUnauthorized: boolean;\n};\n\n// This function is used to parse JSON sent as {body: <stringifiedStuff>}\n// in formdata requests. Can also validate user type.\nexport async function parseFormJson<T>(\n  args: ActionFunctionArgs,\n  validateUser: 'user' | 'mod' | 'admin' | 'none' = 'none'\n): Promise<ParsedFormdataJson<T>> {\n  const user = await authLoader(args);\n\n  if (validateUser === 'user' && !user) {\n    return makeUnauthorizedResponse(user);\n  }\n\n  if (\n    validateUser === 'mod' &&\n    user?.userType !== 'moderator' &&\n    user?.userType !== 'admin'\n  ) {\n    return makeUnauthorizedResponse(user);\n  }\n\n  if (validateUser === 'admin' && user?.userType !== 'admin') {\n    return makeUnauthorizedResponse(user);\n  }\n\n  const formDataBody = await args.request.formData();\n  const body = formDataBody.get('body') as string;\n  const parsedBody = JSON.parse(body) as T;\n  return {\n    fields: parsedBody,\n    user,\n    isUnauthorized: false,\n  };\n}\n\nfunction makeUnauthorizedResponse<T>(user: UserSession | null): ParsedFormdataJson<T> {\n  return {\n    fields: {} as T,\n    user,\n    isUnauthorized: true,\n  };\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { recalculatePublishingQueue } from '../funcs/publishing-queue';\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const err = await scheduleComic(urlBase, parseInt(formComicId.toString()), user.userId);\n  if (err) {\n    return processApiError('Error in /schedule-comic-to-queue', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function scheduleComic(\n  urlBase: string,\n  comicId: number,\n  modId: number\n): Promise<ApiError | undefined> {\n  const metadataQuery = 'UPDATE comicmetadata SET scheduleModId = ? WHERE comicId = ?';\n  const comicQuery = `UPDATE comic SET publishStatus = 'scheduled' WHERE id = ?`;\n\n  const [comicDbRes, metadataDbRes] = await Promise.all([\n    queryDb(urlBase, comicQuery, [comicId]),\n    queryDb(urlBase, metadataQuery, [modId, comicId]),\n  ]);\n\n  const logCtx = { comicId, modId };\n  if (comicDbRes.isError) {\n    return makeDbErr(comicDbRes, 'Could not update comic table', logCtx);\n  }\n  if (metadataDbRes.isError) {\n    return makeDbErr(metadataDbRes, 'Could not update metadata table', logCtx);\n  }\n\n  const err = await recalculatePublishingQueue(urlBase);\n  if (err) {\n    return wrapApiError(err, 'Error scheduling, recalculating', logCtx);\n  }\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { MdArrowForward } from 'react-icons/md';\nimport Button from '~/components/Buttons/Button';\nimport FileInput from '~/components/FileInput';\nimport RadioButtonGroup from '~/components/RadioButton/RadioButtonGroup';\nimport Select from '~/components/Select/Select';\nimport ThumbnailCropper from '~/components/ThumbnailCropper/ThumbnailCropper';\nimport { ComicImage, getFileWithBase64 } from '~/utils/general';\nimport { NewComicData } from '.';\n\ntype Step4Props = {\n  comicData: NewComicData;\n  onUpdate: (newData: NewComicData) => void;\n};\n\nexport default function Step4Thumbnail({ comicData, onUpdate }: Step4Props) {\n  const [fileToCrop, setFileToCrop] = useState<ComicImage | undefined>(undefined);\n  const [thumbnailMode, setThumbnailMode] = useState<'upload' | 'page-file'>('upload');\n  const [pageFileToCropNumber, setPageFileToCropNumber] = useState<number>(1);\n  const [pageFileToCrop, setPageFileToCrop] = useState<ComicImage | undefined>(undefined);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  async function onThumbnailFileUpload(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.target.files;\n    if (files && files.length) {\n      const fileStr = await getFileWithBase64(files[0]);\n      setFileToCrop(fileStr);\n    }\n  }\n\n  async function onPageFileNumChange(newNum: number) {\n    setPageFileToCropNumber(newNum);\n    if (!comicData.files) {\n      setPageFileToCrop(undefined);\n    } else {\n      const file = comicData.files[newNum - 1];\n      setPageFileToCrop(file);\n    }\n  }\n\n  function onCropFinished(croppedThumb: ComicImage) {\n    onUpdate({\n      ...comicData,\n      thumbnail: croppedThumb,\n    });\n  }\n\n  function onCancelCrop() {\n    setFileToCrop(undefined);\n    setPageFileToCropNumber(1);\n    setPageFileToCrop(undefined);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }\n\n  useEffect(() => {\n    if (thumbnailMode === 'page-file' && comicData.files) {\n      onPageFileNumChange(1);\n    }\n  }, [comicData.files]);\n\n  return (\n    <>\n      <h4 className=\"mt-8\">Thumbnail</h4>\n\n      {/* Completed crop */}\n      {comicData.thumbnail && (\n        <>\n          <img src={comicData.thumbnail.base64} width={120} />\n          <Button\n            text=\"Change\"\n            onClick={() => {\n              onCancelCrop();\n              onUpdate({ ...comicData, thumbnail: undefined });\n            }}\n            variant=\"outlined\"\n            className=\"mt-1\"\n            style={{ width: 120 }}\n          />\n        </>\n      )}\n\n      {/* Not completed crop */}\n      {!comicData.thumbnail && (\n        <>\n          <RadioButtonGroup\n            name=\"thumbnailMode\"\n            onChange={newMode => {\n              setThumbnailMode(newMode as 'upload' | 'page-file');\n              if (newMode === 'page-file') {\n                onPageFileNumChange(1);\n              }\n            }}\n            value={thumbnailMode}\n            className=\"my-2\"\n            options={[\n              { text: 'Upload a file', value: 'upload' },\n              { text: \"Crop an image from the comic's pages\", value: 'page-file' },\n            ]}\n          />\n\n          {thumbnailMode === 'upload' && (\n            <FileInput\n              onChange={onThumbnailFileUpload}\n              ref={fileInputRef}\n              accept=\"image/*\"\n            />\n          )}\n\n          {thumbnailMode === 'page-file' && (\n            <>\n              {comicData.files.length > 0 ? (\n                <>\n                  <Select\n                    value={pageFileToCropNumber}\n                    onChange={newNum => onPageFileNumChange(newNum)}\n                    name=\"pageFileToCropNumber\"\n                    minWidth={150}\n                    title=\"Page to crop from\"\n                    className=\"mt-3\"\n                    options={comicData.files.map((file, i) => ({\n                      text: `Page ${i + 1}`,\n                      value: i + 1,\n                    }))}\n                  />\n\n                  {pageFileToCrop && (\n                    <>\n                      <img src={pageFileToCrop.base64} className=\"mt-2\" width={100} />\n                      <Button\n                        onClick={() => setFileToCrop(pageFileToCrop)}\n                        text=\"Crop\"\n                        className=\"mt-1\"\n                        style={{ width: 100 }}\n                        endIcon={MdArrowForward}\n                      />\n                    </>\n                  )}\n                </>\n              ) : (\n                <p>No pages uploaded yet.</p>\n              )}\n            </>\n          )}\n\n          {fileToCrop && (\n            <ThumbnailCropper\n              image={fileToCrop}\n              onComplete={onCropFinished}\n              onClose={onCancelCrop}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n", "import { useState } from 'react';\n\nexport type BaseRadioButtonGroupProps<T> = {\n  options: { text: string; value: T }[];\n  title?: string;\n  name: string;\n  direction?: 'vertical' | 'horizontal';\n  className?: string;\n};\n\ntype FullRadioButtonGroupProps<T> = {\n  onChange: (value: T) => void;\n  value?: T;\n} & BaseRadioButtonGroupProps<T>;\n\nexport default function RadioButtonGroup<T>({\n  options,\n  title,\n  name,\n  direction = 'vertical',\n  value,\n  onChange,\n  className = '',\n}: FullRadioButtonGroupProps<T>) {\n  const [currentlyHighlightedIndex, setCurrentlyHighlightedIndex] = useState(-1);\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLDivElement>, index: number) {\n    if (event.key !== 'Tab') {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      let newIndex = currentlyHighlightedIndex;\n      if (event.key === 'ArrowUp') {\n        newIndex--;\n      } else {\n        newIndex++;\n      }\n      if (newIndex < 0) {\n        newIndex = options.length - 1;\n      } else if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n      setCurrentlyHighlightedIndex(newIndex);\n    }\n    if (event.key === 'Enter' || event.key === ' ') {\n      onChange(options[index].value);\n    }\n  }\n\n  const wrapperClassName =\n    direction === 'vertical' ? 'flex flex-col gap-2' : 'flex flex-row gap-6';\n\n  return (\n    <>\n      <div className={`flex flex-col ${className}`}>\n        {title && <label className=\"mb-2\">{title}</label>}\n        <div className={wrapperClassName} onBlur={() => setCurrentlyHighlightedIndex(-1)}>\n          {options.map((option, index) => (\n            <div\n              key={index}\n              className=\"flex flex-row items-center cursor-pointer outline-none\"\n              onClick={() => onChange(option.value)}\n              onKeyDown={e => onKeyDown(e, index)}\n              tabIndex={0}\n              onFocus={() => setCurrentlyHighlightedIndex(index)}\n            >\n              <div\n                className={`flex flex-shrink-0 items-center justify-center w-5 h-5 rounded-full border\n                border-gray-800 dark:border-gray-600 \n              ${currentlyHighlightedIndex === index ? ' bg-theme1-primaryTrans' : ''}`}\n              >\n                {value === option.value && (\n                  <div className=\"w-2 h-2 rounded-full bg-theme1-dark dark:bg-theme1-primary\" />\n                )}\n              </div>\n              <div className=\"ml-2 text-sm\">{option.text}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={value?.toString() || ''} />\n    </>\n  );\n}\n", "import { useEffect, useMemo, useRef, useState } from 'react';\nimport { waitMillisec } from '~/utils/general';\n\nexport type BaseSelectProps<T> = {\n  options: { text: string; value: T }[];\n  title?: string;\n  error?: boolean;\n  maxWidth?: number;\n  minWidth?: number;\n  isFullWidth?: boolean;\n  name: string;\n  className?: string;\n};\n\ntype FullSelectProps<T> = {\n  onChange: (value: T) => void;\n  value?: T;\n} & BaseSelectProps<T>;\n\nexport default function Select<T>({\n  options,\n  title = '',\n  value,\n  onChange,\n  error = false,\n  maxWidth = 999999,\n  minWidth = 0,\n  isFullWidth = false,\n  name,\n  className = '',\n  ...props\n}: FullSelectProps<T>) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [computedMinWidth, setComputedMinWidth] = useState(0);\n  const [shouldAddRightPadding, setShouldAddRightPadding] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [currentlyHighlightedIndex, setCurrentlyHighlightedIndex] = useState(-1);\n  const selectItemContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    tryComputeWidth();\n  }, []);\n\n  useEffect(() => {\n    setCurrentlyHighlightedIndex(-1);\n  }, [isOpen]);\n\n  async function tryComputeWidth() {\n    let isFinished = false;\n    while (!isFinished) {\n      await waitMillisec(25);\n      isFinished = computeWidth();\n    }\n  }\n\n  function computeWidth() {\n    let container = selectItemContainerRef.current;\n    if (container && container.children.length > 0) {\n      let maxChildWidth = 0;\n      for (let child of container.children) {\n        if (child.clientWidth > maxChildWidth) {\n          maxChildWidth = child.clientWidth;\n        }\n      }\n\n      if (computedMinWidth > (maxWidth as number)) {\n        setWidth(maxWidth as number);\n      } else {\n        if (maxChildWidth > minWidth) {\n          setShouldAddRightPadding(true);\n        }\n        setComputedMinWidth(Math.max(maxChildWidth, minWidth));\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const minWidthStyle = useMemo(() => {\n    if (width || isFullWidth) {\n      return {};\n    }\n    if (computedMinWidth) {\n      return { minWidth: computedMinWidth + (shouldAddRightPadding ? 16 : 0) };\n    }\n    if (minWidth) {\n      return { minWidth: minWidth };\n    }\n    return {};\n  }, [isFullWidth, computedMinWidth, minWidth, width]);\n\n  const widthStyle = useMemo(() => {\n    if (isFullWidth) {\n      return { width: '100%' };\n    }\n    if (width) {\n      return { width: width };\n    }\n    return {};\n  }, [isFullWidth, width]);\n\n  function onSelected(clickedValue: any) {\n    onChange(clickedValue);\n    setIsOpen(false);\n  }\n\n  const convertedValue = useMemo(() => {\n    return options.find(option => option.value === value);\n  }, [options, value]);\n\n  function setHighlightedIndex(indexNum: number) {\n    if (indexNum !== -1 && selectItemContainerRef.current) {\n      let option = selectItemContainerRef.current.children[indexNum];\n      if (option) {\n        (option as HTMLElement).scrollIntoView({ block: 'nearest', inline: 'start' });\n      }\n    }\n\n    setCurrentlyHighlightedIndex(indexNum);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    if (event.key !== 'Tab') {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (event.key === 'Enter' || event.key === ' ') {\n      if (!isOpen) {\n        setIsOpen(true);\n      } else if (currentlyHighlightedIndex !== -1 && options.length > 0) {\n        onSelected(options[currentlyHighlightedIndex].value);\n      } else {\n        setIsOpen(false);\n      }\n    } else if (event.key === 'ArrowDown') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(0);\n      } else if (currentlyHighlightedIndex === options.length - 1) {\n        setHighlightedIndex(0);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex + 1);\n      }\n    } else if (event.key === 'ArrowUp') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(options.length - 1);\n      } else if (currentlyHighlightedIndex === 0 || currentlyHighlightedIndex === -1) {\n        setHighlightedIndex(options.length - 1);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex - 1);\n      }\n    } else if (event.key === 'Escape') {\n      setIsOpen(false);\n    }\n  }\n\n  const borderStyle = error\n    ? ''\n    : { borderImage: 'linear-gradient(to right, #9aebe7, #adfee0) 1' };\n\n  return (\n    <div\n      onKeyDown={onKeyDown}\n      className={`hover:cursor-pointer focus:bg-theme1-primaryTrans\n        relative w-fit outline-none h-9 leading-9 pt-3 box-content ${className}`}\n      style={{ ...minWidthStyle, ...widthStyle }}\n      {...props}\n      tabIndex={0}\n      onBlur={() => setIsOpen(false)}\n    >\n      {title && <label className=\"absolute text-sm top-0 left-2\">{title}</label>}\n      <div // TODO: \"selected\" from old\n        onClick={() => setIsOpen(!isOpen)}\n        className={`border border-0 border-b-2 px-2 after:absolute\n          after:content-[''] after:bottom-2.5 after:w-0 after:h-0 after:border-5 after:border-transparent\n          after:border-t-text-light dark:after:border-t-text-dark after:right-3 ${\n            value ? '' : 'text-gray-750'\n          }`}\n        style={{ ...borderStyle }}\n      >\n        {(value && options.find(x => x.value === value)?.text) || '\u2014'}\n      </div>\n      <div\n        className={`${\n          isOpen ? '' : 'invisible'\n        } overflow-hidden shadow-lg w-fit min-w-full absolute bg-white dark:bg-gray-400 left-0 right-0 z-40 max-h-80 overflow-y-auto`}\n        ref={selectItemContainerRef}\n      >\n        {options.map(({ text, value: optionValue }, index) => (\n          <div\n            key={text}\n            onMouseEnter={() => setHighlightedIndex(index)}\n            onMouseLeave={() => setHighlightedIndex(-1)}\n            onClick={e => onSelected(optionValue)}\n            className={`z-40 hover:cursor-pointer px-3 whitespace-nowrap  ${\n              currentlyHighlightedIndex === index\n                ? 'bg-gradient-to-r from-theme1-primary to-theme2-primary text-text-light '\n                : ''\n            }}`}\n          >\n            {text}\n          </div>\n        ))}\n      </div>\n\n      <input\n        type=\"text\"\n        name={name}\n        value={convertedValue?.text || ''}\n        onChange={() => {}}\n        hidden\n      />\n    </div>\n  );\n}\n", "import { useMemo, useRef, useState } from 'react';\nimport Cropper, { ReactCropperElement } from 'react-cropper';\nimport { MdArrowBack, MdCheck } from 'react-icons/md';\nimport { ComicImage } from '~/utils/general';\nimport useWindowSize from '~/utils/useWindowSize';\nimport Button from '../Buttons/Button';\nimport InfoBox from '../InfoBox';\n\nexport interface ThumbnailCropperProps {\n  image: ComicImage;\n  onComplete: (croppedThumbnail: ComicImage) => void;\n  onClose: () => void;\n}\n\nexport default function ThumbnailCropper({\n  onClose,\n  onComplete,\n  image,\n}: ThumbnailCropperProps) {\n  const cropperRef = useRef<HTMLImageElement | ReactCropperElement | null>(null);\n  const [currentCropEvent, setCurrentCropEvent] = useState<Cropper.CropEvent | null>(\n    null\n  );\n  const [isTooSmall, setIsTooSmall] = useState(false);\n  const [cropResult, setCropResult] = useState<ComicImage>();\n\n  const { isMobile, isLgUp, isXlUp, isMdUp } = useWindowSize();\n  const [mobileStep, setMobileStep] = useState(1);\n\n  const step1Width = useMemo(() => {\n    if (isXlUp) return 500;\n    if (isLgUp) return 400;\n    return 340;\n  }, [isLgUp, isXlUp]);\n\n  const step2Width = useMemo(() => {\n    if (isLgUp) return 300;\n    if (isMdUp) return 230;\n    return 300;\n  }, [isLgUp, isXlUp]);\n\n  const step1Height = 480;\n\n  function onCropAreaChange(e: Cropper.CropEvent) {\n    setIsTooSmall(false);\n    setCurrentCropEvent(e);\n  }\n\n  async function onCrop() {\n    if (!currentCropEvent || !cropperRef?.current) {\n      return;\n    }\n    const width = currentCropEvent.detail.width;\n    const height = currentCropEvent.detail.height;\n    if (width < 400 || height < 564) {\n      setIsTooSmall(true);\n      setCropResult(undefined);\n      return;\n    }\n\n    setIsTooSmall(false);\n    // any because the types don't seem to match reality\n    const imageElement: any = cropperRef?.current;\n    const cropper: any = imageElement?.cropper;\n    const base64 = cropper.getCroppedCanvas().toDataURL();\n    const file = await new Promise<File>(resolve => {\n      cropper.getCroppedCanvas().toBlob((blob: Blob | null) => {\n        if (blob) {\n          resolve(new File([blob], 'thumbnail.png', { type: 'image/png' }));\n        }\n      });\n    });\n    setCropResult({ base64, file });\n    setMobileStep(2);\n  }\n\n  return (\n    <>\n      <div className=\"fixed inset-0 z-10 bg-black bg-opacity-50 dark:bg-opacity-80\" />\n      <div className=\"fixed inset-0 z-20 flex items-center justify-center mx-4\">\n        <div className=\"bg-white dark:bg-gray-300 rounded-lg shadow-lg p-4 w-full lg:max-w-4xl xl:max-w-5xl flex flex-col\">\n          {!isMobile && <p className=\"text-xl mb-2 text-center\">Crop thumbnail</p>}\n          <div className=\"flex flex-col sm:flex-row\">\n            {(!isMobile || mobileStep === 1) && (\n              <div className=\"flex flex-col items-center w-full sm:w-1/2 gap-2\">\n                <p>Crop image</p>\n                <Cropper\n                  src={image.base64}\n                  style={{ height: step1Height, width: step1Width }}\n                  aspectRatio={400 / 564}\n                  guides={false}\n                  ref={cropperRef}\n                  background={false}\n                  viewMode={1}\n                  minCanvasWidth={400}\n                  crop={e => onCropAreaChange(e)}\n                />\n                {isTooSmall && isMobile && (\n                  <InfoBox\n                    variant=\"error\"\n                    centerText\n                    text={`Too small!`}\n                    style={{ width: step1Width }}\n                  />\n                )}\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onCrop}\n                  text=\"Crop\"\n                  style={{ width: step1Width }}\n                />\n                <Button\n                  variant={'outlined'}\n                  color=\"primary\"\n                  onClick={onClose}\n                  text=\"Cancel\"\n                  style={{ width: step1Width }}\n                />\n              </div>\n            )}\n\n            {(!isMobile || mobileStep === 2) && (\n              <div className=\"flex flex-col items-center gap-2 w-full sm:w-1/2\">\n                <p>Preview and confirm</p>\n                {cropResult && (\n                  <>\n                    <img\n                      src={cropResult.base64}\n                      alt=\"cropped image\"\n                      style={{ width: step2Width }}\n                    />\n                    {isMobile && (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => setMobileStep(1)}\n                        text=\"Back\"\n                        startIcon={MdArrowBack}\n                        style={{ width: step2Width }}\n                      />\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      text=\"Confirm crop\"\n                      startIcon={MdCheck}\n                      onClick={() => onComplete(cropResult)}\n                      style={{ width: step2Width }}\n                    />\n                  </>\n                )}\n                {isTooSmall && !isMobile && (\n                  <InfoBox variant=\"error\" text={`Too small!`}>\n                    {currentCropEvent?.detail && (\n                      <p>\n                        minimum 400px, currently{' '}\n                        {Math.floor(currentCropEvent.detail.width)}px.\n                      </p>\n                    )}\n                  </InfoBox>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { parseFormJson } from '~/utils/formdata-parser';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { addContributionPoints } from '../funcs/add-contribution-points';\n\nexport type ProcessTagSuggestionBody = {\n  isApproved: boolean;\n  actionId: number;\n  isAdding: boolean;\n  comicId: number;\n  tagId: number;\n  suggestingUserId?: number;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const { fields, isUnauthorized, user } = await parseFormJson<ProcessTagSuggestionBody>(\n    args,\n    'mod'\n  );\n  if (isUnauthorized) return new Response('Unauthorized', { status: 401 });\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await processTagSuggestion(\n    urlBase,\n    user?.userId as number,\n    fields.isApproved,\n    fields.actionId,\n    fields.isAdding,\n    fields.comicId,\n    fields.tagId,\n    fields.suggestingUserId\n  );\n\n  if (err) {\n    return processApiError('Error in /process-tag-suggestion', err, {\n      ...fields,\n    });\n  }\n  return createSuccessJson();\n}\n\nasync function processTagSuggestion(\n  urlBase: string,\n  modId: number,\n  isApproved: boolean,\n  actionId: number,\n  isAdding: boolean,\n  comicId: number,\n  tagId: number,\n  suggestingUserId?: number\n): Promise<ApiError | undefined> {\n  const updateActionQuery = `UPDATE keywordsuggestion SET status = ?, modId = ? WHERE id = ?`;\n  const updateActionQueryParams = [isApproved ? 'approved' : 'rejected', modId, actionId];\n\n  let updateTagQuery = undefined;\n  let updateTagQueryParams = undefined;\n\n  if (isApproved) {\n    if (isAdding) {\n      updateTagQuery = `INSERT INTO comickeyword (comicId, keywordId) VALUES (?, ?)`;\n      updateTagQueryParams = [comicId, tagId];\n    } else {\n      updateTagQuery = `DELETE FROM comickeyword WHERE comicId = ? AND keywordId = ?`;\n      updateTagQueryParams = [comicId, tagId];\n    }\n\n    const dbRes = await queryDb(urlBase, updateTagQuery, updateTagQueryParams);\n    if (dbRes.isError) {\n      if (!dbRes.errorCode || dbRes.errorCode !== 'ER_DUP_ENTRY') {\n        return makeDbErr(dbRes, 'Error updating comickeyword');\n      }\n    }\n  }\n\n  const actionRes = await queryDb(urlBase, updateActionQuery, updateActionQueryParams);\n  if (actionRes.isError) {\n    return makeDbErr(actionRes, 'Error updating mod panel action');\n  }\n\n  const tableName = isApproved ? 'tagSuggestion' : 'tagSuggestionRejected';\n  const err = await addContributionPoints(urlBase, suggestingUserId ?? null, tableName);\n  if (err) {\n    return wrapApiError(err, `Error adding contribution points`);\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport {\n  ApiError,\n  createSuccessJson,\n  logApiErrorMessage,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport stringDistance from '~/utils/string-distance';\nimport { getAllComicNamesAndIDs } from './funcs/get-comics';\n\nexport type SimilarComicResponse = {\n  similarComics: string[];\n  exactMatchComic?: string;\n  similarRejectedComics: string[];\n  exactMatchRejectedComic?: string;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  const body = await args.request.formData();\n  const comicName = body.get('comicName') as string;\n  const excludeName = body.get('excludeName');\n\n  const res = await getSimilarlyNamedComics(\n    urlBase,\n    comicName,\n    excludeName ? excludeName.toString() : undefined\n  );\n\n  if (res.err) {\n    return processApiError('Error in /search-similarly-named-comics', res.err, {\n      comicName,\n      excludeName,\n    });\n  }\n  if (!res.comics) {\n    return logApiErrorMessage('Undefined db res in /search-similarly-named-comics', {\n      comicName,\n      excludeName,\n    });\n  }\n\n  return createSuccessJson(res.comics);\n}\n\nexport async function getSimilarlyNamedComics(\n  urlBase: string,\n  comicName: string,\n  excludeName?: string\n): Promise<{ err?: ApiError; comics?: SimilarComicResponse }> {\n  const logCtx = { comicName, excludeName };\n  if (comicName.length < 2) {\n    return { comics: { similarComics: [], similarRejectedComics: [] } };\n  }\n  const comicNameLower = comicName.toLowerCase();\n  let distanceThreshold = 4;\n  if (comicNameLower.length < 14) {\n    distanceThreshold = 3;\n  }\n  if (comicNameLower.length < 5) {\n    distanceThreshold = 2;\n  }\n\n  let response: SimilarComicResponse = {\n    similarComics: [],\n    exactMatchComic: undefined,\n    similarRejectedComics: [],\n    exactMatchRejectedComic: undefined,\n  };\n\n  let allComicsTinyRes = await getAllComicNamesAndIDs(urlBase, {\n    includeRejectedList: true,\n    includeUnlisted: true,\n  });\n  if (allComicsTinyRes.err) {\n    return {\n      err: wrapApiError(allComicsTinyRes.err, 'error getting similar comics', logCtx),\n    };\n  }\n\n  for (let comic of (allComicsTinyRes.comics || []).filter(\n    c =>\n      c.name !== excludeName &&\n      (c.publishStatus === 'published' ||\n        c.publishStatus === 'pending' ||\n        c.publishStatus === 'scheduled')\n  )) {\n    let distance = stringDistance(comicName, comic.name);\n\n    if (distance === 0) {\n      response.exactMatchComic = comic.name;\n    } else if (distance <= distanceThreshold) {\n      response.similarComics.push(comic.name);\n    }\n  }\n\n  for (let comic of (allComicsTinyRes.comics || []).filter(\n    c =>\n      c.name !== excludeName &&\n      (c.publishStatus === 'uploaded' ||\n        c.publishStatus === 'rejected' ||\n        c.publishStatus === 'rejected-list')\n  )) {\n    let distance = stringDistance(comicName, comic.name);\n    if (distance === 0) {\n      if (comic.publishStatus === 'rejected-list') {\n        response.exactMatchRejectedComic = comic.name;\n      } else {\n        response.exactMatchComic = comic.name;\n      }\n    } else if (distance <= distanceThreshold) {\n      if (comic.publishStatus === 'rejected-list') {\n        response.similarRejectedComics.push(comic.name);\n      } else {\n        response.similarComics.push(comic.name);\n      }\n    }\n  }\n\n  return { comics: response };\n}\n", "// Calculates the \"distance\" between two strings. Written by copilot.\nexport default function stringDistance(aCased: string, bCased: string): Number {\n  const a = aCased.toLowerCase();\n  const b = bCased.toLowerCase();\n\n  if (a.length === 0) return b.length;\n  if (b.length === 0) return a.length;\n\n  const matrix = [];\n  // increment along the first column of each row\n  let i;\n  for (i = 0; i <= b.length; i++) {\n    matrix[i] = [i];\n  }\n  // increment each column in the first row\n  let j;\n  for (j = 0; j <= a.length; j++) {\n    matrix[0][j] = j;\n  }\n  // Fill in the rest of the matrix\n  for (i = 1; i <= b.length; i++) {\n    for (j = 1; j <= a.length; j++) {\n      if (b.charAt(i - 1) == a.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(\n          matrix[i - 1][j - 1] + 1, // substitution\n\n          matrix[i][j - 1] + 1, // insertion\n          matrix[i - 1][j] + 1\n        ); // deletion\n      }\n    }\n  }\n\n  return matrix[b.length][a.length];\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { parseFormJson } from '~/utils/formdata-parser';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { addContributionPoints } from '../funcs/add-contribution-points';\n\nexport type ProcessComicProblemBody = {\n  actionId: number;\n  isApproved: boolean;\n  reportingUserId?: number;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const { fields, isUnauthorized, user } = await parseFormJson<ProcessComicProblemBody>(\n    args,\n    'mod'\n  );\n  if (isUnauthorized) return new Response('Unauthorized', { status: 401 });\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await processComicProblem(\n    urlBase,\n    fields.isApproved,\n    fields.actionId,\n    user!.userId,\n    fields.reportingUserId\n  );\n\n  if (err)\n    return processApiError('Error in /process-comic-problem', err, {\n      ...fields,\n    });\n\n  return createSuccessJson();\n}\n\nasync function processComicProblem(\n  urlBase: string,\n  isApproved: boolean,\n  actionId: number,\n  modId: number,\n  reportingUserId?: number\n): Promise<ApiError | undefined> {\n  const updateActionQuery = `UPDATE comicproblem SET status = ?, modId = ? WHERE id = ?`;\n  const updateActionQueryParams = [isApproved ? 'approved' : 'rejected', modId, actionId];\n\n  const dbRes = await queryDb(urlBase, updateActionQuery, updateActionQueryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error updating comic problem');\n  }\n\n  const err = await addContributionPoints(\n    urlBase,\n    reportingUserId ?? null,\n    isApproved ? 'comicProblem' : 'comicProblemRejected'\n  );\n  if (err) return err;\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return new Response('Missing comicId', { status: 400 });\n\n  const err = await rejectComic(urlBase, parseInt(formComicId.toString()));\n\n  if (err) {\n    return processApiError('Error in /reject-pending-comic', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function rejectComic(\n  urlBase: string,\n  comicId: number\n): Promise<ApiError | undefined> {\n  const updateActionQuery = `UPDATE comic SET publishStatus = 'rejected' WHERE id = ?`;\n  const dbRes = await queryDb(urlBase, updateActionQuery, [comicId]);\n  if (dbRes.isError) {\n    return makeDbErr(\n      dbRes,\n      'Error rejecting comic, could not set publishStatus rejected',\n      { comicId }\n    );\n  }\n}\n", "import { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport { MdArrowBack } from 'react-icons/md';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport InfoBox from '~/components/InfoBox';\nimport Link from '~/components/Link';\nimport TextareaUncontrolled from '~/components/Textarea/TextareaUncontrolled';\nimport TextInputUncontrolled from '~/components/TextInput/TextInputUncontrolled';\nimport TopGradientBox from '~/components/TopGradientBox';\nimport { getModApplicationForUser } from '~/routes/api/funcs/get-mod-application';\nimport { queryDb } from '~/utils/database-facade';\nimport { authLoader, redirectIfNotLoggedIn } from '~/utils/loaders';\nimport {\n  create400Json,\n  create500Json,\n  createSuccessJson,\n  logApiError,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport default function Apply() {\n  const fetcher = useGoodFetcher({\n    method: 'post',\n    toastError: false,\n    toastSuccessMessage: 'Application submitted!',\n    preventToastClose: true,\n  });\n  const { hasExistingApplication } = useLoaderData<typeof loader>();\n  const [notesIsValid, setNotesIsValid] = useState(false);\n  const [telegramIsValid, setTelegramIsValid] = useState(false);\n\n  return (\n    <div className=\"container mx-auto\">\n      <h1>Become a mod</h1>\n      <p className=\"mb-4\">\n        <Link href=\"/contribute/join-us\" text=\"Back\" Icon={MdArrowBack} />\n      </p>\n\n      <p>\n        In order to be accepted as a mod, you must have and use a Telegram account. We use\n        telegram for communication and announcements for mods. If you do not have a\n        telegram account, you will not be accepted.\n      </p>\n\n      {hasExistingApplication && (\n        <InfoBox\n          variant=\"info\"\n          showIcon\n          text=\"You already have an existing application. You can see the status of your application on your Account page.\"\n          className=\"my-4\"\n        />\n      )}\n\n      {!hasExistingApplication && (\n        <TopGradientBox containerClassName=\"w-fit mx-auto my-4\" innerClassName=\"p-8 pb-4\">\n          <fetcher.Form className=\"w-fit mx-auto flex flex-col\">\n            <TextareaUncontrolled\n              name=\"notes\"\n              label=\"Tell us a little about why you want to be a mod, and what sources you use for finding comics (which websites):\"\n              className=\"mb-12\"\n              validatorFunc={v => v.length > 0}\n              onErrorChange={hasError => setNotesIsValid(!hasError)}\n            />\n\n            <TextInputUncontrolled\n              name=\"telegram\"\n              label=\"Telegram username (don't include the @ symbol):\"\n              type=\"text\"\n              className=\"mb-4\"\n              validatorFunc={validateTelegramUsername}\n              onErrorChange={hasError => setTelegramIsValid(!hasError)}\n            />\n\n            {fetcher.isError && !fetcher.isLoading && (\n              <InfoBox\n                variant=\"error\"\n                text={fetcher.errorMessage}\n                showIcon\n                closable\n                className=\"my-4\"\n              />\n            )}\n\n            <div className=\"flex\">\n              <LoadingButton\n                text=\"Submit application\"\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"my-4 mx-auto\"\n                disabled={!notesIsValid || !telegramIsValid}\n                isLoading={fetcher.isLoading}\n                isSubmit\n              />\n            </div>\n          </fetcher.Form>\n        </TopGradientBox>\n      )}\n    </div>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const user = await redirectIfNotLoggedIn(args);\n\n  const existingApplicationRes = await getModApplicationForUser(\n    args.context.DB_API_URL_BASE,\n    user.userId\n  );\n\n  if (existingApplicationRes.err) {\n    return processApiError('Error in join us - apply', existingApplicationRes.err);\n  }\n\n  return { hasExistingApplication: existingApplicationRes.application !== null };\n}\n\nconst validateTelegramUsername = (username: string) =>\n  /^([a-zA-Z0-9_]){5,32}$/.test(username);\n\nexport async function action(args: ActionFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  const reqBody = await args.request.formData();\n  const { notes, telegram } = Object.fromEntries(reqBody);\n\n  if (!notes || !telegram) return create400Json('Missing fields');\n  if (!validateTelegramUsername(telegram as string))\n    return create400Json('Invalid telegram username');\n\n  const user = await authLoader(args);\n  if (!user) return create400Json('Not logged in');\n\n  const existingApplicationRes = await getModApplicationForUser(urlBase, user.userId);\n  if (existingApplicationRes.err) {\n    logApiError('Error creating mod application', existingApplicationRes.err);\n    return create500Json();\n  }\n\n  if (existingApplicationRes.application) {\n    return create400Json('You already have an existing application');\n  }\n\n  const insertQuery = `\n    INSERT INTO modapplication (userId, telegramUsername, notes)\n    VALUES (?, ?, ?)`;\n  const insertParams = [user.userId, telegram.toString().trim(), notes];\n\n  const insertDbRes = await queryDb(urlBase, insertQuery, insertParams);\n  if (insertDbRes.isError) {\n    logApiError(undefined, {\n      logMessage: 'Error creating mod application',\n      error: insertDbRes,\n      context: { userId: user.userId, notes, telegram },\n    });\n    return create500Json();\n  }\n  return createSuccessJson();\n}\n", "import { useMemo } from 'react';\n\nexport type BaseTextareaProps = {\n  label: string;\n  name: string;\n  rows?: number;\n  placeholder?: string;\n  disabled?: boolean;\n  helperText?: string;\n  errorText?: string;\n  error?: boolean;\n  className?: string;\n};\n\ntype FullTextInputProps = {\n  value: string;\n  onChange: (newVal: string) => void;\n  onBlur?: () => void;\n} & BaseTextareaProps;\n\nexport default function Textarea({\n  value,\n  onChange,\n  label,\n  name,\n  rows = 4,\n  placeholder,\n  disabled = false,\n  helperText = '',\n  errorText = '',\n  error = false,\n  className = '',\n  onBlur,\n  ...props\n}: FullTextInputProps) {\n  const borderClass = useMemo(() => {\n    if (error) {\n      return 'border-red-strong-300';\n    }\n    if (disabled) {\n      return 'border-gray-800 dark:border-gray-600';\n    }\n    return '';\n  }, [error, disabled]);\n\n  const borderStyle = borderClass\n    ? ''\n    : { borderImage: 'linear-gradient(to right, #9aebe7, #adfee0) 1' };\n\n  return (\n    <div className={`flex flex-col ${className}`} {...props}>\n      {label && (\n        <label className={`${error ? 'text-red-strong-300' : ''} text-sm`}>{label}</label>\n      )}\n      <div className={`-mt-1 relative`}>\n        <textarea\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          name={name}\n          rows={rows}\n          placeholder={placeholder}\n          disabled={disabled}\n          className={`w-full bg-transparent p-1.5 outline-none border border-0 border-b-2 \n            placeholder-gray-800 dark:placeholder-gray-700 ${borderClass}`}\n          style={{\n            appearance: 'textfield',\n            ...borderStyle,\n          }}\n          onBlur={onBlur}\n        />\n      </div>\n      {errorText && error && (\n        <p className=\"text-sm py-0.5 px-2 text-red-strong-300\">{errorText}</p>\n      )}\n      {!(errorText && error) && helperText && (\n        <label className=\"text-sm py-0.5 px-2\">{helperText}</label>\n      )}\n    </div>\n  );\n}\n", "import type { BaseTextareaProps } from './Textarea';\nimport Textarea from './Textarea';\nimport { useMemo, useState } from 'react';\n\ntype UncontrolledTextareaProps = {\n  validatorFunc?: (val: string) => boolean;\n  onErrorChange?: (newVal: boolean) => void;\n} & BaseTextareaProps;\n\nexport default function TextareaUncontrolled({\n  label,\n  name,\n  rows = 4,\n  placeholder = '',\n  disabled = false,\n  helperText = '',\n  errorText = '',\n  error = false,\n  validatorFunc,\n  onErrorChange,\n  className = '',\n  ...props\n}: UncontrolledTextareaProps) {\n  const [state, setState] = useState('');\n  const [hasBeenBlurred, setHasBeenBlurred] = useState(false);\n  const [lastErrorUpdate, setLastErrorUpdate] = useState(false);\n\n  const isInternalError = useMemo(() => {\n    if (validatorFunc) {\n      const isError = !validatorFunc(state);\n      if (onErrorChange && isError !== lastErrorUpdate) {\n        onErrorChange(isError);\n        setLastErrorUpdate(isError);\n      }\n      return isError;\n    }\n    return false;\n  }, [state, validatorFunc]);\n\n  const shouldShowError = error || (hasBeenBlurred && isInternalError);\n\n  return (\n    <Textarea\n      value={state}\n      onChange={newVal => setState(newVal)}\n      label={label}\n      name={name}\n      rows={rows}\n      placeholder={placeholder}\n      disabled={disabled}\n      helperText={helperText}\n      errorText={shouldShowError ? errorText : ''}\n      error={shouldShowError}\n      className={className}\n      onBlur={() => setHasBeenBlurred(true)}\n      {...props}\n    />\n  );\n}\n", "type TopGradientBoxProps = {\n  containerClassName?: string;\n  innerClassName?: string;\n  children: React.ReactNode;\n};\n\nexport default function TopGradientBox({\n  containerClassName,\n  innerClassName,\n  children,\n}: TopGradientBoxProps) {\n  return (\n    <div\n      className={`pt-2.5 bg-gradient-to-r from-theme1-primary to-theme2-primary shadow-lg ${containerClassName}`}\n    >\n      <div className={`bg-white dark:bg-gray-300 w-full h-full ${innerClassName}`}>\n        {children}\n      </div>\n    </div>\n  );\n}\n", "import { ModApplication } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\nexport async function getModApplicationForUser(\n  urlBase: string,\n  userId: number\n): Promise<{\n  err?: ApiError;\n  application?: ModApplication | null;\n}> {\n  let query = `SELECT\n      modapplication.id,\n      userId,\n      timestamp,\n      telegramUsername,\n      notes,\n      user.username\n    FROM modapplication INNER JOIN user ON (user.id = modapplication.userId)\n    WHERE UserId = ?`;\n\n  let queryParams = [userId];\n  const dbRes = await queryDb<ModApplication[]>(urlBase, query, queryParams);\n  if (dbRes.isError || !dbRes.result) {\n    return makeDbErrObj(dbRes, 'Error getting mod applications for user', { userId });\n  }\n\n  return { application: dbRes.result.length > 0 ? dbRes.result[0] : null };\n}\n", "import type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { Form, useActionData, useLoaderData, useNavigation } from '@remix-run/react';\nimport { useEffect, useRef, useState } from 'react';\nimport { clearTimeout } from 'timers';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Checkbox from '~/components/Checkbox/Checkbox';\nimport InfoBox from '~/components/InfoBox';\nimport Textarea from '~/components/Textarea/Textarea';\nimport TextInput from '~/components/TextInput/TextInput';\nimport TopGradientBox from '~/components/TopGradientBox';\nimport { SimilarComicResponse } from '~/routes/api/search-similarly-named-comic';\nimport { queryDb } from '~/utils/database-facade';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErrObj,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { authLoader } from '~/utils/loaders';\nimport BackToContribute from '../BackToContribute';\nimport { SimilarArtistResponse } from '~/routes/api/search-similar-artist';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport async function loader(args: LoaderFunctionArgs) {\n  return await authLoader(args);\n}\n\nexport default function Upload() {\n  const actionData = useActionData<typeof action>();\n  const similarComicsFetcher = useGoodFetcher<SimilarComicResponse>({\n    url: '/api/search-similarly-named-comic',\n    method: 'post',\n  });\n  const similarArtistsFetcher = useGoodFetcher({\n    url: '/api/search-similar-artist',\n    method: 'post',\n    onFinish: () => {\n      if (!similarArtistsFetcher.data) return;\n      setSimilarArtists(similarArtistsFetcher.data);\n    },\n  });\n  const [comicName, setComicName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [comments, setComments] = useState('');\n\n  const [similarComics, setSimilarComics] = useState<SimilarComicResponse>();\n  const [isComicnameLegal, setIsComicnameLegal] = useState(true);\n  const [hasConfirmedDifferentComic, setHasConfirmedDifferentComic] = useState(false);\n\n  const [similarArtists, setSimilarArtists] = useState<SimilarArtistResponse>();\n  const [isArtistNameLegal, setIsArtistNameLegal] = useState(true);\n  const [hasConfirmedNewArtist, setHasConfirmedNewArtist] = useState(false);\n\n  const user = useLoaderData<typeof loader>();\n  const debounceTimeoutArtistRef = useRef<NodeJS.Timeout | null>(null);\n  const debounceTimeoutComicRef = useRef<NodeJS.Timeout | null>(null);\n  const transition = useNavigation();\n\n  useEffect(() => {\n    let isLegal = false;\n\n    if (similarArtists) {\n      const isExactMatch = similarArtists.exactMatchBannedArtist;\n      const isSimilar = similarArtists.similarBannedArtists.length > 0;\n\n      if (!isExactMatch && artistName.length > 2) {\n        isLegal = !isSimilar || hasConfirmedNewArtist;\n      }\n    }\n\n    setIsArtistNameLegal(isLegal);\n  }, [similarArtists, hasConfirmedNewArtist]);\n\n  useEffect(onComicNameChange, [comicName]);\n\n  function onComicNameChange() {\n    setSimilarComics(undefined);\n    setIsComicnameLegal(false);\n    setHasConfirmedDifferentComic(false);\n\n    if (debounceTimeoutComicRef.current) clearTimeout(debounceTimeoutComicRef.current);\n    if (comicName.length < 3) return;\n\n    debounceTimeoutComicRef.current = setTimeout(() => {\n      similarComicsFetcher.submit({ comicName });\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (!similarComicsFetcher.data) return;\n\n    const similarComics = similarComicsFetcher.data;\n\n    const isExactMatch =\n      similarComics.exactMatchComic || similarComics.exactMatchRejectedComic;\n\n    console.log(similarComics);\n\n    const isAnySimilar =\n      similarComics.similarComics.length > 0 ||\n      similarComics.similarRejectedComics.length > 0;\n\n    let isLegal = false;\n    if (!isExactMatch && comicName.length > 2) {\n      isLegal = !isAnySimilar || hasConfirmedDifferentComic;\n    }\n\n    setSimilarComics(similarComics);\n    setIsComicnameLegal(isLegal);\n  }, [similarComicsFetcher.data, hasConfirmedDifferentComic, comicName]);\n\n  useEffect(onArtistNameChange, [artistName]);\n\n  function onArtistNameChange() {\n    setHasConfirmedNewArtist(false);\n    setSimilarArtists(undefined);\n\n    if (debounceTimeoutArtistRef.current) clearTimeout(debounceTimeoutArtistRef.current);\n    if (!artistName || artistName.length < 3) return;\n\n    debounceTimeoutArtistRef.current = setTimeout(() => {\n      similarArtistsFetcher.submit({ artistName });\n    }, 1500);\n  }\n\n  function getSuccessText() {\n    if (user) {\n      return 'You can track its progress and result in the \"Your contributions\" section of the previous page.';\n    }\n\n    return (\n      'Since you are not logged in, you cannot track the status and result of your submission. We' +\n      ' recommend that you create a user next time - it will take you under a minute!'\n    );\n  }\n\n  const isSubmitDisabled =\n    !comicName || !artistName || !comments || !isComicnameLegal || !isArtistNameLegal;\n\n  const isExactComicnameMatch =\n    similarComics?.exactMatchComic || similarComics?.exactMatchRejectedComic;\n  const isAnySimilarComics =\n    similarComics &&\n    !isExactComicnameMatch &&\n    (similarComics.similarComics.length > 0 ||\n      similarComics.similarRejectedComics.length > 0);\n\n  const isExactArtistMatch = similarArtists?.exactMatchBannedArtist;\n  const similarOrExactBannedArtist =\n    !isExactArtistMatch &&\n    similarArtists &&\n    similarArtists.similarBannedArtists.length > 0;\n\n  return (\n    <section className=\"container mx-auto justify-items-center\">\n      <h1 className=\"mb-2\">Suggest a comic</h1>\n      <p className=\"mb-4\">\n        <BackToContribute />\n      </p>\n\n      {actionData?.success ? (\n        <InfoBox\n          title=\"Thanks for helping out!\"\n          text={getSuccessText()}\n          variant=\"success\"\n          className=\"mt-4\"\n        />\n      ) : (\n        <>\n          <h4>Introduction</h4>\n          <p>\n            If you would like to follow your suggestion&apos;s status,{' '}\n            <span>create an account!</span> You can then follow updates in the &quot;view\n            your contributions&quot; section above. Having a user will also earn you\n            points in the scoreboard on the previous page - though significantly less than\n            if you upload the comic yourself.\n          </p>\n          <br />\n          <h4>Guidelines</h4>\n          <ul className=\"list-none ml-4 spaced\">\n            <li>\n              The comic should be at least 4 pages long. If the pages have lots of panels\n              or if the comic is of very high quality, 3-page comics might be accepted.\n            </li>\n            <li>\n              The comic will not be accepted if it is of low quality (poorly drawn).\n            </li>\n            <li>The comic will not be accepted if it is not in English.</li>\n            <li>The comic might not be accepted if it is uncolored.</li>\n            <li>The comic will not be accepted if it has censoring bars, dots, etc.</li>\n            <li>\n              We do not accept cub comics, nor ones by artists Jay Naylor and Voregence\n              who have asked not to be represented here.\n            </li>\n          </ul>\n          <TopGradientBox containerClassName=\"my-10 mx-20 shadow-lg\">\n            <Form method=\"post\" className=\"w-fit mx-8 py-6\">\n              <h3 className=\"pb-6\">Suggest comic</h3>\n              <TextInput\n                label=\"Comic name (required)\"\n                name=\"comicName\"\n                className=\"mb-4\"\n                onChange={setComicName}\n                value={comicName}\n              />\n\n              {similarComics && (\n                <>\n                  {isAnySimilarComics && (\n                    <>\n                      {!hasConfirmedDifferentComic && (\n                        <InfoBox\n                          variant=\"warning\"\n                          boldText={false}\n                          className=\"mt-2 w-fit\"\n                          disableElevation\n                        >\n                          {similarComics.similarComics.length > 0 && (\n                            <>\n                              <p>\n                                The following comics with similar names already exist in\n                                the system:\n                              </p>\n                              <ul>\n                                {similarComics.similarComics.map((comicName: string) => (\n                                  <li key={comicName}>{comicName}</li>\n                                ))}\n                              </ul>\n                            </>\n                          )}\n                          {similarComics.similarRejectedComics.length > 0 && (\n                            <>\n                              <p>\n                                The following comics with similar names have been\n                                rejected. If one of these is your comic, do not upload it:\n                              </p>\n                              <ul>\n                                {similarComics.similarRejectedComics.map(\n                                  (comicName: string) => (\n                                    <li key={comicName}>{comicName}</li>\n                                  )\n                                )}\n                              </ul>\n                            </>\n                          )}\n                        </InfoBox>\n                      )}\n                      <Checkbox\n                        label=\"The suggested comic is not one of the above\"\n                        checked={hasConfirmedDifferentComic}\n                        onChange={setHasConfirmedDifferentComic}\n                        className=\"mt-2\"\n                      />\n                    </>\n                  )}\n\n                  {similarComics.exactMatchComic && (\n                    <InfoBox\n                      text={`A comic with this name already exists in the system. You cannot submit this comic name. If you think this is a different comic with the same name, you can add \"(<artistname>)\" to the end of the comic's name. Please verify that this is not a duplicate before submitting.`}\n                      variant=\"error\"\n                      className=\"mt-2 w-fit\"\n                      disableElevation\n                    />\n                  )}\n                  {similarComics.exactMatchRejectedComic && (\n                    <InfoBox\n                      text=\"A comic with this name has been rejected. You cannot submit this comic name.\"\n                      variant=\"error\"\n                      className=\"mt-2 w-fit\"\n                      disableElevation\n                    />\n                  )}\n                </>\n              )}\n\n              <TextInput\n                label=\"Artist\"\n                name=\"artist\"\n                className=\"mt-12 mb-4\"\n                onChange={setArtistName}\n                value={artistName}\n              />\n\n              {isExactArtistMatch && (\n                <InfoBox\n                  variant=\"error\"\n                  className=\"mt-2\"\n                  disableElevation\n                  text={\n                    similarArtists.exactMatchArtist\n                      ? 'An artist with this name already exists in the system'\n                      : 'An artist with this name has been banned or has requested their comics not be published here'\n                  }\n                />\n              )}\n\n              {similarOrExactBannedArtist && (\n                <>\n                  {!hasConfirmedNewArtist && (\n                    <InfoBox\n                      variant=\"warning\"\n                      className=\"mt-2\"\n                      boldText={false}\n                      disableElevation\n                    >\n                      {similarArtists.similarBannedArtists.length > 0 && (\n                        <>\n                          <p>\n                            The artists are somewhat similar to the one you entered, and\n                            have been banned or have requested their comics not be\n                            published here:\n                          </p>\n                          <ul>\n                            {similarArtists.similarBannedArtists.map(name => (\n                              <li key={name}>{name}</li>\n                            ))}\n                          </ul>\n                        </>\n                      )}\n                    </InfoBox>\n                  )}\n\n                  <Checkbox\n                    label=\"This is not one of the above artists\"\n                    checked={hasConfirmedNewArtist}\n                    onChange={setHasConfirmedNewArtist}\n                    className=\"mt-2\"\n                  />\n                </>\n              )}\n\n              <Textarea\n                label=\"Links, comments (required)\"\n                name=\"linksComments\"\n                className=\"pb-12 mt-12\"\n                value={comments}\n                onChange={setComments}\n              />\n\n              {actionData?.error && (\n                <InfoBox\n                  variant=\"error\"\n                  text={actionData.error}\n                  className=\"my-2\"\n                  disableElevation\n                />\n              )}\n\n              <p>\n                Please provide some link (e.g. e621, FurAffinity, u18chan, reddit,\n                anything not behind a paywall), and any other helpful comments you may\n                have. If you have multiple sources, feel free to provide all of them!\n              </p>\n              <div className=\"flex justify-center mt-6\">\n                <LoadingButton\n                  isLoading={transition.state === 'submitting'}\n                  text=\"Submit suggestion\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitDisabled}\n                  isSubmit\n                />\n              </div>\n            </Form>\n          </TopGradientBox>\n        </>\n      )}\n    </section>\n  );\n}\n\nexport async function action(args: ActionFunctionArgs) {\n  const reqBody = await args.request.formData();\n  const logCtx = Object.fromEntries(reqBody);\n  const { comicName, artist, linksComments } = logCtx;\n\n  if (!comicName || !artist || !linksComments) {\n    return create400Json('Some field is missing');\n  }\n\n  const errors = await checkForExistingComicOrSuggestion(\n    args.context.DB_API_URL_BASE,\n    comicName as string\n  );\n  if (errors?.err) {\n    return processApiError('Error in post of /suggest-comic', errors.err, logCtx);\n  } else if (errors?.comicExists) {\n    return create400Json('Comic already exists');\n  } else if (errors?.suggestionExists) {\n    return create400Json('A suggestion for this comic already exists');\n  }\n\n  const user = await authLoader(args);\n  let userIp = null;\n  let userId = null;\n  if (user) {\n    userId = user.userId;\n  } else {\n    userIp = args.request.headers.get('CF-Connecting-IP') || 'unknown';\n  }\n\n  let insertQuery = `\n    INSERT INTO comicsuggestion \n      (Name, ArtistName, Description, UserId, UserIp)\n    VALUES (?, ?, ?, ?, ?)`;\n  let insertParams = [comicName.toString().trim(), artist, linksComments, userId, userIp];\n\n  const dbRes = await queryDb(args.context.DB_API_URL_BASE, insertQuery, insertParams);\n\n  if (dbRes.isError) {\n    return processApiError(undefined, {\n      logMessage: 'Db error in post of /suggest-comic',\n      error: dbRes,\n      context: logCtx,\n    });\n  }\n\n  return createSuccessJson();\n}\n\nasync function checkForExistingComicOrSuggestion(\n  dbUrlBase: string,\n  comicName: string\n): Promise<\n  { err?: ApiError; suggestionExists?: boolean; comicExists?: boolean } | undefined\n> {\n  let existingSuggestionQueryPromise = queryDb<{ count: number }[]>(\n    dbUrlBase,\n    `SELECT COUNT(*) AS count FROM comicsuggestion WHERE Name = ?`,\n    [comicName]\n  );\n  let existingComicQueryPromise = queryDb<{ count: number }[]>(\n    dbUrlBase,\n    `SELECT COUNT(*) AS count FROM comic WHERE Name = ?`,\n    [comicName]\n  );\n\n  const [existingSuggestionDbRes, existingComicDbRes] = await Promise.all([\n    existingSuggestionQueryPromise,\n    existingComicQueryPromise,\n  ]);\n\n  if (existingSuggestionDbRes.isError) {\n    return makeDbErrObj(\n      existingSuggestionDbRes,\n      'Error checking for existing suggestions',\n      { comicName }\n    );\n  }\n  if (existingSuggestionDbRes.result && existingSuggestionDbRes.result[0].count > 0) {\n    return { suggestionExists: true };\n  }\n\n  if (existingComicDbRes.isError) {\n    return makeDbErrObj(existingComicDbRes, 'Error checking for existing comics', {\n      comicName,\n    });\n  }\n  if (existingComicDbRes.result && existingComicDbRes.result[0].count > 0) {\n    return { comicExists: true };\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { AllowedAnonComicVerdict } from '~/routes/admin/comics/AnonUploadedComicSection';\nimport { ComicPublishStatus, ComicUploadVerdict } from '~/types/types';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  create400Json,\n  createSuccessJson,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { processAnyUpload } from './process-user-upload';\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const comicName = formDataBody.get('comicName');\n  if (!comicName) return create400Json('Missing comicName');\n\n  const formVerdict = formDataBody.get('verdict');\n  if (!formVerdict) return create400Json('Missing verdict');\n  const verdict = formVerdict.toString() as AllowedAnonComicVerdict;\n\n  let publishStatus: ComicPublishStatus = 'pending';\n  let comicUploadVerdict: ComicUploadVerdict = 'excellent';\n\n  if (verdict === 'rejected') {\n    publishStatus = 'rejected';\n    comicUploadVerdict = 'rejected';\n  }\n  if (verdict === 'rejected-list') {\n    publishStatus = 'rejected-list';\n    comicUploadVerdict = 'rejected-list';\n  }\n\n  const err = await processAnyUpload(\n    user.userId,\n    urlBase,\n    parseInt(formComicId.toString()),\n    comicName.toString(),\n    undefined,\n    publishStatus,\n    comicUploadVerdict,\n    undefined\n  );\n\n  if (err) {\n    processApiError('Error in /process-anon-upload', err, {\n      comicId: formComicId.toString(),\n      verdict,\n    });\n  }\n\n  return createSuccessJson();\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { ComicPublishStatus, ComicUploadVerdict } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { randomString } from '~/utils/general';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { addContributionPoints } from '../funcs/add-contribution-points';\nimport { getArtistByComicId } from '../funcs/get-artist';\nimport { rejectArtistIfEmpty, setArtistNotPending } from './manage-artist';\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n  const formVerdict = formDataBody.get('verdict');\n  if (!formVerdict) return create400Json('Missing verdict');\n  const formComicName = formDataBody.get('comicName');\n  if (!formComicName) return create400Json('Missing comicName');\n  const formUploaderId = formDataBody.get('uploaderId');\n  if (!formUploaderId) return create400Json('Missing uploaderId');\n\n  const verdict: ComicUploadVerdict = formVerdict.toString() as ComicUploadVerdict;\n  const formModComment = formDataBody.get('modComment');\n  const modComment = formModComment ? formModComment.toString() : undefined;\n  const comicId = parseInt(formComicId.toString());\n  const uploaderId = parseInt(formUploaderId.toString());\n\n  const err = await processUserUpload(\n    user.userId,\n    urlBase,\n    comicId,\n    formComicName.toString(),\n    verdict,\n    modComment,\n    uploaderId\n  );\n\n  if (err) {\n    return processApiError('Error in /process-user-upload', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function processUserUpload(\n  modId: number,\n  urlBase: string,\n  comicId: number,\n  comicName: string,\n  frontendVerdict: ComicUploadVerdict,\n  modComment: string | undefined,\n  uploaderId?: number\n): Promise<ApiError | undefined> {\n  let publishStatus: ComicPublishStatus = 'pending';\n  let metadataVerdict: ComicUploadVerdict =\n    frontendVerdict.toString() as ComicUploadVerdict;\n  if (frontendVerdict === 'rejected') publishStatus = 'rejected';\n  if (frontendVerdict === 'rejected-list') {\n    publishStatus = 'rejected-list';\n    metadataVerdict = 'rejected';\n  }\n\n  const err = await processAnyUpload(\n    modId,\n    urlBase,\n    comicId,\n    comicName,\n    modComment,\n    publishStatus,\n    frontendVerdict,\n    metadataVerdict,\n    uploaderId\n  );\n\n  if (err) {\n    return wrapApiError(err, 'Error processing logged-in-user upload', {\n      comicId,\n      frontendVerdict,\n      metadataVerdict,\n      modComment,\n    });\n  }\n}\n\nexport async function processAnyUpload(\n  modId: number,\n  urlBase: string,\n  comicId: number,\n  comicName: string,\n  modComment: string | undefined,\n  publishStatus: ComicPublishStatus,\n  frontendVerdict: ComicUploadVerdict,\n  metadataVerdict: ComicUploadVerdict | undefined,\n  userUploadId?: number\n): Promise<ApiError | undefined> {\n  let comicQuery = `UPDATE comic SET publishStatus = ? WHERE id = ?`;\n  let comicQueryParams: any[] = [publishStatus, comicId];\n  const isRejected = publishStatus === 'rejected' || publishStatus === 'rejected-list';\n\n  if (frontendVerdict === 'rejected') {\n    const randomStr = randomString(6);\n    const newComicName = `${comicName}-REJECTED-${randomStr}`;\n    comicQuery = `UPDATE comic SET publishStatus = ?, name = ? WHERE id = ?`;\n    comicQueryParams = [publishStatus, newComicName, comicId];\n  }\n\n  const [artistRes, updateComicDbRes] = await Promise.all([\n    getArtistByComicId(urlBase, comicId),\n    queryDb(urlBase, comicQuery, comicQueryParams),\n  ]);\n\n  if (updateComicDbRes.isError) {\n    return makeDbErr(updateComicDbRes, 'Error updating comic in db');\n  }\n  if (artistRes.notFound) {\n    return { logMessage: 'Artist not found' };\n  }\n  if (artistRes.err) {\n    return wrapApiError(artistRes.err, `Error getting artist`);\n  }\n  const artist = artistRes.artist!;\n\n  if (artist.isPending) {\n    let pendingErr: ApiError | undefined;\n    if (isRejected) {\n      const rejectRes = await rejectArtistIfEmpty(urlBase, artist.id, artist.name);\n      pendingErr = rejectRes.err;\n    } else {\n      pendingErr = await setArtistNotPending(urlBase, artist.id);\n    }\n\n    if (pendingErr) {\n      return wrapApiError(pendingErr, `Error processing user upload`);\n    }\n  }\n\n  let metadataQuery = 'UPDATE comicmetadata SET modId = ? WHERE comicId = ?';\n  let metadataQueryParams: any[] = [modId, comicId];\n\n  if (metadataVerdict) {\n    metadataQuery = `\n    UPDATE comicmetadata \n    SET\n      verdict = ?,\n      modComment = ?,\n      modId = ?\n    WHERE comicId = ?`;\n    metadataQueryParams = [metadataVerdict, modComment, modId, comicId];\n  }\n\n  if (frontendVerdict === 'rejected') {\n    if (metadataVerdict) {\n      // For user uploads\n      metadataQuery = `\n        UPDATE comicmetadata\n        SET\n          verdict = ?,\n          modComment = ?,\n          modId = ?,\n          originalNameIfRejected = ?,\n          originalArtistIfRejected = ?\n        WHERE comicId = ?`;\n      metadataQueryParams = [\n        metadataVerdict,\n        modComment,\n        modId,\n        comicName,\n        artist.name,\n        comicId,\n      ];\n    } else {\n      // For anon: Only names\n      metadataQuery = `\n        UPDATE comicmetadata\n        SET\n          modId = ?,\n          originalNameIfRejected = ?,\n          originalArtistIfRejected = ?\n        WHERE comicId = ?`;\n      metadataQueryParams = [modId, comicName, artist.name, comicId];\n    }\n  }\n\n  if (frontendVerdict === 'rejected-list') {\n    if (metadataVerdict) {\n      // For user uploads\n      metadataQuery = `\n      UPDATE comicmetadata\n      SET\n        verdict = ?,\n        modComment = ?,\n        modId = ?,\n        originalArtistIfRejected = ?\n      WHERE comicId = ?`;\n      metadataQueryParams = [metadataVerdict, modComment, modId, artist.name, comicId];\n    } else {\n      // For anon: Only names\n      metadataQuery = `\n        UPDATE comicmetadata\n        SET\n          modId = ?,\n          originalArtistIfRejected = ?\n        WHERE comicId = ?`;\n      metadataQueryParams = [modId, artist.name, comicId];\n    }\n  }\n\n  const dbTableName =\n    frontendVerdict === 'rejected' || frontendVerdict === 'rejected-list'\n      ? 'comicUploadRejected'\n      : `comicUpload${frontendVerdict.replace('-', '')}`;\n  const err = await addContributionPoints(urlBase, userUploadId ?? null, dbTableName);\n  if (err) {\n    return wrapApiError(err, `Error adding contribution points`);\n  }\n\n  if (!metadataQuery) return;\n\n  const metadataDbRes = await queryDb(urlBase, metadataQuery, metadataQueryParams);\n  if (metadataDbRes.isError) {\n    return makeDbErr(metadataDbRes, 'Error updating comic metadata in db');\n  }\n}\n", "import { Artist } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\ntype DbArtist = {\n  id: number;\n  name: string;\n  patreonName: string;\n  e621Name: string;\n  isPending: 0 | 1;\n  isBanned: 0 | 1;\n  isRejected: 0 | 1;\n  linksString: string;\n};\n\nexport async function getArtistById(\n  urlBase: string,\n  artistId: number\n): Promise<{ artist?: Artist; notFound?: boolean; err?: ApiError }> {\n  const artistQuery = `\n    SELECT\n      id, name, patreonName, e621Name, isPending, isBanned, isRejected,\n      GROUP_CONCAT(DISTINCT linkUrl SEPARATOR ',') AS linksString \n    FROM artist LEFT JOIN artistlink ON (artistlink.artistId = artist.id)\n    WHERE id = ?`;\n\n  const dbRes = await queryDb<DbArtist[]>(urlBase, artistQuery, [artistId]);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting artist', { artistId });\n  }\n\n  if (!dbRes.result || dbRes.result.length === 0) {\n    return { notFound: true };\n  }\n  return {\n    artist: {\n      id: dbRes.result[0].id,\n      name: dbRes.result[0].name,\n      patreonName: dbRes.result[0].patreonName,\n      e621Name: dbRes.result[0].e621Name,\n      isPending: dbRes.result[0].isPending === 1,\n      isBanned: dbRes.result[0].isBanned === 1,\n      isRejected: dbRes.result[0].isRejected === 1,\n      links: dbRes.result[0].linksString ? dbRes.result[0].linksString.split(',') : [],\n    },\n  };\n}\n\nexport async function getArtistByComicId(\n  urlBase: string,\n  comicId: number\n): Promise<{ artist?: Artist; notFound?: boolean; err?: ApiError }> {\n  const artistQuery = `SELECT\n      id, name, patreonName, e621Name, isPending, isBanned, isRejected,\n      GROUP_CONCAT(DISTINCT linkUrl SEPARATOR ',') AS linksString \n    FROM artist LEFT JOIN artistlink ON (artistlink.artistId = artist.id)\n    WHERE artist.id = (SELECT artist FROM comic WHERE comic.id = ?)\n    GROUP BY id, name, patreonName, e621Name, isPending, isBanned, isRejected`;\n\n  const dbRes = await queryDb<DbArtist[]>(urlBase, artistQuery, [comicId]);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting artist by comic id', { comicId });\n  }\n  if (!dbRes.result || dbRes.result.length === 0) {\n    return { notFound: true };\n  }\n\n  const artist: Artist = {\n    id: dbRes.result[0].id,\n    name: dbRes.result[0].name,\n    patreonName: dbRes.result[0].patreonName,\n    e621Name: dbRes.result[0].e621Name,\n    isPending: dbRes.result[0].isPending === 1,\n    isBanned: dbRes.result[0].isBanned === 1,\n    isRejected: dbRes.result[0].isRejected === 1,\n    links: dbRes.result[0].linksString ? dbRes.result[0].linksString.split(',') : [],\n  };\n\n  return { artist };\n}\n", "import { ComicTiny } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { randomString } from '~/utils/general';\nimport { ApiError, makeDbErr, makeDbErrObj, wrapApiError } from '~/utils/request-helpers';\nimport { getComicsByArtistId } from '../funcs/get-comics';\n\nexport async function rejectArtistIfEmpty(\n  urlBase: string,\n  artistId: number,\n  artistName: string\n): Promise<{ isEmpty?: boolean; err?: ApiError }> {\n  let { comics, err } = await getComicsByArtistId(urlBase, artistId);\n  if (err) {\n    return { err: wrapApiError(err, 'Error rejecting artist', { artistId }) };\n  }\n  comics = comics as ComicTiny[];\n  if (comics.length > 0) return { isEmpty: false };\n\n  const randomStr = randomString(6);\n  const newArtistName = `${artistName}-REJECTED-${randomStr}`;\n\n  const rejectQuery = `UPDATE artist SET name = ?, isRejected = 1 WHERE id = ?`;\n  const dbRes = await queryDb(urlBase, rejectQuery, [newArtistName, artistId]);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error rejecting artist', {\n      artistId,\n      artistName,\n      newArtistName,\n    });\n  }\n\n  return { isEmpty: true };\n}\n\nexport async function setArtistNotPending(\n  urlBase: string,\n  artistId: number\n): Promise<ApiError | undefined> {\n  const updateQuery = `UPDATE artist SET isPending = 0 WHERE id = ?`;\n  const dbRes = await queryDb(urlBase, updateQuery, [artistId]);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error setting artist not pending', { artistId });\n  }\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport {\n  create400Json,\n  logApiErrorMessage,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { getPendingComics } from '../funcs/get-pending-comics';\nimport { publishComic } from './publish-comic';\n\n// To be called via a cron job from a Cloudfare worker\n// Authorizes via x-yiffer-api-key header that the worker has as a secret\nexport async function loader(args: LoaderFunctionArgs) {\n  const requestApiKeyHeader = args.request.headers.get('x-yiffer-api-key');\n  const urlBase = args.context.DB_API_URL_BASE;\n  const cronKey = args.context.CRON_KEY;\n  const schedulePerDay = parseInt(args.context.DAILY_SCHEDULE_PUBLISH_COUNT as string);\n\n  if (cronKey !== requestApiKeyHeader) {\n    logApiErrorMessage('Invalid x-yiffer-api-key header in /publish-comics-cron', {\n      requestApiKeyHeader,\n    });\n    return create400Json(\n      `Invalid x-yiffer-api-key header in /publish-comics-cron: ${requestApiKeyHeader}`\n    );\n  }\n\n  const { err, pendingComics } = await getPendingComics(urlBase, true, schedulePerDay);\n  if (err) {\n    return processApiError('Error in /publish-comics-cron', err);\n  }\n\n  for (const comic of pendingComics!) {\n    const err = await publishComic(urlBase, comic.comicId);\n    if (err) {\n      return processApiError(`Error in /publish-comics-cron, failed publishing`, err);\n    }\n  }\n\n  return new Response(\n    `Cron published comics finished. Comics published: ${pendingComics?.length}.`,\n    { status: 200 }\n  );\n}\n", "import { DbPendingComic } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj } from '~/utils/request-helpers';\n\nexport async function getPendingComics(\n  urlBase: string,\n  scheduledOnly?: boolean,\n  topAmount?: number\n): Promise<{\n  pendingComics?: DbPendingComic[];\n  err?: ApiError;\n}> {\n  let pendingComicsQuery = `\n    SELECT Q2.*, user.username AS scheduleModName FROM (\n      SELECT Q1.*, user.username AS reviewerModName \n        FROM (\n          SELECT\n              comic.name AS comicName,\n              comic.id AS comicId,\n              comic.publishStatus,\n              artist.name AS artistName,\n              COUNT(*) AS numberOfTags,\n              timestamp,\n              errorText,\n              pendingProblemModId,\n              uploadUserId,\n              uploadUserIP,\n              publishDate,\n              publishingQueuePos,\n              user.username AS uploadUsername,\n              modId AS reviewerModId,\n              scheduleModId\n            FROM comic\n            INNER JOIN comicmetadata ON (comic.id = comicmetadata.comicId)\n            INNER JOIN artist ON (artist.id = comic.artist)\n            LEFT JOIN comickeyword ON (comic.id = comickeyword.comicId)\n            LEFT JOIN user ON (user.id = uploadUserId)\n            WHERE ${\n              scheduledOnly ? '' : `publishStatus = 'pending' OR`\n            } publishStatus = 'scheduled'\n            GROUP BY comic.id, timestamp, errorText, uploadUserId, uploadUserIP, publishDate, modId, scheduleModId\n        ) AS Q1\n      LEFT JOIN user ON (Q1.reviewerModId = user.id)\n      WHERE publishStatus = 'pending' OR publishStatus = 'scheduled' OR publishStatus = 'published'\n    ) AS Q2\n    LEFT JOIN user ON (Q2.scheduleModId = user.id)\n    ORDER BY timestamp ASC\n    ${topAmount ? `LIMIT ${topAmount}` : ''}\n  `;\n\n  const dbRes = await queryDb<DbPendingComic[]>(urlBase, pendingComicsQuery);\n\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting pending comics', {\n      scheduledOnly,\n      topAmount,\n    });\n  }\n  return { pendingComics: dbRes.result };\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const err = await publishComic(urlBase, parseInt(formComicId.toString()));\n  if (err) {\n    return processApiError('Error in /publish-comic', err, {\n      comicId: formComicId,\n    });\n  }\n  return createSuccessJson();\n}\n\nexport async function publishComic(\n  urlBase: string,\n  comicId: number\n): Promise<ApiError | undefined> {\n  const query = `\n    UPDATE comic\n    SET publishStatus = \"published\",\n      published = NOW(),\n      updated = NOW()\n    WHERE id = ?\n  `;\n  const dbRes = await queryDb(urlBase, query, [comicId]);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error publishing comic', { comicId });\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { ArtistDataChanges } from '~/routes/admin/artists/$artist';\nimport { Artist } from '~/types/types';\nimport { DBResponse, queryDb } from '~/utils/database-facade';\nimport { isUsernameUrl } from '~/utils/general';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { getArtistById } from '../funcs/get-artist';\n\nexport async function action(args: ActionFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  await redirectIfNotMod(args);\n  const formData = await args.request.formData();\n  const body = JSON.parse(formData.get('body') as string) as ArtistDataChanges;\n\n  if (body.e621Name && isUsernameUrl(body.e621Name)) {\n    return create400Json('e621Name cannot be a URL');\n  }\n  if (body.patreonName && isUsernameUrl(body.patreonName)) {\n    return create400Json('patreonName cannot be a URL');\n  }\n\n  const err = await updateArtistData(urlBase, body);\n  if (err) {\n    return processApiError('Errir in /update-artist-data', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function updateArtistData(\n  urlBase: string,\n  changes: ArtistDataChanges\n): Promise<ApiError | undefined> {\n  let promises: Promise<ApiError | undefined>[] = [];\n\n  if (\n    changes.name ||\n    changes.e621Name !== undefined ||\n    changes.patreonName !== undefined\n  ) {\n    promises.push(updateGeneralDetails(urlBase, changes));\n  }\n  if (changes.links) {\n    const { artist, err: artistErr } = await getArtistById(urlBase, changes.artistId);\n    if (artistErr) {\n      return wrapApiError(artistErr, 'Error updating artist', changes);\n    }\n    promises.push(\n      updateLinks(urlBase, changes.artistId, changes.links, artist as Artist)\n    );\n  }\n\n  const maybeErrors = await Promise.all(promises);\n  for (const err of maybeErrors) {\n    if (err) {\n      return wrapApiError(err, 'Error updating artist', changes);\n    }\n  }\n}\n\nasync function updateLinks(\n  urlBase: string,\n  artistId: number,\n  links: string[],\n  existingArtist: Artist\n): Promise<ApiError | undefined> {\n  const newLinks = links.filter(l => !existingArtist.links.includes(l));\n  const deletedLinks = existingArtist.links.filter(l => !links.includes(l));\n  const dbPromises: Promise<DBResponse<any>>[] = [];\n\n  if (newLinks.length > 0) {\n    const addLinksQuery = `INSERT INTO artistlink (artistId, linkUrl) VALUES ${newLinks\n      .map(() => '(?, ?)')\n      .join(', ')}`;\n    dbPromises.push(\n      queryDb(\n        urlBase,\n        addLinksQuery,\n        newLinks.flatMap(l => [artistId, l])\n      )\n    );\n  }\n  if (deletedLinks.length > 0) {\n    const deleteLinksQuery = `DELETE FROM artistlink WHERE artistId = ? AND linkUrl IN (${deletedLinks\n      .map(() => '?')\n      .join(', ')})`;\n    dbPromises.push(queryDb<any>(urlBase, deleteLinksQuery, [artistId, ...deletedLinks]));\n  }\n\n  const dbResponses = await Promise.all(dbPromises);\n  for (let dbRes of dbResponses) {\n    if (dbRes.isError) {\n      return makeDbErr(dbRes, 'Error updating artist links', {\n        artistId,\n        links,\n        existingArtist,\n      });\n    }\n  }\n}\n\nasync function updateGeneralDetails(\n  urlBase: string,\n  changes: ArtistDataChanges\n): Promise<ApiError | undefined> {\n  let updateFieldStr = '';\n  let updateFieldValues: any[] = [];\n  if (changes.name) {\n    updateFieldStr += 'name = ?, ';\n    updateFieldValues.push(changes.name.trim());\n  }\n  if (changes.e621Name !== undefined) {\n    updateFieldStr += 'e621Name = ?, ';\n    updateFieldValues.push(changes.e621Name.trim());\n  }\n  if (changes.patreonName !== undefined) {\n    updateFieldStr += 'patreonName = ?, ';\n    updateFieldValues.push(changes.patreonName.trim());\n  }\n\n  updateFieldStr = updateFieldStr.slice(0, -2);\n  updateFieldValues.push(changes.artistId);\n\n  const updateQuery = `UPDATE artist SET ${updateFieldStr} WHERE id = ?`;\n  const dbRes = await queryDb(urlBase, updateQuery, updateFieldValues);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error updating artist details', { changes });\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  create400Json,\n  createSuccessJson,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { moveComicInQueue } from '../funcs/publishing-queue';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const formMoveDirection = formDataBody.get('direction');\n  if (formMoveDirection !== 'up' && formMoveDirection !== 'down') {\n    return create400Json('Missing direction, needs to be up or down');\n  }\n\n  const err = await moveComicInQueue(\n    urlBase,\n    parseInt(formComicId.toString()),\n    formMoveDirection === 'up' ? -1 : 1\n  );\n  if (err) {\n    return processApiError('Error in /move-queued-comic', err, {\n      comicId: formComicId,\n      direction: formMoveDirection,\n    });\n  }\n\n  return createSuccessJson();\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { getComicsByArtistId } from '../funcs/get-comics';\nimport { processUserUpload } from './process-user-upload';\nimport { rejectComic } from './reject-pending-comic';\nimport { unlistComic } from './unlist-comic';\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formArtistId = formDataBody.get('artistId');\n  if (!formArtistId) return create400Json('Missing artistId');\n\n  let formIsBanned = formDataBody.get('isBanned');\n  if (!formIsBanned) return create400Json('Missing isBanned');\n  formIsBanned = formIsBanned.toString();\n  if (formIsBanned !== 'true' && formIsBanned !== 'false') {\n    return create400Json('isBanned must be true or false');\n  }\n\n  const err = await toggleArtistBan(\n    urlBase,\n    parseInt(formArtistId.toString()),\n    formIsBanned === 'true',\n    user.userId\n  );\n  if (err) {\n    return processApiError('Error in /toggle-artist-ban', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function toggleArtistBan(\n  urlBase: string,\n  artistId: number,\n  isBanned: boolean,\n  modId: number\n): Promise<ApiError | undefined> {\n  const logCtx = { artistId, isBanned, modId };\n  const query = `UPDATE artist SET isBanned = ? WHERE id = ?`;\n  const params = [isBanned, artistId];\n  const dbRes = await queryDb(urlBase, query, params);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error banning/unbanning artist', logCtx);\n  }\n\n  if (!isBanned) return;\n\n  const { comics, err } = await getComicsByArtistId(urlBase, artistId);\n  if (err) {\n    return wrapApiError(err, 'Error banning/unbanning artist', logCtx);\n  }\n  if (!comics || comics.length === 0) return;\n\n  const liveComics = comics.filter(c => c.publishStatus === 'published');\n  const pendingComics = comics.filter(c => c.publishStatus === 'pending');\n  const uploadedComics = comics.filter(c => c.publishStatus === 'uploaded');\n\n  const processComicPromises: Promise<ApiError | undefined>[] = [\n    ...liveComics.map(c => unlistComic(urlBase, c.id, 'Artist banned')),\n    ...pendingComics.map(c => rejectComic(urlBase, c.id)),\n    ...uploadedComics.map(c =>\n      processUserUpload(\n        modId,\n        urlBase,\n        c.id,\n        c.name,\n        'rejected',\n        'Artist rejected/banned'\n      )\n    ),\n  ];\n\n  const processErrors = await Promise.all(processComicPromises);\n\n  for (let err of processErrors) {\n    if (err) {\n      return wrapApiError(err, 'Error banning/unbanning artist', logCtx);\n    }\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { DBResponse, queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const formUnlistComment = formDataBody.get('unlistComment');\n  if (!formUnlistComment) return create400Json('Missing comment');\n\n  const err = await unlistComic(\n    urlBase,\n    parseInt(formComicId.toString()),\n    formUnlistComment.toString()\n  );\n\n  if (err) {\n    return processApiError('Error in /unlist-comic', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function unlistComic(\n  urlBase: string,\n  comicId: number,\n  unlistComment: string\n): Promise<ApiError | undefined> {\n  const logCtx = { comicId, unlistComment };\n  const getDetailsQuery = 'SELECT comicId FROM comicmetadata WHERE comicId = ?';\n  const comicUpdateQuery = `UPDATE comic SET publishStatus = 'unlisted' WHERE id = ?`;\n\n  const [detailsDbRes, updateDbRes] = await Promise.all([\n    queryDb<any[]>(urlBase, getDetailsQuery, [comicId]),\n    queryDb(urlBase, comicUpdateQuery, [comicId]),\n  ]);\n\n  if (detailsDbRes.isError) {\n    return makeDbErr(detailsDbRes, 'Could not get metadata', logCtx);\n  }\n  if (updateDbRes.isError) {\n    return makeDbErr(updateDbRes, 'Could not update publishStatus', logCtx);\n  }\n\n  let metadataDbRes: DBResponse<any>;\n  if (detailsDbRes.result?.length === 0) {\n    const insertQuery =\n      'INSERT INTO comicmetadata (comicId, unlistComment) VALUES (?, ?)';\n    metadataDbRes = await queryDb(urlBase, insertQuery, [comicId, unlistComment]);\n  } else {\n    const updateQuery = 'UPDATE comicmetadata SET unlistComment = ? WHERE comicId = ?';\n    metadataDbRes = await queryDb(urlBase, updateQuery, [unlistComment, comicId]);\n  }\n\n  if (metadataDbRes.isError) {\n    return makeDbErr(metadataDbRes, 'Could not insert/update comicmetadata', logCtx);\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { ComicDataChanges } from '~/routes/admin/comics/LiveComic';\nimport { Comic } from '~/types/types';\nimport { DBResponse, queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n  wrapApiError,\n} from '~/utils/request-helpers';\nimport { getComicById } from '../funcs/get-comic';\n\nexport async function action(args: ActionFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  await redirectIfNotMod(args);\n  const formData = await args.request.formData();\n  const body = JSON.parse(formData.get('body') as string) as ComicDataChanges;\n\n  const err = await updateComicData(urlBase, body);\n  if (err) {\n    return processApiError(`Error in /update-comic-data`, err, body);\n  }\n  return createSuccessJson();\n}\n\nexport async function updateComicData(\n  urlBase: string,\n  changes: ComicDataChanges\n): Promise<ApiError | undefined> {\n  let { comic: existingComic, err } = await getComicById(urlBase, changes.comicId);\n  if (err) {\n    return wrapApiError(err, `Could not update comic data`, changes);\n  }\n  existingComic = existingComic as Comic;\n\n  if (changes.name) {\n    err = await updateComicName(\n      urlBase,\n      changes.comicId,\n      existingComic.name,\n      changes.name\n    );\n    if (err) {\n      return wrapApiError(err, 'Could not update comic name', changes);\n    }\n  }\n  if (changes.nextComicId) {\n    err = await updateComicLink(\n      urlBase,\n      changes.comicId,\n      existingComic.nextComic?.id,\n      changes.nextComicId,\n      'next'\n    );\n    if (err) {\n      return wrapApiError(err, 'Error updating comic links (next)', changes);\n    }\n  }\n  if (changes.previousComicId) {\n    err = await updateComicLink(\n      urlBase,\n      changes.comicId,\n      existingComic.previousComic?.id,\n      changes.previousComicId,\n      'prev'\n    );\n    if (err) {\n      return wrapApiError(err, 'Error updating comic links (prev)', changes);\n    }\n  }\n  if (changes.tagIds) {\n    err = await updateTags(\n      urlBase,\n      changes.comicId,\n      existingComic.tags.map(t => t.id),\n      changes.tagIds\n    );\n    if (err) {\n      return wrapApiError(err, 'Error updating comic tags', changes);\n    }\n  }\n  if (changes.category || changes.classification || changes.artistId || changes.state) {\n    err = await updateGeneralDetails(urlBase, changes);\n    if (err) {\n      return wrapApiError(err, 'Error updating general comic details', changes);\n    }\n  }\n}\n\nasync function updateTags(\n  urlBase: string,\n  comicId: number,\n  oldTagIds: number[],\n  tagIds: number[]\n): Promise<ApiError | undefined> {\n  const logCtx = { comicId, oldTagIds, tagIds };\n  const newTagIds = tagIds.filter(id => !oldTagIds.includes(id));\n  const deletedTagIds = oldTagIds.filter(id => !tagIds.includes(id));\n\n  const dbPromises: Promise<DBResponse<any>>[] = [];\n\n  if (newTagIds.length > 0) {\n    const newTagsQuery = `INSERT INTO comickeyword (comicId, keywordId) VALUES ${newTagIds\n      .map(_ => `(?, ?)`)\n      .join(', ')}`;\n    dbPromises.push(\n      queryDb(\n        urlBase,\n        newTagsQuery,\n        newTagIds.flatMap(id => [comicId, id])\n      )\n    );\n  }\n  if (deletedTagIds.length > 0) {\n    const deletedTagsQuery = `DELETE FROM comickeyword WHERE comicId = ? AND keywordId IN (${deletedTagIds\n      .map(() => '?')\n      .join(', ')})`;\n    dbPromises.push(queryDb(urlBase, deletedTagsQuery, [comicId, ...deletedTagIds]));\n  }\n\n  const dbResponses = await Promise.all(dbPromises);\n\n  for (let dbRes of dbResponses) {\n    if (dbRes.isError) {\n      return makeDbErr(dbRes, 'Error updating tags', logCtx);\n    }\n  }\n}\n\nasync function updateGeneralDetails(\n  urlBase: string,\n  changes: ComicDataChanges\n): Promise<ApiError | undefined> {\n  let updateFieldStr = '';\n  let updateFieldValues: any[] = [];\n  if (changes.category) {\n    updateFieldStr += 'tag = ?, ';\n    updateFieldValues.push(changes.category);\n  }\n  if (changes.classification) {\n    updateFieldStr += 'cat = ?, ';\n    updateFieldValues.push(changes.classification);\n  }\n  if (changes.artistId) {\n    updateFieldStr += 'artist = ?, ';\n    updateFieldValues.push(changes.artistId);\n  }\n  if (changes.state) {\n    updateFieldStr += 'state = ?, ';\n    updateFieldValues.push(changes.state);\n  }\n\n  updateFieldStr = updateFieldStr.slice(0, -2);\n  updateFieldValues.push(changes.comicId);\n\n  const updateQuery = `UPDATE comic SET ${updateFieldStr} WHERE id = ?`;\n  const dbRes = await queryDb(urlBase, updateQuery, updateFieldValues);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error updating comic details', changes);\n  }\n}\n\nasync function updateComicName(\n  urlBase: string,\n  comicId: number,\n  oldName: string,\n  newName: string\n): Promise<ApiError | undefined> {\n  return {\n    logMessage: 'Not implemented!',\n  };\n}\n\nasync function updateComicLink(\n  urlBase: string,\n  comicId: number,\n  oldLinkedId: number | undefined,\n  newLinkedComicId: number | undefined,\n  type: 'next' | 'prev'\n): Promise<ApiError | undefined> {\n  if (oldLinkedId === newLinkedComicId) return;\n  const logCtx = { comicId, oldLinkedId, newLinkedComicId, type };\n\n  if (oldLinkedId) {\n    const deleteQuery = `DELETE FROM comiclink WHERE ${\n      type === 'next' ? 'first' : 'last'\n    }Comic = ?`;\n    const delDbRes = await queryDb(urlBase, deleteQuery, [comicId]);\n    if (delDbRes.isError) {\n      return makeDbErr(delDbRes, 'Error deleting comic link', logCtx);\n    }\n  }\n  if (newLinkedComicId) {\n    const insertQuery = `INSERT INTO comiclink (firstComic, lastComic) VALUES (?, ?)`;\n    const newDbRes = await queryDb(urlBase, insertQuery, [\n      type === 'next' ? comicId : newLinkedComicId,\n      type === 'next' ? newLinkedComicId : comicId,\n    ]);\n    if (newDbRes.isError) {\n      return makeDbErr(newDbRes, 'Error inserting new comic link', logCtx);\n    }\n  }\n}\n", "import { Comic, ComicPublishStatus, ComicUploadVerdict } from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport { ApiError, makeDbErrObj, wrapApiError } from '~/utils/request-helpers';\n\ntype DbComic = {\n  id: number;\n  name: string;\n  state: 'wip' | 'cancelled' | 'finished';\n  publishStatus: ComicPublishStatus;\n  classification: 'Furry' | 'Pokemon' | 'MLP' | 'Other';\n  category: 'M' | 'F' | 'MF' | 'MM' | 'FF' | 'MF+' | 'I';\n  numberOfPages: number;\n  published?: string;\n  updated?: string;\n  artistId: number;\n  artistName: string;\n  artistIsPending: 0 | 1;\n  timestamp: string;\n  errorText?: string;\n  publishDate?: string;\n  modId?: number;\n  modComment?: string;\n  verdict?: ComicUploadVerdict;\n  uploadUserId?: number;\n  uploadUserIP?: string;\n  uploadUsername?: string;\n  originalNameIfRejected?: string;\n  originalArtistIfRejected?: string;\n  unlistComment?: string;\n  pendingProblemModId?: number;\n};\n\ntype DbComicLink = {\n  firstComicId: number;\n  lastComicId: number;\n  firstComicName: string;\n  lastComicName: string;\n};\n\ntype DbTag = {\n  tagId: number;\n  tagName: string;\n};\n\nexport async function getComicById(\n  urlBase: string,\n  comicId: number,\n  excludeMetadata: boolean = false\n): Promise<{ comic?: Comic; err?: ApiError }> {\n  const logCtx = { comicId, excludeMetadata };\n  const [comicRes, linksRes, tagsRes] = await Promise.all([\n    getDbComicByField(urlBase, 'id', comicId),\n    getLinksByComicId(urlBase, comicId),\n    getTagsByComicId(urlBase, comicId),\n  ]);\n\n  if (comicRes.err) {\n    return {\n      err: wrapApiError(comicRes.err, 'Error getting comic by id', logCtx),\n    };\n  }\n  if (linksRes.err) {\n    return {\n      err: wrapApiError(linksRes.err, 'Error getting comic by id', logCtx),\n    };\n  }\n  if (tagsRes.err) {\n    return {\n      err: wrapApiError(tagsRes.err, 'Error getting comic by id', logCtx),\n    };\n  }\n\n  const finalComic = mergeDbFieldsToComic(\n    comicRes.comic!,\n    linksRes.links!,\n    tagsRes.tags!,\n    excludeMetadata\n  );\n\n  return { comic: finalComic };\n}\n\nfunction mergeDbFieldsToComic(\n  dbComic: DbComic,\n  dbLinksRows: DbComicLink[],\n  dbTagsRows: DbTag[],\n  excludeMetadata: boolean\n): Comic {\n  const comic: Comic = {\n    id: dbComic.id,\n    name: dbComic.name,\n    state: dbComic.state,\n    publishStatus: dbComic.publishStatus,\n    classification: dbComic.classification,\n    category: dbComic.category,\n    numberOfPages: dbComic.numberOfPages,\n    published: dbComic.published,\n    updated: dbComic.updated,\n    artist: {\n      id: dbComic.artistId,\n      name: dbComic.artistName,\n      isPending: dbComic.artistIsPending === 1,\n    },\n    tags: dbTagsRows.map(tag => ({\n      id: tag.tagId,\n      name: tag.tagName,\n    })),\n  };\n\n  if (dbLinksRows.length > 0) {\n    for (const link of dbLinksRows) {\n      if (link.firstComicId === dbComic.id) {\n        comic.nextComic = {\n          id: link.lastComicId,\n          name: link.lastComicName,\n        };\n      } else if (link.lastComicId === dbComic.id) {\n        comic.previousComic = {\n          id: link.firstComicId,\n          name: link.firstComicName,\n        };\n      }\n    }\n  }\n\n  if (!excludeMetadata) {\n    comic.metadata = {\n      timestamp: dbComic.timestamp,\n      errorText: dbComic.errorText,\n      publishDate: dbComic.publishDate,\n      modId: dbComic.modId,\n      modComment: dbComic.modComment,\n      verdict: dbComic.verdict,\n      uploadUserId: dbComic.uploadUserId,\n      uploadUserIP: dbComic.uploadUserIP,\n      uploadUsername: dbComic.uploadUsername,\n      originalNameIfRejected: dbComic.originalNameIfRejected,\n      originalArtistIfRejected: dbComic.originalArtistIfRejected,\n      unlistComment: dbComic.unlistComment,\n      pendingProblemModId: dbComic.pendingProblemModId,\n    };\n  }\n\n  return comic;\n}\n\nasync function getDbComicByField(\n  urlBase: string,\n  fieldName: 'id' | 'name',\n  fieldValue: string | number\n): Promise<{ comic?: DbComic; err?: ApiError }> {\n  const comicQuery = `SELECT\n      comic.id,\n      comic.name,\n      state,\n      publishStatus,\n      cat AS classification,\n      tag AS category,\n      numberOfPages,\n      published,\n      updated,\n      artist.id AS artistId,\n      artist.name AS artistName,\n      artist.isPending AS artistIsPending,\n      comicmetadata.timestamp,\n      comicmetadata.errorText,\n      comicmetadata.publishDate,\n      comicmetadata.modId,\n      comicmetadata.modComment,\n      comicmetadata.verdict,\n      comicmetadata.uploadUserId,\n      comicmetadata.uploadUserIP,\n      user.username AS uploadUsername,\n      comicmetadata.originalNameIfRejected,\n      comicmetadata.originalArtistIfRejected,\n      comicmetadata.unlistComment,\n      comicmetadata.pendingProblemModId\n    FROM comic\n    INNER JOIN artist ON (artist.id = comic.artist)\n    LEFT JOIN comicmetadata ON (comicmetadata.comicId = comic.id)\n    LEFT JOIN user ON (user.id = comicmetadata.uploadUserId)\n    WHERE comic.${fieldName} = ?`;\n\n  const comicDbRes = await queryDb<DbComic[]>(urlBase, comicQuery, [fieldValue]);\n  if (comicDbRes.isError || !comicDbRes.result) {\n    return makeDbErrObj(comicDbRes, 'Error getting comic', { fieldName, fieldValue });\n  }\n  return { comic: comicDbRes.result[0] };\n}\n\nasync function getLinksByComicId(\n  urlBase: string,\n  comicId: number\n): Promise<{ links?: DbComicLink[]; err?: ApiError }> {\n  const linksQuery = `SELECT\n    Q1.*, comic.name AS lastComicName\n    FROM (\n      SELECT \n        firstComic AS firstComicId,\n        lastComic AS lastComicId,\n        comic.name AS firstComicName\n      FROM comiclink\n      INNER JOIN comic ON (firstComic = comic.id) \n    ) AS Q1\n    INNER JOIN comic ON (lastComicId = comic.id)\n    WHERE firstComicId = ? OR lastComicId = ?`;\n\n  const params = [comicId, comicId];\n  const linksDbRes = await queryDb<DbComicLink[]>(urlBase, linksQuery, params);\n  if (linksDbRes.isError || !linksDbRes.result) {\n    return makeDbErrObj(linksDbRes, 'Error getting comic links', { comicId });\n  }\n  return { links: linksDbRes.result };\n}\n\nasync function getTagsByComicId(\n  urlBase: string,\n  comicId: number\n): Promise<{ tags?: DbTag[]; err?: ApiError }> {\n  const tagsQuery = `SELECT\n      keyword.id AS tagId,\n      keyword.keywordName AS tagName\n      FROM comickeyword\n      INNER JOIN keyword ON (keyword.id = comickeyword.keywordId)\n    WHERE comicId = ?`;\n\n  const tagsDbRes = await queryDb<DbTag[]>(urlBase, tagsQuery, [comicId]);\n  if (tagsDbRes.isError || !tagsDbRes.result) {\n    return makeDbErrObj(tagsDbRes, 'Error getting tags', { comicId });\n  }\n  return { tags: tagsDbRes.result };\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { recalculatePublishingQueue } from '../funcs/publishing-queue';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const err = await unScheduleComic(urlBase, parseInt(formComicId.toString()));\n  if (err) {\n    return processApiError('Error in /unschedule-comic', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function unScheduleComic(\n  urlBase: string,\n  comicId: number\n): Promise<ApiError | undefined> {\n  const metadataQuery =\n    'UPDATE comicmetadata SET publishDate = NULL, scheduleModId = NULL, publishingQueuePos = NULL WHERE comicId = ?';\n  const comicQuery = `UPDATE comic SET publishStatus = 'pending' WHERE id = ?`;\n\n  const [metadataDbRes, comicDbRes] = await Promise.all([\n    queryDb(urlBase, metadataQuery, [comicId]),\n    queryDb(urlBase, comicQuery, [comicId]),\n  ]);\n\n  if (metadataDbRes.isError) {\n    return makeDbErr(metadataDbRes, 'Could not update comicmetadata', { comicId });\n  }\n  if (comicDbRes.isError) {\n    return makeDbErr(comicDbRes, 'Could not update comic table', { comicId });\n  }\n\n  recalculatePublishingQueue(urlBase); // Can run in background\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return new Response('Missing comicId', { status: 400 });\n\n  const formErrorText = formDataBody.get('errorText');\n  let errorText = formErrorText ? formErrorText.toString() : null;\n  if (errorText === '') errorText = null;\n\n  const err = await setComicError(urlBase, parseInt(formComicId.toString()), errorText);\n  if (err) {\n    return processApiError('Error in /set-comic-error', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function setComicError(\n  urlBase: string,\n  comicId: number,\n  errorText: string | null\n): Promise<ApiError | undefined> {\n  const updateActionQuery = `UPDATE comicmetadata SET errorText = ? WHERE comicId = ?`;\n  const updateActionQueryParams = [errorText, comicId];\n\n  let dbRes = await queryDb(urlBase, updateActionQuery, updateActionQueryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error updating comicmetadata', { comicId, errorText });\n  }\n\n  if (!errorText) {\n    const removeModQuery =\n      'UPDATE comicmetadata SET pendingProblemModId = NULL WHERE comicId = ?';\n    const removeModQueryParams = [comicId];\n\n    dbRes = await queryDb(urlBase, removeModQuery, removeModQueryParams);\n    if (dbRes.isError) {\n      return makeDbErr(dbRes, 'Error removing mod id', { comicId, errorText });\n    }\n  }\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { parseFormJson } from '~/utils/formdata-parser';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { DashboardActionType } from './dashboard-data';\n\nexport type UnAssignActionBody = {\n  actionId: number;\n  actionType: DashboardActionType;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const { fields, isUnauthorized } = await parseFormJson<UnAssignActionBody>(args, 'mod');\n  if (isUnauthorized) return new Response('Unauthorized', { status: 401 });\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await unAssignActionToMod(urlBase, fields.actionId, fields.actionType);\n  if (err) {\n    return processApiError('Error in /unassign-action', err);\n  }\n  return createSuccessJson();\n}\n\nasync function unAssignActionToMod(\n  urlBase: string,\n  actionId: number,\n  actionType: DashboardActionType\n): Promise<ApiError | undefined> {\n  let table = '';\n  let identifyingColumn = 'id';\n  let modIdColumn = 'modId';\n\n  if (actionType === 'comicUpload') {\n    table = 'comicmetadata';\n    identifyingColumn = 'comicId';\n  }\n  if (actionType === 'comicSuggestion') {\n    table = 'comicsuggestion';\n  }\n  if (actionType === 'comicProblem') {\n    table = 'comicproblem';\n  }\n  if (actionType === 'pendingComicProblem') {\n    table = 'comicmetadata';\n    identifyingColumn = 'comicId';\n    modIdColumn = 'pendingProblemModId';\n  }\n\n  const query = `UPDATE ${table} SET ${modIdColumn} = NULL WHERE ${identifyingColumn} = ?`;\n  const queryParams = [actionId];\n\n  const dbRes = await queryDb(urlBase, query, queryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error unassigning mod action', {\n      actionId,\n      actionType,\n    });\n  }\n}\n", "import { ActionFunction } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErrObj,\n  processApiError,\n} from '~/utils/request-helpers';\nimport stringDistance from '~/utils/string-distance';\n\nexport type SimilarArtistResponse = {\n  similarArtists: string[];\n  exactMatchArtist: string;\n  similarBannedArtists: string[];\n  exactMatchBannedArtist: string;\n};\n\nexport const action: ActionFunction = async function ({ request, context }) {\n  const urlBase = context.DB_API_URL_BASE;\n  const body = await request.formData();\n  const artistName = body.get('artistName') as string;\n  const excludeName = body.get('excludeName');\n\n  const { artists, err } = await getSimilarArtists(\n    urlBase,\n    artistName,\n    excludeName ? excludeName.toString() : undefined\n  );\n  if (err) {\n    return processApiError('Error in /search-similar-artist', err);\n  }\n  return createSuccessJson(artists);\n};\n\nexport async function getSimilarArtists(\n  urlBase: string,\n  newArtistName: string,\n  excludeName?: string\n): Promise<{ err?: ApiError; artists?: SimilarArtistResponse }> {\n  const logCtx = { newArtistName, excludeName };\n  let similar: SimilarArtistResponse = {\n    similarArtists: [],\n    exactMatchArtist: '',\n    similarBannedArtists: [],\n    exactMatchBannedArtist: '',\n  };\n  if (newArtistName.length < 2) {\n    return { artists: similar };\n  }\n\n  let distanceThreshold = 4;\n  if (newArtistName.length < 14) {\n    distanceThreshold = 3;\n  }\n  if (newArtistName.length < 5) {\n    distanceThreshold = 2;\n  }\n\n  let allArtistsQuery = 'SELECT name, isBanned FROM artist';\n  const allArtistsRes = await queryDb<{ name: string; isBanned: boolean }[]>(\n    urlBase,\n    allArtistsQuery\n  );\n  if (allArtistsRes.isError) {\n    return makeDbErrObj(allArtistsRes, 'Error getting all artists from db', logCtx);\n  }\n\n  for (let artist of allArtistsRes.result!) {\n    if (artist.name === excludeName) continue;\n\n    let distance = stringDistance(artist.name, newArtistName);\n    if (distance === 0) {\n      if (artist.isBanned) {\n        similar.exactMatchBannedArtist = artist.name;\n      } else {\n        similar.exactMatchArtist = artist.name;\n      }\n    } else if (distance <= distanceThreshold) {\n      if (artist.isBanned) {\n        similar.similarBannedArtists.push(artist.name);\n      } else {\n        similar.similarArtists.push(artist.name);\n      }\n    }\n  }\n\n  return { artists: similar };\n}\n", "import type { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { Form, useActionData, useLoaderData, useNavigation } from '@remix-run/react';\nimport { useState } from 'react';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport InfoBox from '~/components/InfoBox';\nimport RadioButtonGroup from '~/components/RadioButton/RadioButtonGroup';\nimport Textarea from '~/components/Textarea/Textarea';\nimport TopGradientBox from '~/components/TopGradientBox';\nimport { getUserSession } from '~/utils/auth.server';\nimport { queryDb } from '~/utils/database-facade';\nimport { authLoader } from '~/utils/loaders';\nimport { create500Json, createSuccessJson, logApiError } from '~/utils/request-helpers';\nimport BackToContribute from '../BackToContribute';\n\nexport { authLoader as loader };\n\ntype FeedbackType = 'bug' | 'general' | 'support';\n\nexport default function Feedback() {\n  const userSession = useLoaderData<typeof authLoader>();\n  const transition = useNavigation();\n  const actionData = useActionData();\n  const [feedback, setFeedback] = useState('');\n  const [feedbackType, setFeedbackType] = useState<FeedbackType | undefined>();\n\n  let radioOptions: { text: string; value: FeedbackType }[] = [\n    { text: 'General feedback', value: 'general' },\n    { text: 'Bug report', value: 'bug' },\n  ];\n  if (userSession) {\n    radioOptions.push({ text: 'Support', value: 'support' });\n  }\n\n  return (\n    <section className=\"container mx-auto justify-items-center\">\n      <h1 className=\"mb-2\">Feedback &amp; Support</h1>\n      <p className=\"mb-4\">\n        <BackToContribute />\n      </p>\n\n      <TopGradientBox containerClassName=\"my-10 mx-auto shadow-lg max-w-2xl\">\n        <Form method=\"post\" className=\"mx-8 py-6\">\n          <h3>Submit feedback</h3>\n\n          {actionData?.success ? (\n            <InfoBox\n              variant=\"success\"\n              text={\n                feedbackType === 'support'\n                  ? 'Your support request has been submitted. We will look at it as soon as possible. If we deem it necessary, we will contact you via the email associated with your account.'\n                  : 'Your feedback has been submitted. Thank you!'\n              }\n              className=\"mt-4\"\n              disableElevation\n            />\n          ) : (\n            <>\n              <RadioButtonGroup\n                name=\"feedbackType\"\n                title=\"Type of feedback\"\n                className=\"mb-4 mt-2\"\n                value={feedbackType}\n                onChange={setFeedbackType}\n                options={radioOptions}\n              />\n\n              {feedbackType === 'support' && (\n                <InfoBox\n                  variant=\"info\"\n                  showIcon\n                  text=\"Please do not use the support feature to ask questions. We will only respond to support requests if you have an issue that requires our attention. If we deem it necessary, we will contact you via the email associated with your account.\"\n                  className=\"mb-4\"\n                  disableElevation\n                />\n              )}\n              {feedbackType === 'bug' && (\n                <InfoBox\n                  variant=\"info\"\n                  showIcon\n                  text=\"Please report any crashes or obvious errors here. Do not use this to request new features - use the general feedback option above for that.\"\n                  className=\"mb-4\"\n                  disableElevation\n                />\n              )}\n              {feedbackType === 'general' && (\n                <InfoBox\n                  variant=\"info\"\n                  showIcon\n                  text=\"Please note that we will not answer any questions.\"\n                  className=\"mb-4\"\n                  disableElevation\n                />\n              )}\n\n              <Textarea\n                label=\"Your feedback\"\n                name=\"feedbackText\"\n                value={feedback}\n                onChange={setFeedback}\n                className=\"mb-2\"\n              />\n\n              {actionData?.error && (\n                <InfoBox\n                  variant=\"error\"\n                  text=\"An error occurred when saving your feedback. Please try again!\"\n                  className=\"my-4\"\n                />\n              )}\n\n              <LoadingButton\n                isLoading={transition.state === 'submitting'}\n                text=\"Submit feedback\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={feedback.length < 3}\n                className=\"mx-auto mt-2\"\n                isSubmit\n              />\n            </>\n          )}\n        </Form>\n      </TopGradientBox>\n    </section>\n  );\n}\n\nexport async function action(args: ActionFunctionArgs) {\n  const reqBody = await args.request.formData();\n  const urlBase = args.context.DB_API_URL_BASE;\n  const { feedbackText, feedbackType } = Object.fromEntries(reqBody);\n  const user = await getUserSession(args.request, args.context.JWT_CONFIG_STR);\n\n  let insertQuery = 'INSERT INTO feedback (text, type, userId) VALUES (?, ?, ?)';\n  const insertParams = [feedbackText, feedbackType, user?.userId ?? null];\n\n  const dbRes = await queryDb(urlBase, insertQuery, insertParams);\n  if (dbRes.isError) {\n    logApiError(undefined, {\n      logMessage: 'Error saving user feedback',\n      error: dbRes,\n      context: { feedbackText, feedbackType, user: user?.userId },\n    });\n    return create500Json();\n  }\n  return createSuccessJson();\n}\n", "import InfoBox from '~/components/InfoBox';\nimport Link from '~/components/Link';\n\ntype SuccessMessageProps = {\n  isLoggedIn: boolean;\n};\n\nexport default function SuccessMessage({ isLoggedIn }: SuccessMessageProps) {\n  return (\n    <InfoBox variant=\"success\" title=\"Upload successful!\" boldText={false}>\n      <p className=\"my-4\">\n        Your comic has been uploaded successfully. It will be reviewed by our moderator team\n        shortly.\n      </p>\n      {isLoggedIn ? (\n        <p>\n          You can view the status of your submission at the{' '}\n          <Link href=\"/contribute/your-contributions\" text=\"your contributions\" /> page.\n        </p>\n      ) : (\n        <p>\n          Since you are not logged in, you cannot track the status of your submission. We recommend\n          logging in or creating a user for next time! This will also allow you to collect reward\n          points for your submissions.\n        </p>\n      )}\n    </InfoBox>\n  );\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\n\ntype UserOrIP = {\n  username?: string;\n  userId?: number;\n  ip?: string;\n};\n\ntype UsernameAndUserId = {\n  username: string;\n  userId: number;\n};\n\nexport type DashboardActionType =\n  | 'tagSuggestion'\n  | 'comicProblem'\n  | 'comicSuggestion'\n  | 'comicUpload'\n  | 'pendingComicProblem';\n\nexport type DashboardAction = {\n  type: DashboardActionType;\n  id: number;\n  comicId?: number;\n  primaryField: string;\n  secondaryField?: string;\n  description?: string;\n  isProcessed: boolean;\n  timestamp: string;\n  assignedMod?: UsernameAndUserId;\n  user: UserOrIP;\n  verdict?: string; // the result of the mod processing (eg. \"approved\", \"rejected - comment 'asdasd'\")\n};\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const dataResponses: { err?: ApiError; data?: DashboardAction[] }[] = await Promise.all(\n    [\n      getTagSuggestions(urlBase),\n      getProblems(urlBase),\n      getComicUploads(urlBase),\n      getComicSuggestions(urlBase),\n      getPendingComicProblems(urlBase),\n    ]\n  );\n\n  const allSuggestions: DashboardAction[] = [];\n  for (const response of dataResponses) {\n    if (response.err) {\n      return processApiError('Error fetching admin dashboard data', response.err);\n    }\n    if (response.data) {\n      allSuggestions.push(...response.data);\n    }\n  }\n\n  allSuggestions.sort((a, b) => {\n    return a.timestamp.localeCompare(b.timestamp, undefined, {}) * -1;\n  });\n\n  return createSuccessJson(allSuggestions);\n}\n\nimport { CONTRIBUTION_POINTS } from '~/types/contributions';\nimport {\n  ComicPublishStatus,\n  ComicSuggestionVerdict,\n  ComicUploadVerdict,\n} from '~/types/types';\nimport { queryDb } from '~/utils/database-facade';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErrObj,\n  processApiError,\n} from '~/utils/request-helpers';\n\ntype DbTagSuggestion = {\n  id: number;\n  keywordId: number;\n  keywordName: string;\n  comicName: string;\n  comicId: number;\n  isAdding: number;\n  status: string;\n  timestamp: string;\n  userId?: number;\n  username?: string;\n  userIP?: string;\n  modId?: number;\n  modName?: string;\n};\n\nasync function getTagSuggestions(urlBase: string): Promise<{\n  data?: DashboardAction[];\n  err?: ApiError;\n}> {\n  const query = `SELECT Q1.*, user.username AS modName \n      FROM (\n        SELECT\n            keywordsuggestion.id AS id,\n            keywordsuggestion.keywordId AS keywordId,\n            keyword.KeywordName AS keywordName,\n            comic.name AS comicName,\n            comic.id AS comicId,\n            isAdding,\n            status,\n            keywordsuggestion.timestamp,\n            userId,\n            username,\n            userIP,\n            modId\n          FROM keywordsuggestion\n          INNER JOIN comic ON (comic.id = keywordsuggestion.comicId)\n          INNER JOIN keyword ON (keyword.Id = keywordsuggestion.keywordId)\n          LEFT JOIN user ON (user.id = keywordsuggestion.userId)\n      ) AS Q1\n    LEFT JOIN user ON (Q1.modId = user.id)\n  `;\n\n  const dbRes = await queryDb<DbTagSuggestion[]>(urlBase, query);\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting tag suggestions');\n  }\n\n  const mappedResults: DashboardAction[] = dbRes.result!.map(dbTagSugg => {\n    return {\n      type: 'tagSuggestion',\n      id: dbTagSugg.id,\n      primaryField: dbTagSugg.comicName,\n      secondaryField: `${dbTagSugg.isAdding === 1 ? 'ADD' : 'REMOVE'} ${\n        dbTagSugg.keywordName\n      }`,\n      isProcessed: dbTagSugg.status !== 'pending',\n      timestamp: dbTagSugg.timestamp,\n      user: dbTagSugg.userId\n        ? { userId: dbTagSugg.userId, username: dbTagSugg.username }\n        : { ip: dbTagSugg.userIP },\n      verdict:\n        dbTagSugg.status === 'approved'\n          ? 'Approved'\n          : dbTagSugg.status === 'rejected'\n          ? 'Rejected'\n          : undefined,\n      assignedMod:\n        dbTagSugg.modId && dbTagSugg.modName\n          ? { userId: dbTagSugg.modId, username: dbTagSugg.modName }\n          : undefined,\n      isAdding: dbTagSugg.isAdding === 1,\n      tagId: dbTagSugg.keywordId,\n      comicId: dbTagSugg.comicId,\n    };\n  });\n\n  return {\n    data: mappedResults,\n  };\n}\n\ntype DbComicProblem = {\n  id: number;\n  categoryName: string;\n  description: string;\n  comicName: string;\n  comicId: number;\n  status: string;\n  timestamp: string;\n  userId?: number;\n  userIP?: string;\n  username?: string;\n  modId?: number;\n  modName?: string;\n};\n\nasync function getProblems(urlBase: string): Promise<{\n  data?: DashboardAction[];\n  err?: ApiError;\n}> {\n  const query = `SELECT Q1.*, user.username AS modName\n      FROM (\n        SELECT\n          comicproblem.id AS id,\n          comicproblemcategory.Name AS categoryName,\n          description,\n          comic.name AS comicName,\n          comic.id AS comicId,\n          comicproblem.status,\n          comicproblem.timestamp,\n          userId,\n          userIP,\n          user.username AS username,\n          modId\n        FROM comicproblem\n        INNER JOIN comicproblemcategory ON (comicproblemcategory.id = comicproblem.problemCategoryId)\n        INNER JOIN comic ON (comic.id = comicproblem.comicId)\n        LEFT JOIN user ON (user.id = comicproblem.userId)\n      ) AS Q1\n    LEFT JOIN user ON (Q1.modId = user.id)\n  `;\n\n  const dbRes = await queryDb<DbComicProblem[]>(urlBase, query);\n\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting comic problems');\n  }\n\n  const mappedResults: DashboardAction[] = dbRes.result!.map(dbComicProblem => {\n    return {\n      type: 'comicProblem',\n      id: dbComicProblem.id,\n      comicId: dbComicProblem.comicId,\n      primaryField: dbComicProblem.comicName,\n      secondaryField: dbComicProblem.categoryName,\n      description: dbComicProblem.description,\n      isProcessed: dbComicProblem.status !== 'pending',\n      timestamp: dbComicProblem.timestamp,\n      user: dbComicProblem.userId\n        ? { userId: dbComicProblem.userId, username: dbComicProblem.username }\n        : { ip: dbComicProblem.userIP },\n      verdict:\n        dbComicProblem.status === 'approved'\n          ? 'Approved'\n          : dbComicProblem.status === 'rejected'\n          ? 'Rejected'\n          : undefined,\n      assignedMod:\n        dbComicProblem.modId && dbComicProblem.modName\n          ? { userId: dbComicProblem.modId, username: dbComicProblem.modName }\n          : undefined,\n    };\n  });\n\n  return {\n    data: mappedResults,\n  };\n}\n\ntype DbComicSuggestion = {\n  id: number;\n  comicName: string;\n  description: string;\n  artistName: string;\n  status: string;\n  timestamp: string;\n  userId?: number;\n  userIP?: string;\n  username?: string;\n  modId?: number;\n  modName?: string;\n  modComment?: string;\n  verdict?: ComicSuggestionVerdict;\n};\n\nasync function getComicSuggestions(urlBase: string): Promise<{\n  data?: DashboardAction[];\n  err?: ApiError;\n}> {\n  const query = `SELECT Q1.*, user.username AS modName\n      FROM (\n        SELECT\n          comicsuggestion.id AS id,\n          comicsuggestion.name AS comicName,\n          description AS description,\n          artistName AS artistName,\n          comicsuggestion.status AS status,\n          comicsuggestion.timestamp AS timestamp,\n          verdict,\n          userId,\n          userIP,\n          user.username AS username,\n          modId AS modId,\n          modComment\n        FROM comicsuggestion\n        LEFT JOIN user ON (user.id = comicsuggestion.userId)\n      ) AS Q1\n    LEFT JOIN user ON (Q1.modId = user.id)\n  `;\n\n  const dbRes = await queryDb<DbComicSuggestion[]>(urlBase, query);\n\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting comic suggestions');\n  }\n\n  const mappedResults: DashboardAction[] = dbRes.result!.map(dbComicSugg => {\n    let verdictText = undefined;\n    if (dbComicSugg.status === 'approved' || dbComicSugg.status === 'rejected') {\n      verdictText = dbComicSugg.status === 'approved' ? 'Approved' : 'Rejected';\n    }\n    if (dbComicSugg.verdict === 'bad') {\n      verdictText += ' - bad info';\n    }\n    if (dbComicSugg.verdict === 'good') {\n      verdictText += ' - excellent info';\n    }\n    if (dbComicSugg.modComment) {\n      verdictText += ` - mod comment: ${dbComicSugg.modComment}`;\n    }\n\n    return {\n      type: 'comicSuggestion',\n      id: dbComicSugg.id,\n      primaryField: `${dbComicSugg.comicName} - ${dbComicSugg.artistName}`,\n      description: dbComicSugg.description,\n      isProcessed: dbComicSugg.status !== 'pending',\n      timestamp: dbComicSugg.timestamp,\n      user: dbComicSugg.userId\n        ? { userId: dbComicSugg.userId, username: dbComicSugg.username }\n        : { ip: dbComicSugg.userIP },\n      verdict: verdictText,\n      assignedMod:\n        dbComicSugg.modId && dbComicSugg.modName\n          ? { userId: dbComicSugg.modId, username: dbComicSugg.modName }\n          : undefined,\n    };\n  });\n\n  return {\n    data: mappedResults,\n  };\n}\n\ntype DbComicUpload = {\n  id: number;\n  comicName: string;\n  comicId: number;\n  artistName: string;\n  publishStatus: ComicPublishStatus;\n  verdict?: ComicUploadVerdict;\n  timestamp: string;\n  uploadUserId?: number;\n  uploadUserIP?: string;\n  originalNameIfRejected?: string;\n  uploadUsername?: string;\n  modId?: number;\n  modName?: string;\n  modComment?: string;\n};\n\nasync function getComicUploads(urlBase: string): Promise<{\n  data?: DashboardAction[];\n  err?: ApiError;\n}> {\n  const query = `\n      SELECT Q1.*, user.username AS modName\n      FROM (\n        SELECT\n          comic.id,\n          comic.name AS comicName,\n          comic.id AS comicId,\n          artist.name AS artistName,\n          publishStatus,\n          verdict,\n          timestamp,\n          comicmetadata.uploadUserId,\n          comicmetadata.uploadUserIP,\n          comicmetadata.originalNameIfRejected,\n          user.username AS uploadUsername,\n          modId,\n          modComment\n        FROM comic\n        INNER JOIN comicmetadata ON (comicmetadata.comicId = comic.id)\n        INNER JOIN artist ON (artist.id = comic.artist)\n        LEFT JOIN user ON (user.id = comicmetadata.uploadUserId)\n      ) AS Q1\n    LEFT JOIN user ON (Q1.modId = user.id)\n  `;\n\n  const dbRes = await queryDb<DbComicUpload[]>(urlBase, query);\n\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting comic uploads');\n  }\n\n  // If a mod uploads, it skips the verification and goes straight to pending\n  // In these cases, don't show in the dashboard. This is the only case where it\n  // will be not uploaded but lack a modId.\n  const notModUploads = dbRes.result!.filter(\n    dbComicUpload => !(dbComicUpload.publishStatus !== 'uploaded' && !dbComicUpload.modId)\n  );\n\n  const mappedResults: DashboardAction[] = notModUploads.map(dbComicUpload => {\n    let fullVerdictText = '';\n    const isProcessed = dbComicUpload.publishStatus !== 'uploaded';\n\n    if (isProcessed && !dbComicUpload.uploadUserId) {\n      if (dbComicUpload.publishStatus === 'pending') {\n        fullVerdictText = 'Approved, set to pending';\n      }\n      if (dbComicUpload.publishStatus === 'rejected') {\n        fullVerdictText = 'Rejected';\n      }\n      if (dbComicUpload.publishStatus === 'rejected-list') {\n        fullVerdictText = 'Rejected, added to ban list';\n      }\n    }\n    if (isProcessed && dbComicUpload.verdict) {\n      const verdictText =\n        CONTRIBUTION_POINTS.comicUpload[dbComicUpload.verdict].actionDashboardDescription;\n      const isRejected =\n        dbComicUpload.verdict === 'rejected' || dbComicUpload.verdict === 'rejected-list';\n\n      fullVerdictText = isRejected ? 'Rejected' : 'Approved';\n      if (verdictText) {\n        fullVerdictText += ` - ${verdictText}`;\n      }\n      if (dbComicUpload.modComment) {\n        fullVerdictText += ` - mod comment: ${dbComicUpload.modComment}`;\n      }\n    }\n\n    let comicName = dbComicUpload.comicName;\n    if (dbComicUpload.publishStatus === 'rejected') {\n      comicName = dbComicUpload.originalNameIfRejected || comicName;\n    }\n\n    return {\n      type: 'comicUpload',\n      id: dbComicUpload.id,\n      comicId: dbComicUpload.comicId,\n      primaryField: `${comicName} - ${dbComicUpload.artistName}`,\n      isProcessed: dbComicUpload.publishStatus !== 'uploaded',\n      timestamp: dbComicUpload.timestamp,\n      user: dbComicUpload.uploadUsername\n        ? { userId: dbComicUpload.uploadUserId, username: dbComicUpload.uploadUsername }\n        : { ip: dbComicUpload.uploadUserIP },\n      verdict: isProcessed ? fullVerdictText : undefined,\n      assignedMod:\n        dbComicUpload.modId && dbComicUpload.modName\n          ? { userId: dbComicUpload.modId, username: dbComicUpload.modName }\n          : undefined,\n    };\n  });\n\n  return {\n    data: mappedResults,\n  };\n}\n\ntype DbPendingComicSimple = {\n  comicName: string;\n  comicId: number;\n  artistName: string;\n  pendingProblemModId?: number;\n  pendingProblemModName?: string;\n  uploadUserId?: number;\n  uploadUserIP?: string;\n  uploadUsername?: string;\n  timestamp: string;\n  errorText?: string;\n};\n\nexport async function getPendingComicProblems(urlBase: string): Promise<{\n  data?: DashboardAction[];\n  err?: ApiError;\n}> {\n  const query = `\n    SELECT Q1.*, user.username AS pendingProblemModName\n    FROM (\n      SELECT\n        comic.name AS comicName,\n        comic.id AS comicId,\n        artist.name AS artistName,\n        comicmetadata.uploadUserId,\n        comicmetadata.uploadUserIP,\n        user.username AS uploadUsername,\n        pendingProblemModId,\n        timestamp,\n        errorText\n      FROM comic\n      INNER JOIN artist ON (artist.id = comic.artist)\n      INNER JOIN comicmetadata ON (comicmetadata.comicId = comic.id)\n      LEFT JOIN user ON (user.id = comicmetadata.uploadUserId)\n      WHERE publishStatus = 'pending'\n      AND errorText IS NOT NULL\n    ) AS Q1\n    LEFT JOIN user ON (Q1.pendingProblemModId = user.id)\n  `;\n\n  const dbRes = await queryDb<DbPendingComicSimple[]>(urlBase, query);\n\n  if (dbRes.isError) {\n    return makeDbErrObj(dbRes, 'Error getting pending comics');\n  }\n\n  const mappedResults: DashboardAction[] = dbRes.result!.map(dbPending => {\n    return {\n      type: 'pendingComicProblem',\n      id: dbPending.comicId,\n      comicId: dbPending.comicId,\n      primaryField: `${dbPending.comicName} - ${dbPending.artistName}`,\n      isProcessed: false,\n      timestamp: dbPending.timestamp,\n      user:\n        dbPending.uploadUserId && dbPending.uploadUsername\n          ? {\n              userId: dbPending.uploadUserId,\n              username: dbPending.uploadUsername,\n            }\n          : { ip: dbPending.uploadUserIP },\n      verdict: undefined,\n      assignedMod:\n        dbPending.pendingProblemModId && dbPending.pendingProblemModName\n          ? {\n              userId: dbPending.pendingProblemModId,\n              username: dbPending.pendingProblemModName,\n            }\n          : undefined,\n    };\n  });\n\n  return {\n    data: mappedResults,\n  };\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { recalculatePublishingQueue } from '../funcs/publishing-queue';\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  const formPublishDate = formDataBody.get('publishDate');\n\n  if (!formComicId) return create400Json('Missing comicId');\n  if (!formPublishDate) return create400Json('Missing publishDate');\n\n  const err = await scheduleComic(\n    urlBase,\n    parseInt(formComicId.toString()),\n    formPublishDate.toString(),\n    user.userId\n  );\n  if (err) {\n    return processApiError('Error in /schedule-comic', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function scheduleComic(\n  urlBase: string,\n  comicId: number,\n  publishDate: string,\n  modId: number\n): Promise<ApiError | undefined> {\n  const metadataQuery =\n    'UPDATE comicmetadata SET publishDate = ?, scheduleModId = ?, publishingQueuePos = NULL WHERE comicId = ?';\n  const comicQuery = `UPDATE comic SET publishStatus = 'scheduled' WHERE id = ?`;\n\n  const [metadataDbRes, comicDbRes] = await Promise.all([\n    queryDb(urlBase, metadataQuery, [publishDate, modId, comicId]),\n    queryDb(urlBase, comicQuery, [comicId]),\n  ]);\n\n  const logCtx = { comicId, publishDate, modId };\n  if (metadataDbRes.isError) {\n    return makeDbErr(metadataDbRes, 'Could not update metadata table', logCtx);\n  }\n  if (comicDbRes.isError) {\n    return makeDbErr(comicDbRes, 'Could not update comic table', logCtx);\n  }\n\n  recalculatePublishingQueue(urlBase); // Can run in background\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport { MdArrowForward, MdLogin } from 'react-icons/md';\nimport Link from '~/components/Link';\nimport { authLoader } from '~/utils/loaders';\nimport BackToContribute from '../BackToContribute';\n\nexport { authLoader as loader } from '~/utils/loaders';\n\nexport default function JoinUs() {\n  return (\n    <div className=\"container mx-auto\">\n      <h1>Becoming a mod</h1>\n      <p className=\"mb-4\">\n        <BackToContribute />\n      </p>\n\n      <p className=\"mb-4\">\n        Yiffer.xyz would not be what it is without our wonderful mods.\n      </p>\n      <p className=\"mb-4\">\n        If we are satisfied with the amount of mods we currently have, you may be put on a\n        waiting list. While it might be the case that more is better, we believe it wise\n        to keep the number from being too high.\n      </p>\n      <ApplyLink />\n\n      <h3 className=\"font-bold\">What are a mod&apos;s tasks?</h3>\n      <p>\n        In short, helping out with keeping comics up to date, adding new ones, and\n        processing user suggestions. We have built a very well functioning admin panel\n        which should make this as comfortable as possible, you should even be able to do\n        the last part - processing user suggestions - on your phone comfortably. Longer\n        and more comprehensive list of the tasks:\n      </p>\n      <ul className=\"pl-4 mb-4\">\n        <li className=\"mt-3\">\n          Processing comic suggestions from others (rejecting them, or uploading the comic\n          with pages, information, and tags)\n        </li>\n        <li className=\"mt-3\">\n          Adding pages to existing comics as they are updated. Additionally swap, replace,\n          insert pages, and update thumbnails as needed\n        </li>\n        <li className=\"mt-3\">\n          Processing tag suggestions from other users (suggestions of adding/removing tags\n          to a comic)\n        </li>\n        <li className=\"mt-3\">Adding tags to comics where needed</li>\n        <li className=\"mt-3\">Keeping artist information up to date</li>\n        <li className=\"mt-3\">\n          When we implement comments at some point, moderating these will also be a\n          mod&apos;s job\n        </li>\n      </ul>\n\n      <h3 className=\"font-bold\">How much do I have to &quot;work&quot;?</h3>\n      <p className=\"mb-4\">\n        There is no defined lower requirement for how much a mod should contribute. In the\n        admin panel, there is a &quot;Mod scoreboard&quot; that we hope might motivate\n        people to do more, but you should not feel bad for not being far up. If we notice\n        that someone is really slacking off, and see no activity for months, we will\n        always message the person in question before taking any action. If you at any\n        point wish to stop being a mod, please do say so instead of simply going inactive.\n      </p>\n      <ApplyLink />\n    </div>\n  );\n}\n\nconst ApplyLink = () => {\n  const user = useLoaderData<typeof authLoader>();\n\n  return user ? (\n    <p className=\"mb-6\">\n      <Link\n        href=\"/contribute/join-us/apply\"\n        text=\"Apply as a mod here\"\n        IconRight={MdArrowForward}\n      />\n    </p>\n  ) : (\n    <p className=\"mb-6\">\n      <b>To apply as a mod, </b>\n      <Link href=\"/login\" text=\"Log in\" Icon={MdLogin} />\n    </p>\n  );\n};\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { parseFormJson } from '~/utils/formdata-parser';\nimport {\n  ApiError,\n  createSuccessJson,\n  makeDbErr,\n  processApiError,\n} from '~/utils/request-helpers';\nimport { DashboardActionType } from './dashboard-data';\n\nexport type AssignActionBody = {\n  actionId: number;\n  actionType: DashboardActionType;\n  modId: number;\n};\n\nexport async function action(args: ActionFunctionArgs) {\n  const { fields, isUnauthorized } = await parseFormJson<AssignActionBody>(args, 'mod');\n  if (isUnauthorized) return new Response('Unauthorized', { status: 401 });\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const err = await assignActionToMod(\n    urlBase,\n    fields.actionId,\n    fields.actionType,\n    fields.modId\n  );\n  if (err) return processApiError('Error in /assign-action', err);\n  return createSuccessJson();\n}\n\nasync function assignActionToMod(\n  urlBase: string,\n  actionId: number,\n  actionType: DashboardActionType,\n  modId: number\n): Promise<ApiError | undefined> {\n  let table = '';\n  let identifyingColumn = 'id';\n  let modIdColumn = 'modId';\n\n  if (actionType === 'comicUpload') {\n    table = 'comicmetadata';\n    identifyingColumn = 'comicId';\n  }\n  if (actionType === 'comicSuggestion') {\n    table = 'comicsuggestion';\n  }\n  if (actionType === 'comicProblem') {\n    table = 'comicproblem';\n  }\n  if (actionType === 'pendingComicProblem') {\n    table = 'comicmetadata';\n    identifyingColumn = 'comicId';\n    modIdColumn = 'pendingProblemModId';\n  }\n\n  const query = `UPDATE ${table} SET ${modIdColumn} = ? WHERE ${identifyingColumn} = ?`;\n  const queryParams = [modId, actionId];\n\n  const dbRes = await queryDb(urlBase, query, queryParams);\n  if (dbRes.isError) {\n    return makeDbErr(dbRes, 'Error assigning action to mod', {\n      actionId,\n      actionType,\n      modId,\n    });\n  }\n}\n", "import { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport InfoBox from '~/components/InfoBox';\nimport { getAllArtists } from '~/routes/api/funcs/get-artists';\nimport { getAllComicNamesAndIDs } from '~/routes/api/funcs/get-comics';\nimport { getAllTags } from '~/routes/api/funcs/get-tags';\nimport { ComicTiny, Tag } from '~/types/types';\nimport { authLoader } from '~/utils/loaders';\nimport BackToContribute from '../BackToContribute';\nimport Step1 from './step1';\nimport ComicDataEditor from '../../../components/ComicManager/ComicData';\nimport Step3Pagemanager from './step3-pagemanager';\nimport Step4Thumbnail from './step4-thumbnail';\nimport TagsEditor from '../../../components/ComicManager/Tags';\nimport SuccessMessage from './success';\nimport { processUpload } from './upload-handler.server';\nimport {\n  create400Json,\n  create500Json,\n  createSuccessJson,\n  logApiError,\n  processApiError } from\n'~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nconst illegalComicNameChars = ['#', '/', '?', '\\\\'];\nconst maxUploadBodySize = 80 * 1024 * 1024; // 80 MB\nimport cropperCss from 'cropperjs/dist/cropper.min.css';\nimport { ComicImage, isUsernameUrl, randomString } from '~/utils/general';\nimport Button from '~/components/Buttons/Button';\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: cropperCss }];\n}\n\nexport default function Upload() {\n  const { artists, comics, context, user, tags } = useLoaderData<typeof loader>();\n  const [step, setStep] = useState<number | string>(2);\n  const [comicData, setComicData] = useState<NewComicData>(createEmptyUploadData());\n  const [error, setError] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const submitFetcher = useGoodFetcher({\n    method: 'post',\n    encType: 'multipart/form-data',\n    toastError: false,\n    onFinish: () => {\n      setIsSubmitting(false);\n      if (submitFetcher.success) setStep('success');\n      if (submitFetcher.isError) setError(submitFetcher.errorMessage);\n    }\n  });\n\n  const uploadPagesFetcher = useGoodFetcher({\n    url: '/api/upload-comic-pages',\n    method: 'post',\n    encType: 'multipart/form-data',\n    toastError: true\n  });\n\n  async function uploadFiles(\n  comicData: NewComicData,\n  uploadId: string)\n  : Promise<{error?: string;}> {\n    const thumbnailFile = comicData.thumbnail?.file!;\n\n    const filesFormDatas = Array<FormData>();\n    let currentFormData = new FormData();\n    currentFormData.append(\n      'files',\n      thumbnailFile,\n      `thumbnail.${getFileExtension(thumbnailFile.name)}`\n    );\n    currentFormData.append('comicName', comicData.comicName);\n    currentFormData.append('uploadId', uploadId);\n    let currentFormDataSize = 0;\n\n    for (let i = 0; i < comicData.files.length; i++) {\n      const file = comicData.files[i];\n      // Split the request into multiple FormDatas/submissions if size is too big.\n      if (currentFormDataSize + file.file!.size > maxUploadBodySize) {\n        filesFormDatas.push(currentFormData);\n        currentFormData = new FormData();\n        currentFormData.append('comicName', comicData.comicName);\n        currentFormDataSize = 0;\n      }\n\n      currentFormData.append(\n        `files`,\n        file.file!,\n        pageNumberToPageName(i + 1, file.file!.name)\n      );\n      currentFormDataSize += file.file!.size;\n    }\n    filesFormDatas.push(currentFormData);\n\n    for (const formData of filesFormDatas) {\n      await uploadPagesFetcher.awaitSubmit(formData);\n    }\n\n    // const uploadPromises = filesFormDatas.map(\n    //   uploadFormData => uploadPagesFetcher.awaitSubmit(uploadFormData)\n    //   // uploadFormData => fetch(`/api/upload-comic-pages`, {\n    //   //   method: 'POST',\n    //   //   body: uploadFormData,\n    //   // })\n    // );\n\n    // const responses = await Promise.all(uploadPromises);\n\n    // for (const response of responses) {\n    //   console.log(response);\n\n    //   if (!response) {\n    //     return { error: response.statusText || 'Upload error' };\n    //   }\n    // }\n\n    return {};\n  }\n\n  async function submit() {\n    const randomId = generateRandomId();\n    const uploadId = `${comicData.comicName}-${randomId}`;\n    setError(null);\n\n    if (!comicData.validation.isLegalComicName) {\n      setError('There is an error regarding the comic name');\n      return;\n    }\n\n    if (comicData.newArtist.artistName) {\n      const isNameIllegal = !comicData.artistId && !comicData.newArtist.isValidName;\n      const isE621Illegal =\n      !comicData.newArtist.e621Name && !comicData.newArtist.hasConfirmedNoE621Name;\n      const isPatreonIllegal =\n      !comicData.newArtist.patreonName &&\n      !comicData.newArtist.hasConfirmedNoPatreonName;\n\n      if (!comicData.newArtist.areLinksValid) {\n        setError('Some of the artist links are invalid');\n        return;\n      }\n      if (isNameIllegal) {\n        setError('There is an error regarding the artist name');\n        return;\n      }\n      if (isE621Illegal) {\n        setError('You must confirm that the artist does not have an e621 name');\n        return;\n      }\n      if (isPatreonIllegal) {\n        setError('You must confirm that the artist does not have a patreon name');\n        return;\n      }\n    }\n\n    let newArtist: NewArtist | undefined;\n    if (comicData.newArtist.artistName) {\n      newArtist = {\n        ...comicData.newArtist,\n        links: comicData.newArtist.links.filter((link) => link.length > 0)\n      };\n    }\n\n    const uploadBody: UploadBody = {\n      uploadId,\n      comicName: comicData.comicName,\n      category: comicData.category,\n      classification: comicData.classification,\n      state: comicData.state,\n      tagIds: comicData.tags.map((tag) => tag.id),\n      newArtist: newArtist,\n      artistId: comicData.artistId,\n      numberOfPages: comicData.files.length,\n      previousComic: comicData.previousComic?.id ? comicData.previousComic : undefined,\n      nextComic: comicData.nextComic?.id ? comicData.nextComic : undefined\n    };\n\n    const formData = new FormData();\n    formData.append('body', JSON.stringify(uploadBody));\n\n    const { error } = validateUploadForm(uploadBody);\n    if (error) {\n      setError(error);\n      return;\n    }\n    if (comicData.files.length < 3 || !comicData.thumbnail) {\n      setError('You need at least 3 pages and a thumbnail');\n      return;\n    }\n\n    setIsSubmitting(true);\n    // First, upload files, split. Do this directly to the old api,\n    // because CF workers might have stricter limits than the old api\n    // and there is no need to go through that for this - old API\n    // deals with all validation and handling regardless.\n    const { error: uploadError } = await uploadFiles(comicData, uploadId);\n    console.log('error2: ', uploadError);\n\n    if (uploadError) {\n      setError(uploadError);\n      setIsSubmitting(false);\n      return;\n    }\n\n    submitFetcher.submit(formData);\n  }\n\n  function fillWithStuff() {\n    setComicData({\n      ...comicData,\n      comicName: 'Test ' + randomString(12),\n      category: 'MF',\n      classification: 'Furry',\n      state: 'finished',\n      validation: {\n        isLegalComicName: true\n      },\n      tags: Array.from(\n        new Set([\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)],\n        tags[Math.floor(Math.random() * tags.length)]]\n        )\n      ),\n      previousComic: comics[Math.floor(Math.random() * comics.length)],\n      nextComic: comics[Math.floor(Math.random() * comics.length)],\n      artistId: artists[Math.floor(Math.random() * artists.length)].id\n    });\n  }\n\n  return (\n    <div className=\"container mx-auto pb-16\">\n      <h1>Upload a comic</h1>\n\n      <p className=\"mb-4\">\n        <BackToContribute />\n      </p>\n\n      <Button color=\"error\" text=\"FILL WITH STUFF\" onClick={fillWithStuff} />\n\n      {user?.userType === 'moderator' &&\n      <InfoBox variant=\"info\" showIcon className=\"mb-4\">\n          You're logged in as a mod. Your comic (and artist, if it's a new one) will\n          therefore skip the regular user upload queue and go straight to 'pending'.\n        </InfoBox>}\n\n\n      {step === 'success' && <SuccessMessage isLoggedIn={!!user} />}\n\n      {step === 1 && <Step1 onNext={() => setStep(2)} />}\n\n      {step === 2 &&\n      <>\n          <ComicDataEditor\n          comicData={comicData}\n          onUpdate={setComicData}\n          artists={artists}\n          comics={comics} />\n\n\n          <Step3Pagemanager comicData={comicData} onUpdate={setComicData} />\n\n          <Step4Thumbnail comicData={comicData} onUpdate={setComicData} />\n\n          <TagsEditor\n          allTags={tags}\n          comicData={comicData}\n          onUpdate={setComicData}\n          className=\"mt-8\" />\n\n\n          <h4 className=\"mt-8\">Finish</h4>\n\n          {error && <InfoBox variant=\"error\" text={error} className=\"mt-2 mb-4 w-fit\" />}\n\n          {isSubmitting &&\n        <InfoBox variant=\"info\" boldText={false} className=\"mt-2 mb-4\">\n              <p>Uploading comic - this could take a little while, please be patient!</p>\n            </InfoBox>}\n\n\n          <LoadingButton\n          text=\"Submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          isLoading={isSubmitting}\n          onClick={submit} />\n\n        </>}\n\n    </div>);\n\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const allArtistsPromise = getAllArtists(urlBase, {\n    includePending: true,\n    modifyNameIncludeType: true\n  });\n  const comicsPromise = getAllComicNamesAndIDs(urlBase, { modifyNameIncludeType: true });\n  const tagsPromise = getAllTags(urlBase);\n  const userPromise = authLoader(args);\n  const [artistsRes, comicsRes, tagsRes, user] = await Promise.all([\n  allArtistsPromise,\n  comicsPromise,\n  tagsPromise,\n  userPromise]\n  );\n  if (artistsRes.err || !artistsRes.artists) {\n    return processApiError(\n      'Error getting artists in upload',\n      artistsRes.err || { logMessage: 'Artists returned as undefined' }\n    );\n  }\n  if (comicsRes.err || !comicsRes.comics) {\n    return processApiError(\n      'Error getting comics in upload',\n      comicsRes.err || { logMessage: 'Comics returned as undefined' }\n    );\n  }\n  if (tagsRes.err || !tagsRes.tags) {\n    return processApiError(\n      'Error getting tags in upload',\n      tagsRes.err || { logMessage: 'Tags returned as undefined' }\n    );\n  }\n\n  return {\n    artists: artistsRes.artists,\n    comics: comicsRes.comics,\n    tags: tagsRes.tags,\n    user,\n    uploadUrlBase: args.context.DB_API_URL_BASE,\n    context: Object.keys(args.context)\n  };\n}\n\nexport async function action(args: ActionFunctionArgs) {\n  const user = await authLoader(args);\n  const formData = await args.request.formData();\n  const body = (JSON.parse((formData.get('body') as string)) as UploadBody);\n  const { error } = validateUploadForm(body);\n  if (error) return create400Json(error);\n\n  const err = await processUpload(\n    args.context.DB_API_URL_BASE,\n    body,\n    user,\n    args.request.headers.get('CF-Connecting-IP') || 'unknown'\n  );\n  if (err) {\n    logApiError('Error in upload comic submit', err, body);\n    return create500Json();\n  }\n  return createSuccessJson();\n}\n\nfunction pageNumberToPageName(pageNum: number, filename: string): string {\n  const pageNumberString: string =\n  pageNum < 100 ? pageNum < 10 ? '00' + pageNum : '0' + pageNum : pageNum.toString();\n  return `${pageNumberString}.${getFileExtension(filename)}`;\n}\n\nfunction getFileExtension(filename: string) {\n  return filename.substring(filename.lastIndexOf('.') + 1).replace('jpeg', 'jpg');\n}\n\nfunction validateUploadForm(uploadBody: UploadBody): {error?: string;} {\n  if (!uploadBody.comicName) {\n    return { error: 'Comic name is required' };\n  }\n  if (uploadBody.comicName.length < 2) {\n    return { error: 'Comic name must be at least 2 characters' };\n  }\n  if (illegalComicNameChars.some((char) => uploadBody.comicName.includes(char))) {\n    return { error: 'Comic name contains illegal characters' };\n  }\n  if (!uploadBody.category) {\n    return { error: 'Category is required' };\n  }\n  if (!uploadBody.classification) {\n    return { error: 'Classification is required' };\n  }\n  if (!uploadBody.state) {\n    return { error: 'State is required' };\n  }\n  if (!uploadBody.artistId && !uploadBody.newArtist) {\n    return { error: 'Artist is required' };\n  }\n  if (uploadBody.newArtist) {\n    if (uploadBody.newArtist.e621Name && isUsernameUrl(uploadBody.newArtist.e621Name)) {\n      return { error: 'e621 name must be a username, not a URL' };\n    }\n    if (\n    uploadBody.newArtist.patreonName &&\n    isUsernameUrl(uploadBody.newArtist.patreonName))\n    {\n      return { error: 'Patreon name must be a username, not a URL' };\n    }\n  }\n  return {};\n}\n\nfunction generateRandomId() {\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  for (let i = 0; i < 6; i++) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n  return result;\n}\n\nfunction createEmptyUploadData(): NewComicData {\n  return {\n    comicName: '',\n    category: '',\n    classification: '',\n    state: '',\n    tags: [],\n    newArtist: {\n      artistName: '',\n      e621Name: '',\n      patreonName: '',\n      links: [''],\n      isValidName: false,\n      areLinksValid: true\n    },\n    // Validation that must be computed from within components, rather than on submit\n    validation: {\n      isLegalComicName: false\n    },\n    files: []\n  };\n}\n\nexport type NewArtist = {\n  id?: number;\n  artistName: string;\n  e621Name: string;\n  patreonName: string;\n  links: string[];\n  isValidName?: boolean;\n  hasConfirmedNoE621Name?: boolean;\n  hasConfirmedNoPatreonName?: boolean;\n  areLinksValid?: boolean;\n};\n\n// The submitted payload\nexport type UploadBody = {\n  uploadId: string;\n  comicName: string;\n  artistId?: number;\n  newArtist?: NewArtist;\n  category: string;\n  classification: string;\n  state: string;\n  previousComic?: ComicTiny;\n  nextComic?: ComicTiny;\n  tagIds: number[];\n  numberOfPages: number;\n};\n\n// For handling upload data internally in the front-end\nexport type NewComicData = {\n  comicId?: number;\n  comicName: string;\n  artistId?: number;\n  newArtist: NewArtist;\n  category: string;\n  classification: string;\n  state: string;\n  previousComic?: ComicTiny;\n  nextComic?: ComicTiny;\n  tags: Tag[];\n  validation: {\n    isLegalComicName: boolean;\n  };\n  files: ComicImage[];\n  thumbnail?: ComicImage;\n};", "import Checkbox from '~/components/Checkbox/Checkbox';\nimport Button from '~/components/Buttons/Button';\nimport { RiArrowRightLine } from 'react-icons/ri';\nimport { useState } from 'react';\n\nexport type Step1Props = {\n  onNext: () => void;\n};\n\nexport default function Step1({ onNext }: Step1Props) {\n  const [hasCheckedPublic, setHasCheckedPublic] = useState(false);\n  const [hasCheckedResolution, setHasCheckedResolution] = useState(false);\n\n  return (\n    <>\n      <h2>Introduction</h2>\n      <p>\n        Thank you for helping out! We believe in the community, and allow anyone to contribute. If\n        this feature is abused, we will have to restrict it. Please help us make this site even\n        better by following the rules below carefully. If we repeatedly have to reject your\n        suggestions, you will be prohibited from suggesting comics.\n      </p>\n      <p className=\"mt-4\">\n        If you would like to follow your suggestion\u2019s status, create an account! You can then follow\n        updates in the \u201Cview your contributions\u201D section above. Having a user will also earn you\n        points in the scoreboard on the previous page. The more accurate the information you provide\n        is, the higher your contribution score will be.\n      </p>\n\n      <h2 className=\"mt-4\">Before you begin: requirements</h2>\n      <ul>\n        <li>The comic must be at least four pages long.</li>\n        <li>\n          The comic must be a <i>comic</i>, not a collage (group of pictures with no story).\n        </li>\n        <li>The comic cannot have censoring bars.</li>\n        <li>Colored comics are preferred. If not, it must be of good quality.</li>\n        <li>In general, low quality (\u201Cpoorly drawn\u201D) comics will not be accepted.</li>\n        <li>No cub comics.</li>\n        <li>Pages must be in jpg og png format.</li>\n      </ul>\n\n      <h2 className=\"mt-4\">Checklist</h2>\n      <p>\n        <u>All</u> pages uploaded must be publicly visible. A comic with some of its pages exclusive\n        to Patreon or similar services will be rejected.\n      </p>\n      <Checkbox\n        label=\"I confirm that the pages are publicly available\"\n        checked={hasCheckedPublic}\n        onChange={v => setHasCheckedPublic(v)}\n        className=\"mt-2\"\n      />\n\n      <p className=\"mt-4\">\n        The pages uploaded must be of the highest possible resolution that is publicly available.\n        Resized and compressed pages, often found on third-party websites, we not be accepted.\n        Please check the artist's public galleries (like FurAffinity) to ensure that the page\n        resolution is correct.\n      </p>\n      <Checkbox\n        label=\"I confirm that the pages are in the highest resolution publicly available\"\n        checked={hasCheckedResolution}\n        onChange={v => setHasCheckedResolution(v)}\n        className=\"mt-2\"\n      />\n\n      <Button\n        text=\"Continue\"\n        disabled={!hasCheckedPublic || !hasCheckedResolution}\n        endIcon={RiArrowRightLine}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onNext}\n        className=\"mt-6\"\n      />\n    </>\n  );\n}\n", "import { useMemo, useState } from 'react';\nimport CheckboxUncontrolled from '~/components/Checkbox/CheckboxUncontrolled';\nimport SearchableSelect from '~/components/SearchableSelect/SearchableSelect';\nimport Select from '~/components/Select/Select';\nimport { ArtistTiny, Comic, ComicTiny } from '~/types/types';\nimport { NewComicData } from '../../routes/contribute/upload';\nimport ComicNameEditor from './ComicNameEditor';\nimport Step2NewArtist from '../ArtistEditor';\nimport Link from '../Link';\nimport { MdArrowForward, MdOpenInNew } from 'react-icons/md';\n\nconst categoryOptions = ['M', 'F', 'MF', 'MM', 'FF', 'MF+', 'I'].map(c => ({\n  value: c,\n  text: c,\n}));\nconst classificationOptions = ['Furry', 'Pokemon', 'MLP', 'Other'].map(c => ({\n  value: c,\n  text: c,\n}));\nconst stateOptions = [\n  { text: 'Finished', value: 'finished' },\n  { text: 'WIP', value: 'wip' },\n  { text: 'Cancelled', value: 'cancelled' },\n];\n\ntype ComicDataEditorProps = {\n  comicData: NewComicData;\n  onUpdate: (newData: NewComicData) => void;\n  artists: ArtistTiny[];\n  comics: ComicTiny[];\n  existingComic?: Comic;\n  isAdminPanel?: boolean;\n};\n\nexport default function ComicDataEditor({\n  artists,\n  comics,\n  comicData,\n  onUpdate,\n  existingComic,\n  isAdminPanel = false,\n}: ComicDataEditorProps) {\n  const [artistNotInList, setArtistNotInList] = useState(false);\n\n  const artistOptions = useMemo(\n    () => artists.map(a => ({ value: a.id, text: a.name })),\n    [artists]\n  );\n\n  const allComicOptions = useMemo(() => {\n    return comics.map(c => ({ value: c, text: c.name }));\n  }, [comics]);\n\n  function getComicLink(comic: ComicTiny) {\n    if (comic.publishStatus === 'published') {\n      return `/${comic.name}`;\n    }\n    if (comic.publishStatus === 'pending' || comic.publishStatus === 'uploaded') {\n      if (isAdminPanel) {\n        return `/admin/comics/${comic.id}`;\n      }\n    }\n\n    return undefined;\n  }\n\n  return (\n    <>\n      <ComicNameEditor\n        comicName={comicData.comicName}\n        setIsLegalComicnameState={isLegal =>\n          onUpdate({\n            ...comicData,\n            validation: { ...comicData.validation, isLegalComicName: isLegal },\n          })\n        }\n        onUpdate={newVal => onUpdate({ ...comicData, comicName: newVal })}\n        existingComic={existingComic}\n      />\n\n      <div className=\"flex flex-row flex-wrap mt-6 items-end gap-4\">\n        <div className=\"flex flex-row flex-wrap gap-x-4 gap-y-1 items-end\">\n          <SearchableSelect\n            value={comicData.artistId}\n            onChange={newVal => onUpdate({ ...comicData, artistId: newVal })}\n            onValueCleared={() => onUpdate({ ...comicData, artistId: undefined })}\n            options={artistOptions}\n            disabled={artistNotInList}\n            title=\"Artist\"\n            name=\"artistId\"\n          />\n          {comicData.artistId && (\n            <div>\n              <ViewArtistLink\n                artist={artists.find(a => a.id === comicData.artistId)}\n                isAdminPanel={isAdminPanel}\n              />\n            </div>\n          )}\n        </div>\n        {!isAdminPanel && (\n          <CheckboxUncontrolled\n            label=\"Artist is not in the list\"\n            name=\"artistNotInList\"\n            onChange={newVal => {\n              setArtistNotInList(newVal);\n              if (newVal === true) {\n                onUpdate({ ...comicData, artistId: undefined });\n              }\n            }}\n          />\n        )}\n      </div>\n\n      {artistNotInList && (\n        <Step2NewArtist\n          newArtistData={comicData.newArtist}\n          onUpdate={newArtist => onUpdate({ ...comicData, newArtist })}\n        />\n      )}\n\n      <div className=\"flex flex-row flex-wrap gap-4 mt-8\">\n        <Select\n          title=\"Category\"\n          name=\"language\"\n          value={comicData.category}\n          onChange={newVal => onUpdate({ ...comicData, category: newVal })}\n          options={categoryOptions}\n          minWidth={72}\n        />\n\n        <Select\n          title=\"Classification\"\n          name=\"classification\"\n          value={comicData.classification}\n          onChange={newVal => onUpdate({ ...comicData, classification: newVal })}\n          options={classificationOptions}\n          minWidth={108}\n        />\n\n        <Select\n          title=\"State\"\n          name=\"state\"\n          value={comicData.state}\n          onChange={newVal => onUpdate({ ...comicData, state: newVal })}\n          options={stateOptions}\n          minWidth={111}\n        />\n      </div>\n\n      {!isAdminPanel && (\n        <div style={{ fontSize: '0.75rem' }} className=\"mt-2\">\n          <p>M, F: Male only, female only.</p>\n          <p>MF: One male on one female.</p>\n          <p>MM, FF: Two or more males or females together.</p>\n          <p>MF+: One or more male on one or more female action.</p>\n          <p>I: Anything involving intersex characters or nonbinary genders.</p>\n        </div>\n      )}\n\n      <h4 className=\"mt-8\">Connected comics</h4>\n      {!isAdminPanel && (\n        <>\n          <p>\n            If this is a standalone comic, leave these fields empty. If it's part of a\n            series, fill in the previous and/or next comics.\n          </p>\n          <p>\n            If you are uploading multiple chapters of a series, you can leave the \"next\n            comic\" empty and only fill in the previous comic for each.\n          </p>\n        </>\n      )}\n\n      <div className=\"flex flex-row flex-wrap gap-4 mt-2\">\n        <div>\n          <SearchableSelect\n            value={comicData.previousComic}\n            onChange={newVal => onUpdate({ ...comicData, previousComic: newVal })}\n            onValueCleared={() => onUpdate({ ...comicData, previousComic: undefined })}\n            options={allComicOptions}\n            title=\"Previous comic\"\n            name=\"previousComicId\"\n            placeholder=\"Leave blank if none\"\n            mobileCompact\n            equalValueFunc={(a, b) => a.id === b?.id}\n          />\n          {comicData.previousComic && getComicLink(comicData.previousComic) && (\n            <div className=\"mt-1\">\n              <ViewComicLink\n                comic={comicData.previousComic}\n                isAdminPanel={isAdminPanel}\n              />\n            </div>\n          )}\n        </div>\n\n        <div>\n          <SearchableSelect\n            value={comicData.nextComic}\n            onChange={newVal => onUpdate({ ...comicData, nextComic: newVal })}\n            onValueCleared={() => onUpdate({ ...comicData, nextComic: undefined })}\n            options={allComicOptions}\n            title=\"Next comic\"\n            name=\"nextComicId\"\n            placeholder=\"Leave blank if none\"\n            mobileCompact\n            equalValueFunc={(a, b) => a.id === b?.id}\n          />\n          {comicData.nextComic && getComicLink(comicData.nextComic) && (\n            <div className=\"mt-1\">\n              <ViewComicLink comic={comicData.nextComic} isAdminPanel={isAdminPanel} />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport function findArtistNameById(artists: ArtistTiny[], id: number) {\n  const artist = artists.find(a => a.id === id);\n  return artist ? artist.name : '';\n}\n\nfunction ViewArtistLink({\n  artist,\n  isAdminPanel,\n}: {\n  artist: ArtistTiny | undefined;\n  isAdminPanel: boolean;\n}) {\n  if (!artist) return null;\n\n  if (isAdminPanel) {\n    if (isAdminPanel && !artist.isPending && !artist.isBanned) {\n      return (\n        <>\n          <Link\n            href={`/admin/artists/${artist.id}`}\n            text=\"View admin\"\n            IconRight={MdArrowForward}\n            className=\"ml-2\"\n          />\n          <Link\n            href={`/artists/${artist.name}`}\n            text=\"View live\"\n            IconRight={MdOpenInNew}\n            className=\"ml-4\"\n            newTab\n          />\n        </>\n      );\n    }\n  }\n\n  if (isAdminPanel) {\n    return (\n      <Link\n        href={`/admin/artists/${artist.id}`}\n        text=\"View admin\"\n        IconRight={MdArrowForward}\n        className=\"ml-2\"\n      />\n    );\n  }\n\n  if (!artist.isPending && !artist.isBanned) {\n    return (\n      <Link\n        href={`/artist/${artist.name}`}\n        text=\"View artist\"\n        IconRight={MdOpenInNew}\n        newTab\n      />\n    );\n  }\n\n  return null;\n}\n\nfunction ViewComicLink({\n  comic,\n  isAdminPanel,\n}: {\n  comic: ComicTiny;\n  isAdminPanel: boolean;\n}) {\n  if (isAdminPanel && comic.publishStatus === 'published') {\n    return (\n      <>\n        <Link\n          href={`/admin/comics/${comic.id}`}\n          text=\"View admin\"\n          IconRight={MdArrowForward}\n          className=\"ml-2\"\n        />\n        <Link\n          href={`/${comic.name}`}\n          text=\"View live\"\n          IconRight={MdOpenInNew}\n          className=\"ml-4\"\n          newTab\n        />\n      </>\n    );\n  }\n\n  if (isAdminPanel) {\n    return (\n      <Link\n        href={`/admin/comics/${comic.id}`}\n        text=\"View admin\"\n        IconRight={MdArrowForward}\n        className=\"ml-2\"\n      />\n    );\n  }\n\n  if (comic.publishStatus === 'published') {\n    return (\n      <Link\n        href={`/${comic.name}`}\n        text=\"View comic\"\n        IconRight={MdOpenInNew}\n        newTab\n        className=\"ml-2\"\n      />\n    );\n  }\n\n  return null;\n}\n", "import { useState } from 'react';\nimport type { BaseCheckboxProps } from './Checkbox';\nimport Checkbox from './Checkbox';\n\ntype CheckboxUncontrolledProps = BaseCheckboxProps & {\n  onChange?: (newVal: boolean) => void;\n  name: string;\n};\n\nexport default function CheckboxUncontrolled({\n  label,\n  className = '',\n  onChange,\n  ...props\n}: CheckboxUncontrolledProps) {\n  const [state, setState] = useState(false);\n\n  return (\n    <Checkbox\n      label={label}\n      className={className}\n      checked={state}\n      onChange={newVal => {\n        setState(newVal);\n        if (onChange) {\n          onChange(newVal);\n        }\n      }}\n      {...props}\n    />\n  );\n}\n", "import { useEffect, useMemo, useRef, useState } from 'react';\nimport { RiCloseLine } from 'react-icons/ri';\nimport useWindowSize from '~/utils/useWindowSize';\n\ntype keyValOptions<T> = { text: string; value: T };\n\nexport type BaseSearchableSelectProps<T> = {\n  options: { text: string; value: T }[];\n  title?: string;\n  error?: boolean;\n  maxWidth?: number;\n  isFullWidth?: boolean;\n  initialWidth?: number;\n  placeholder?: string;\n  name: string;\n  disabled?: boolean;\n  mobileCompact?: boolean;\n  equalValueFunc?: (a: T, b: T | undefined) => boolean;\n  className?: string;\n};\n\ntype FullSelectProps<T> = {\n  onChange: (value: T) => void;\n  onValueCleared: () => void;\n  value?: T;\n} & BaseSearchableSelectProps<T>;\n\nexport default function SearchableSelect<T>({\n  options,\n  title = '',\n  value,\n  onValueCleared,\n  onChange,\n  error = false,\n  maxWidth = 999999,\n  isFullWidth = false,\n  initialWidth = 0, // TODO needed?\n  placeholder = '',\n  name,\n  disabled = false,\n  mobileCompact = false,\n  equalValueFunc,\n  className = '',\n  ...props\n}: FullSelectProps<T>) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [minWidth, setMinWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [currentlyHighlightedIndex, setCurrentlyHighlightedIndex] = useState(-1);\n  const windowSize = useWindowSize();\n  const selectItemContainerRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const windowWidth: number = windowSize.width || 0;\n\n  useEffect(() => {\n    tryComputeWidth();\n  }, []);\n\n  useEffect(() => {\n    if (searchText && !isOpen) {\n      setIsOpen(true);\n    }\n    setCurrentlyHighlightedIndex(-1);\n  }, [searchText]);\n\n  async function tryComputeWidth() {\n    let isFinished = false;\n    while (!isFinished) {\n      await waitMillisec(25);\n      isFinished = computeWidth();\n    }\n  }\n\n  function computeWidth() {\n    const container = selectItemContainerRef.current;\n    if (container && container.children.length > 0) {\n      let maxChildWidth = 0;\n      for (const child of container.children) {\n        if (child.clientWidth > maxChildWidth) {\n          maxChildWidth = child.clientWidth;\n        }\n      }\n\n      if (minWidth > (maxWidth as number)) {\n        setWidth(maxWidth as number);\n      } else {\n        setMinWidth(maxChildWidth);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  const minWidthStyle = useMemo(() => {\n    if (width || isFullWidth) {\n      return {};\n    }\n    if (minWidth) {\n      return { minWidth: `${minWidth + 0}px` };\n    } else if (initialWidth) {\n      return { minWidth: `${initialWidth + 0}px` };\n    }\n    return {};\n  }, [initialWidth, isFullWidth, minWidth, width]);\n\n  const widthStyle = useMemo(() => {\n    if (isFullWidth) {\n      return { width: '100%' };\n    }\n    if (width) {\n      return { width: `${width}px` };\n    }\n    return {};\n  }, [isFullWidth, width]);\n\n  async function waitMillisec(millisec: number) {\n    return new Promise<void>(resolve => {\n      setTimeout(() => resolve(), millisec);\n    });\n  }\n\n  function onSelected(clickedValue: T) {\n    onChange(clickedValue);\n    clearAndCloseSearch();\n  }\n\n  function clearAndCloseSearch({ avoidIfHighlighted = false } = {}) {\n    if (avoidIfHighlighted && currentlyHighlightedIndex !== -1) {\n      return;\n    }\n    setSearchText('');\n    setIsOpen(false);\n    setHighlightedIndex(-1);\n    inputRef.current?.blur();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    if (event.key === 'Enter') {\n      if (currentlyHighlightedIndex !== -1 && filteredOptions.length > 0) {\n        onSelected(filteredOptions[currentlyHighlightedIndex].value);\n      } else if (\n        currentlyHighlightedIndex === -1 &&\n        filteredOptions.length > 0 &&\n        isOpen\n      ) {\n        onSelected(filteredOptions[0].value);\n      }\n    } else if (event.key === 'ArrowDown') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(0);\n      } else if (currentlyHighlightedIndex === filteredOptions.length - 1) {\n        setHighlightedIndex(0);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex + 1);\n      }\n    } else if (event.key === 'ArrowUp') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(filteredOptions.length - 1);\n      } else if (currentlyHighlightedIndex === 0 || currentlyHighlightedIndex === -1) {\n        setHighlightedIndex(filteredOptions.length - 1);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex - 1);\n      }\n    } else if (event.key === 'Escape') {\n      clearAndCloseSearch();\n    }\n  }\n\n  function setHighlightedIndex(indexNum: number) {\n    if (indexNum !== -1 && selectItemContainerRef.current) {\n      let option = selectItemContainerRef.current.children[indexNum];\n      if (option) {\n        (option as HTMLElement).scrollIntoView({ block: 'nearest', inline: 'start' });\n      }\n    }\n\n    setCurrentlyHighlightedIndex(indexNum);\n  }\n\n  const filteredOptions = useMemo<keyValOptions<T>[]>(() => {\n    if (!searchText) {\n      return options;\n    }\n    return options.filter(option => {\n      return option.text.toLowerCase().includes(searchText.toLowerCase());\n    });\n  }, [options, searchText]);\n\n  function onFilledInputActivated() {\n    onValueCleared();\n    setIsOpen(true);\n  }\n\n  const convertedValue = useMemo(() => {\n    if (equalValueFunc) {\n      return options.find(option => equalValueFunc(option.value, value));\n    }\n    return options.find(option => option.value === value);\n  }, [options, value]);\n\n  const borderStyle =\n    error || disabled\n      ? ''\n      : { borderImage: 'linear-gradient(to right, #9aebe7, #adfee0) 1' };\n\n  const inputClassname = `text-text-light dark:text-text-dark bg-transparent border border-0 border-b-2 px-2 after:absolute\n    disabled:border-gray-800 dark:disabled:border-gray-600\n    after:content-[''] after:bottom-2.5 after:w-0 after:h-0 after:border-5 after:border-transparent\n    after:border-t-text-light dark:after:border-t-text-dark after:right-3\n    placeholder-gray-800 dark:placeholder-gray-700 w-full outline-none`;\n\n  return (\n    <div\n      onKeyDown={onKeyDown}\n      className={`hover:cursor-pointer focus:bg-theme1-primaryTrans\n        relative w-fit outline-none h-9 leading-9 pt-3 box-content ${className}`}\n      style={{ ...minWidthStyle, ...widthStyle }}\n      {...props}\n    >\n      {title && <label className=\"absolute text-sm top-0 left-2\">{title}</label>}\n\n      {value ? (\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={convertedValue?.text || ''}\n          disabled={disabled}\n          style={{ ...borderStyle }}\n          onFocus={onFilledInputActivated}\n          className={inputClassname}\n          onChange={() => {}}\n        />\n      ) : (\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={searchText || ''}\n          disabled={disabled}\n          name={name}\n          onChange={e => setSearchText(e.target.value)}\n          onFocus={() => setIsOpen(true)}\n          onClick={() => setIsOpen(true)}\n          style={{ ...borderStyle }}\n          className={inputClassname}\n          placeholder={placeholder}\n          onBlur={() => clearAndCloseSearch({ avoidIfHighlighted: true })}\n          ref={inputRef}\n        />\n      )}\n\n      {value && (\n        <span\n          className=\"absolute right-2 top-3 hover:cursor-pointer\"\n          onClick={onValueCleared}\n        >\n          <RiCloseLine />\n        </span>\n      )}\n\n      <div\n        className={`${\n          isOpen ? '' : 'invisible'\n        } overflow-hidden shadow-lg w-fit min-w-full absolute bg-white dark:bg-gray-400 left-0 right-0 z-40 max-h-80 overflow-y-auto`}\n        ref={selectItemContainerRef}\n      >\n        {filteredOptions.map(({ text, value: optionValue }, index) => (\n          <div\n            key={text}\n            onClick={() => onSelected(optionValue)}\n            onMouseEnter={() => setHighlightedIndex(index)}\n            onMouseLeave={() => setHighlightedIndex(-1)}\n            className={`z-40 hover:cursor-pointer px-3 whitespace-nowrap  ${\n              currentlyHighlightedIndex === index\n                ? 'bg-gradient-to-r from-theme1-primary to-theme2-primary text-text-light '\n                : ''\n            }}`}\n          >\n            <p className={mobileCompact && windowWidth < 460 ? 'text-sm leading-7' : ''}>\n              {text}\n            </p>\n          </div>\n        ))}\n        {filteredOptions.length === 0 && (\n          <div\n            className=\"z-40 px-3 whitespace-nowrap text-gray-700 hover:cursor-default\"\n            onClick={() => onSelected(null)}\n          >\n            No results\n          </div>\n        )}\n      </div>\n\n      <input\n        type=\"text\"\n        name={name}\n        value={convertedValue?.text || ''}\n        disabled={disabled}\n        onChange={() => {}}\n        readOnly\n        hidden\n      />\n    </div>\n  );\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport Checkbox from '~/components/Checkbox/Checkbox';\nimport InfoBox from '~/components/InfoBox';\nimport TextInput from '~/components/TextInput/TextInput';\nimport { Comic } from '~/types/types';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nimport { SimilarComicResponse } from '../../routes/api/search-similarly-named-comic';\n\ntype ComicNameEditor = {\n  comicName: string;\n  setIsLegalComicnameState: (isLegal: boolean) => void;\n  onUpdate: (newData: string) => void;\n  existingComic?: Comic;\n};\n\nexport default function ComicNameEditor({\n  comicName,\n  setIsLegalComicnameState, // For parent component, validation\n  onUpdate,\n  existingComic,\n}: ComicNameEditor) {\n  const similarComicsFetcher = useGoodFetcher<SimilarComicResponse>({\n    url: '/api/search-similarly-named-comic',\n    method: 'post',\n    onFinish: () => {\n      setSimilarComics(similarComicsFetcher.data);\n    },\n  });\n  const [similarComics, setSimilarComics] = useState<SimilarComicResponse>();\n  const [hasConfirmedNewComic, setHasConfirmedNewComic] = useState(false);\n  const debounceTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(onComicNameChange, [comicName]);\n\n  // Update validity of name, as this data only exists here locally. All other validation is done in submit logic.\n  useEffect(() => {\n    if (!similarComics) {\n      setIsLegalComicnameState(false);\n      return;\n    }\n    const isExactMatch =\n      similarComics.exactMatchComic || similarComics.exactMatchRejectedComic;\n    const isAnySimilar =\n      similarComics.similarComics.length > 0 ||\n      similarComics.similarRejectedComics.length > 0;\n\n    let isLegal = false;\n    if (!isExactMatch && comicName.length > 2) {\n      isLegal = !isAnySimilar || hasConfirmedNewComic;\n    }\n\n    setIsLegalComicnameState(isLegal);\n  }, [similarComics, hasConfirmedNewComic]);\n\n  function onComicNameChange() {\n    setIsLegalComicnameState(false);\n    setHasConfirmedNewComic(false);\n    setSimilarComics(undefined);\n\n    if (existingComic && existingComic.name === comicName) {\n      setIsLegalComicnameState(true);\n      return;\n    }\n\n    if (debounceTimeoutRef.current) {\n      clearTimeout(debounceTimeoutRef.current);\n    }\n\n    if (comicName.length < 3) {\n      return;\n    }\n\n    debounceTimeoutRef.current = setTimeout(() => {\n      const body: any = { comicName };\n      if (existingComic) body.excludeName = existingComic.name;\n      similarComicsFetcher.submit(body);\n    }, 1000);\n  }\n\n  const isExactMath =\n    similarComics?.exactMatchComic || similarComics?.exactMatchRejectedComic;\n  const isAnySimilar =\n    similarComics &&\n    !isExactMath &&\n    (similarComics.similarComics.length > 0 ||\n      similarComics.similarRejectedComics.length > 0);\n\n  return (\n    <>\n      <div className=\"flex flex-row gap-4 flex-wrap\">\n        <TextInput\n          label=\"Comic name\"\n          name=\"comicName\"\n          value={comicName}\n          onChange={onUpdate}\n        />\n      </div>\n\n      {similarComics && (\n        <>\n          {isAnySimilar && (\n            <>\n              {!hasConfirmedNewComic && (\n                <InfoBox variant=\"warning\" boldText={false} className=\"mt-2 w-fit\">\n                  {similarComics.similarComics.length > 0 && (\n                    <>\n                      <p>\n                        The following comics with similar names already exist in the\n                        system:\n                      </p>\n                      <ul>\n                        {similarComics.similarComics.map((comicName: string) => (\n                          <li key={comicName}>{comicName}</li>\n                        ))}\n                      </ul>\n                    </>\n                  )}\n                  {similarComics.similarRejectedComics.length > 0 && (\n                    <>\n                      <p>\n                        The following comics with similar names have been rejected. If one\n                        of these is your comic, do not upload it:\n                      </p>\n                      <ul>\n                        {similarComics.similarRejectedComics.map((comicName: string) => (\n                          <li key={comicName}>{comicName}</li>\n                        ))}\n                      </ul>\n                    </>\n                  )}\n                </InfoBox>\n              )}\n\n              <Checkbox\n                label=\"This is not one of the above comics\"\n                checked={hasConfirmedNewComic}\n                onChange={setHasConfirmedNewComic}\n                className=\"mt-2\"\n              />\n            </>\n          )}\n\n          {similarComics.exactMatchComic && (\n            <InfoBox\n              text={`A comic with this name already exists in the system. You cannot submit this comic name. If you think this is a different comic with the same name, you can add \"(<artistname>)\" to the end of the comic's name. Please verify that this is not a duplicate before submitting.`}\n              variant=\"error\"\n              className=\"mt-2 w-fit\"\n            />\n          )}\n          {similarComics.exactMatchRejectedComic && (\n            <InfoBox\n              text=\"A comic with this name has been rejected. You cannot submit this comic name.\"\n              variant=\"error\"\n              className=\"mt-2 w-fit\"\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { MdDelete } from 'react-icons/md';\nimport Checkbox from '~/components/Checkbox/Checkbox';\nimport InfoBox from '~/components/InfoBox';\nimport TextInput from '~/components/TextInput/TextInput';\nimport { SimilarArtistResponse } from '~/routes/api/search-similar-artist';\nimport { Artist } from '~/types/types';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nimport { NewArtist } from '../routes/contribute/upload';\nimport IconButton from './Buttons/IconButton';\n\ntype ArtistEditorProps = {\n  newArtistData: NewArtist;\n  existingArtist?: Artist;\n  onUpdate: (newData: NewArtist) => void;\n  hideBorderTitle?: boolean;\n  className?: string;\n};\n\nexport default function ArtistEditor({\n  newArtistData,\n  existingArtist,\n  onUpdate,\n  hideBorderTitle = false,\n  className = '',\n}: ArtistEditorProps) {\n  const similarArtistsFetcher = useGoodFetcher<SimilarArtistResponse>({\n    url: '/api/search-similar-artist',\n    method: 'post',\n    onFinish: () => {\n      setSimilarArtists(similarArtistsFetcher.data);\n    },\n  });\n\n  const [similarArtists, setSimilarArtists] = useState<SimilarArtistResponse>();\n  const [hasConfirmedNewArtist, setHasConfirmedNewArtist] = useState(false);\n  const [noLinks, setNoLinks] = useState(false);\n  const [isLinksError, setIsLinksError] = useState(true);\n  const debounceTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  function updateArtist(newArtist: NewArtist) {\n    onUpdate(newArtist);\n  }\n\n  useEffect(() => {\n    setHasConfirmedNewArtist(false);\n    setSimilarArtists(undefined);\n\n    if (debounceTimeoutRef.current) {\n      clearTimeout(debounceTimeoutRef.current);\n    }\n\n    if (\n      newArtistData.artistName.length < 3 ||\n      newArtistData.artistName === existingArtist?.name\n    ) {\n      return;\n    }\n\n    debounceTimeoutRef.current = setTimeout(() => {\n      const body: any = { artistName: newArtistData.artistName };\n      if (existingArtist) {\n        body.excludeName = existingArtist.name;\n      }\n\n      similarArtistsFetcher.submit(body);\n    }, 1000);\n  }, [newArtistData.artistName, existingArtist?.name]);\n\n  // Add new empty string link if all are filled\n  useEffect(() => {\n    const links = newArtistData.links;\n    if (links.length > 0 && links.every(l => l.length > 0)) {\n      updateArtist({ ...newArtistData, links: [...links, ''] });\n    }\n    if (!links.every(l => l.length === 0)) {\n      setNoLinks(false);\n    }\n  }, [newArtistData.links]);\n\n  // Update validity of name, as this data only exists here locally. All other validation is done in submit logic.\n  useEffect(() => {\n    let isLegal = false;\n\n    if (similarArtists) {\n      const isExactMatch =\n        similarArtists.exactMatchArtist || similarArtists.exactMatchBannedArtist;\n      const isAnyKindOfSimilarArtist =\n        similarArtists.similarArtists.length > 0 ||\n        similarArtists.similarBannedArtists.length > 0;\n\n      if (!isExactMatch && newArtistData.artistName.length > 2) {\n        isLegal = !isAnyKindOfSimilarArtist || hasConfirmedNewArtist;\n      }\n    }\n\n    updateArtist({\n      ...newArtistData,\n      isValidName: isLegal,\n      areLinksValid: isLinksError,\n    });\n  }, [similarArtists, hasConfirmedNewArtist, isLinksError]);\n\n  const isExactMatch =\n    similarArtists &&\n    (similarArtists.exactMatchArtist || similarArtists.exactMatchBannedArtist);\n\n  const isAnySimilar =\n    !isExactMatch &&\n    similarArtists &&\n    (similarArtists.similarArtists.length > 0 ||\n      similarArtists.similarBannedArtists.length > 0);\n\n  const uploadClassname = 'my-4 p-4 border border-4 border-theme1-primary flex flex-col';\n  const adminPanelClassname = 'flex flex-col';\n\n  return (\n    <div\n      className={`${\n        hideBorderTitle ? adminPanelClassname : uploadClassname\n      } ${className}`}\n    >\n      {!hideBorderTitle && <h3>New artist</h3>}\n\n      <TextInput\n        label=\"Artist name\"\n        name=\"artistName\"\n        value={newArtistData.artistName}\n        onChange={newVal => updateArtist({ ...newArtistData, artistName: newVal })}\n      />\n\n      {isExactMatch && (\n        <InfoBox\n          variant=\"error\"\n          className=\"mt-2\"\n          text={\n            similarArtists.exactMatchArtist\n              ? 'An artist with this name already exists in the system'\n              : 'An artist with this name has been banned or has requested their comics not be published here'\n          }\n        />\n      )}\n\n      {isAnySimilar && (\n        <>\n          {!hasConfirmedNewArtist && (\n            <InfoBox variant=\"warning\" className=\"mt-2\" boldText={false}>\n              {similarArtists.similarArtists.length > 0 && (\n                <>\n                  <p>\n                    The following existing artist names are somewhat similar to the one\n                    you entered:\n                  </p>\n                  <ul>\n                    {similarArtists.similarArtists.map(name => (\n                      <li key={name}>{name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n              {similarArtists.similarBannedArtists.length > 0 && (\n                <>\n                  <p>\n                    The artists are somewhat similar to the one you entered, and have been\n                    banned or have requested their comics not be published here:\n                  </p>\n                  <ul>\n                    {similarArtists.similarBannedArtists.map(name => (\n                      <li key={name}>{name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </InfoBox>\n          )}\n\n          <Checkbox\n            label=\"This is not one of the above artists\"\n            checked={hasConfirmedNewArtist}\n            onChange={setHasConfirmedNewArtist}\n            className=\"mt-2\"\n          />\n        </>\n      )}\n\n      <h4 className=\"mt-8\">E621 and Patreon</h4>\n\n      {!newArtistData.hasConfirmedNoE621Name && (\n        <TextInput\n          label=\"E621 name\"\n          name=\"e621Name\"\n          value={newArtistData.e621Name}\n          onChange={newVal => updateArtist({ ...newArtistData, e621Name: newVal })}\n          className=\"mt-2\"\n          helperText=\"Only the name - not the full link\"\n          placeholder='e.g. \"braeburned\"'\n          disabled={newArtistData.hasConfirmedNoE621Name}\n        />\n      )}\n\n      <Checkbox\n        label=\"Artist is not on e621 (this is unlikely!)\"\n        checked={!!newArtistData.hasConfirmedNoE621Name}\n        onChange={newVal => {\n          const newArtist = { ...newArtistData, hasConfirmedNoE621Name: newVal };\n          if (newVal) {\n            newArtist.e621Name = '';\n          }\n          updateArtist(newArtist);\n        }}\n        className=\"mt-2\"\n      />\n\n      {!newArtistData.hasConfirmedNoPatreonName && (\n        <TextInput\n          label=\"Patreon name\"\n          name=\"patreonName\"\n          value={newArtistData.patreonName}\n          onChange={newVal => updateArtist({ ...newArtistData, patreonName: newVal })}\n          className=\"mt-6\"\n          helperText=\"Only the name - not the full link\"\n          placeholder='e.g. \"braeburned\"'\n          disabled={newArtistData.hasConfirmedNoPatreonName}\n        />\n      )}\n\n      <Checkbox\n        label=\"Artist is not on Patreon\"\n        checked={!!newArtistData.hasConfirmedNoPatreonName}\n        onChange={newVal => {\n          const newArtist = { ...newArtistData, hasConfirmedNoPatreonName: newVal };\n          if (newVal) {\n            newArtist.patreonName = '';\n          }\n          updateArtist(newArtist);\n        }}\n        className=\"mt-2\"\n      />\n\n      <h4 className=\"mt-8\">Other links</h4>\n      {!hideBorderTitle && (\n        <p className=\"mb-4\">\n          It's important to be on good terms with artists. Links to their profiles are\n          vital. If you do not provide any links, or vastly insufficient ones, the comic\n          might be rejected. Any website links go below here. Examples: Twitter,\n          FurAffinity, Inkbunny, personal websites, etc. Full URLs.\n        </p>\n      )}\n\n      <p>\n        Tips for finding good links: Check FurAffinity, and check the e621 artist page, by\n        clicking the \u201C?\u201D next to the artist's name in the top left of any post tagged by\n        them, as illustrated in the picture below. If you cannot find any other sites,\n        make one last attempt by Googling \"furry &lt;artist name&gt;\"\".\n      </p>\n\n      <p>!!!!e621 pic here!!!!</p>\n\n      <div className=\"flex flex-col gap-2 mt-4\">\n        {!noLinks && (\n          <>\n            {newArtistData.links.map((link, i) => {\n              const isLastLink = i === newArtistData.links.length - 1;\n              return (\n                <div\n                  className={`flex flex-row -mt-1 items-end ${isLastLink ? 'mr-10' : ''}`}\n                  key={i}\n                >\n                  <TextInput\n                    key={i}\n                    label={`Link:`}\n                    name={`otherLink${i}`}\n                    value={link}\n                    placeholder=\"e.g. https://twitter.com/braeburned\"\n                    onChange={newVal => {\n                      const newLinks = [...newArtistData.links];\n                      newLinks[i] = newVal;\n                      updateArtist({ ...newArtistData, links: newLinks });\n                    }}\n                    className=\"mt-2 grow\"\n                    disabled={noLinks}\n                  />\n\n                  {!isLastLink && (\n                    <IconButton\n                      className=\"ml-2 mt-4\"\n                      color=\"primary\"\n                      variant=\"naked\"\n                      icon={MdDelete}\n                      onClick={() => {\n                        const newLinks = [...newArtistData.links];\n                        newLinks.splice(i, 1);\n                        updateArtist({ ...newArtistData, links: newLinks });\n                      }}\n                    />\n                  )}\n                </div>\n              );\n            })}\n\n            {isLinksError && (\n              <InfoBox\n                variant=\"error\"\n                className=\"mt-2 w-fit\"\n                text='Links must include \"http://\" or \"https://\"'\n                showIcon\n              />\n            )}\n          </>\n        )}\n\n        {newArtistData.links.every(l => l.length === 0) && (\n          <Checkbox\n            label=\"Artist has no links (unlikely!)\"\n            checked={noLinks}\n            onChange={setNoLinks}\n            className=\"mt-2\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { useEffect, useMemo, useRef, useState } from 'react';\nimport { RiCloseLine } from 'react-icons/ri';\n\nexport type BaseMultiSelectProps<T> = {\n  options: { text: string; value: T }[];\n  equalSingleItemValueFunc?: (a: T, b: T | undefined) => boolean;\n  title?: string;\n  maxWidth?: number;\n  initialWidth?: number;\n  name: string;\n  placeholder?: string;\n  className?: string;\n};\n\ntype FullMultiSelectProps<T> = {\n  onChange: (value: T[]) => void;\n  value?: T[];\n} & BaseMultiSelectProps<T>;\n\nexport default function MultiSelect<T>({\n  options,\n  title = '',\n  value,\n  onChange,\n  equalSingleItemValueFunc,\n  maxWidth = 999999,\n  initialWidth = 0, // TODO needed?\n  name,\n  placeholder = '',\n  className = '',\n  ...props\n}: FullMultiSelectProps<T>) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [minWidth, setMinWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const selectItemContainerRef = useRef<HTMLDivElement>(null);\n  const [currentlyHighlightedIndex, setCurrentlyHighlightedIndex] = useState(-1);\n\n  useEffect(() => {\n    tryComputeWidth();\n  }, []);\n\n  useEffect(() => {\n    if (searchText && !isOpen) {\n      setIsOpen(true);\n    }\n    setCurrentlyHighlightedIndex(-1);\n  }, [searchText]);\n\n  const availableOptions = useMemo(() => {\n    if (!value && !searchText) {\n      return options;\n    }\n\n    return options.filter(option => {\n      let isValidOption = true;\n      if (searchText) {\n        isValidOption = option.text.toLowerCase().includes(searchText.toLowerCase());\n      }\n\n      if (value) {\n        if (equalSingleItemValueFunc) {\n          isValidOption =\n            isValidOption &&\n            !value.find(val => equalSingleItemValueFunc(option.value, val));\n        } else {\n          isValidOption = isValidOption && !value.find(val => val === option.value);\n        }\n      }\n\n      return isValidOption;\n    });\n  }, [options, value, searchText]);\n\n  async function tryComputeWidth() {\n    let isFinished = false;\n    while (!isFinished) {\n      await waitMillisec(25);\n      isFinished = computeWidth();\n    }\n  }\n\n  function computeWidth() {\n    let container = selectItemContainerRef.current;\n    if (container && container.children.length > 0) {\n      let maxChildWidth = 0;\n      for (let child of container.children) {\n        if (child.clientWidth > maxChildWidth) {\n          maxChildWidth = child.clientWidth;\n        }\n      }\n\n      if (minWidth > (maxWidth as number)) {\n        setWidth(maxWidth as number);\n      } else {\n        setMinWidth(maxChildWidth);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const minWidthStyle = useMemo(() => {\n    if (width) {\n      return {};\n    }\n    if (minWidth) {\n      return { minWidth: `${minWidth + 16}px` };\n    } else if (initialWidth) {\n      return { minWidth: `${initialWidth + 16}px` };\n    }\n    return {};\n  }, [initialWidth, minWidth, width]);\n\n  const widthStyle = useMemo(() => {\n    return { width: '100%' }; // TODO\n    if (width) {\n      return { width: `${width}px` };\n    }\n    return {};\n  }, [width]);\n\n  async function waitMillisec(millisec: number) {\n    return new Promise<void>(resolve => {\n      setTimeout(() => resolve(), millisec);\n    });\n  }\n\n  function onSelected(clickedValue: T) {\n    let newValues = [...(value ?? []), clickedValue];\n    onChange(newValues);\n    clearAndCloseSearch();\n  }\n\n  function onDeselected(clickedValue: T) {\n    let newValues = (value ?? []).filter(val => val !== clickedValue);\n    onChange(newValues);\n  }\n\n  function getTextFromValue(value: T) {\n    if (equalSingleItemValueFunc) {\n      return options.find(option => equalSingleItemValueFunc(option.value, value))?.text;\n    }\n    return options.find(option => option.value === value)?.text;\n  }\n\n  function removeAllSelected() {\n    onChange([]);\n    setHighlightedIndex(-1);\n  }\n\n  function clearAndCloseSearch({ avoidIfHighlighted = false } = {}) {\n    if (avoidIfHighlighted && currentlyHighlightedIndex !== -1) {\n      return;\n    }\n    setSearchText('');\n    setIsOpen(false);\n    setHighlightedIndex(-1);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    if (event.key === 'Enter') {\n      if (currentlyHighlightedIndex !== -1 && availableOptions.length > 0) {\n        onSelected(availableOptions[currentlyHighlightedIndex].value);\n      } else if (\n        currentlyHighlightedIndex === -1 &&\n        availableOptions.length > 0 &&\n        isOpen\n      ) {\n        onSelected(availableOptions[0].value);\n      }\n    } else if (event.key === 'ArrowDown') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(0);\n      } else if (currentlyHighlightedIndex === availableOptions.length - 1) {\n        setHighlightedIndex(0);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex + 1);\n      }\n    } else if (event.key === 'ArrowUp') {\n      if (!isOpen) {\n        setIsOpen(true);\n        setHighlightedIndex(availableOptions.length - 1);\n      } else if (currentlyHighlightedIndex === 0 || currentlyHighlightedIndex === -1) {\n        setHighlightedIndex(availableOptions.length - 1);\n      } else {\n        setHighlightedIndex(currentlyHighlightedIndex - 1);\n      }\n    } else if (event.key === 'Escape') {\n      clearAndCloseSearch();\n    }\n  }\n\n  function setHighlightedIndex(indexNum: number) {\n    if (indexNum !== -1 && selectItemContainerRef.current) {\n      let option = selectItemContainerRef.current.children[indexNum];\n      if (option) {\n        (option as HTMLElement).scrollIntoView({ block: 'nearest', inline: 'start' });\n      }\n    }\n\n    setCurrentlyHighlightedIndex(indexNum);\n  }\n\n  const inputClassname = `text-text-light dark:text-text-dark bg-transparent  px-2 after:absolute\n    after:content-[''] after:bottom-2.5 after:w-0 after:h-0 after:border-5 after:border-transparent\n    after:border-t-text-light dark:after:border-t-text-dark after:right-3\n    placeholder-gray-800 dark:placeholder-gray-700 w-fit min-w-8 flex-grow outline-none`;\n\n  const borderClassname = `border border-0 border-theme1-primary border-b-2\n    disabled:border-gray-800 dark:disabled:border-gray-600`;\n\n  return (\n    <div\n      onKeyDown={onKeyDown}\n      className={`hover:cursor-pointer focus:bg-theme1-primaryTrans\n        relative w-fit h-fit min-h-9 outline-none leading-9 pt-5 box-content ${className} ${borderClassname}`}\n      style={{\n        ...minWidthStyle,\n        ...widthStyle,\n      }}\n      {...props}\n    >\n      {title && <label className=\"absolute text-sm top-0 left-2\">{title}</label>}\n\n      <div className=\"flex flex-row gap-1 flex-wrap pr-8\">\n        {value !== undefined && (\n          <>\n            {value.map(singleVal => (\n              <div\n                className=\"px-2 bg-theme1-primaryTrans h-fit rounded hover:bg-theme1-primaryLessTrans hover:line-through\"\n                onClick={() => onDeselected(singleVal)}\n                key={JSON.stringify(singleVal)}\n              >\n                <p className=\"\">{getTextFromValue(singleVal)}</p>\n              </div>\n            ))}\n          </>\n        )}\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={searchText || ''}\n          name={name}\n          onChange={e => setSearchText(e.target.value)}\n          onFocus={() => setIsOpen(true)}\n          onClick={() => setIsOpen(true)}\n          className={inputClassname}\n          placeholder={placeholder}\n          onBlur={() => clearAndCloseSearch({ avoidIfHighlighted: true })}\n        />\n      </div>\n\n      {/* CLEAR CROSS ICON */}\n      {value && (\n        <span\n          className=\"absolute right-2 top-4 hover:cursor-pointer\"\n          onClick={removeAllSelected}\n        >\n          <RiCloseLine />\n        </span>\n      )}\n\n      {/* OPTIONS */}\n      <div\n        className={`${\n          isOpen ? '' : 'invisible'\n        } overflow-hidden shadow-lg w-fit min-w-full absolute bg-white dark:bg-gray-400 left-0 right-0 z-40 max-h-80 overflow-y-auto`}\n        ref={selectItemContainerRef}\n      >\n        {availableOptions.map(({ text, value: optionValue }, index) => (\n          <div\n            key={text}\n            onClick={() => onSelected(optionValue)}\n            onMouseEnter={() => setHighlightedIndex(index)}\n            onMouseLeave={() => setHighlightedIndex(-1)}\n            className={`z-40 hover:cursor-pointer px-3 whitespace-nowrap \n              ${\n                currentlyHighlightedIndex === index\n                  ? 'bg-gradient-to-r from-theme1-primary to-theme2-primary text-text-light '\n                  : ''\n              }}\n            `}\n          >\n            <p>{text}</p>\n          </div>\n        ))}\n        {options.length === 0 && (\n          <div\n            className=\"z-40 px-3 whitespace-nowrap text-gray-700 hover:cursor-default\"\n            onClick={() => onSelected(null)}\n          >\n            No results\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import MultiSelect from '~/components/MultiSelect/MultiSelect';\nimport { Tag } from '~/types/types';\nimport { NewComicData } from '../../routes/contribute/upload';\n\ntype TagsEditorProps = {\n  allTags: Tag[];\n  comicData: NewComicData;\n  onUpdate: (newData: NewComicData) => void;\n  className?: string;\n};\n\nexport default function TagsEditor({\n  allTags,\n  comicData,\n  onUpdate,\n  className = '',\n}: TagsEditorProps) {\n  const tagOptions = allTags.map(tag => ({ value: tag, text: tag.name }));\n\n  return (\n    <div className={className}>\n      <h4>Tags</h4>\n\n      <MultiSelect\n        name=\"tags\"\n        title=\"Tags\"\n        options={tagOptions}\n        value={comicData.tags}\n        onChange={newTags => onUpdate({ ...comicData, tags: newTags })}\n        equalSingleItemValueFunc={(a, b) => a.id === b?.id}\n      />\n    </div>\n  );\n}\n", "import { ActionFunctionArgs } from '@remix-run/cloudflare';\nimport { queryDb } from '~/utils/database-facade';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport {\n  ApiError,\n  create400Json,\n  createSuccessJson,\n  makeDbErr,\n  noGetRoute,\n  processApiError,\n} from '~/utils/request-helpers';\n\nexport { noGetRoute as loader };\n\nexport async function action(args: ActionFunctionArgs) {\n  await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n\n  const formDataBody = await args.request.formData();\n\n  const formComicId = formDataBody.get('comicId');\n  if (!formComicId) return create400Json('Missing comicId');\n\n  const err = await relistComic(urlBase, parseInt(formComicId.toString()));\n  if (err) {\n    return processApiError('Error relisting comic', err);\n  }\n  return createSuccessJson();\n}\n\nexport async function relistComic(\n  urlBase: string,\n  comicId: number\n): Promise<ApiError | undefined> {\n  const comicQuery = `UPDATE comic SET publishStatus = 'published' WHERE id = ?`;\n  const metadataQuery = 'UPDATE comicmetadata SET unlistComment = NULL WHERE comicId = ?';\n\n  const [comicDbRes, metadataDbRes] = await Promise.all([\n    queryDb(urlBase, comicQuery, [comicId]),\n    queryDb(urlBase, metadataQuery, [comicId]),\n  ]);\n\n  if (comicDbRes.isError) {\n    return makeDbErr(comicDbRes, 'Could not update comic table', {\n      comicId,\n    });\n  }\n  if (metadataDbRes.isError) {\n    return makeDbErr(comicDbRes, 'Could not update metadata table', {\n      comicId,\n    });\n  }\n}\n", "import { ActionArgs } from '@remix-run/cloudflare';\nimport { create500Json, createSuccessJson } from '~/utils/request-helpers';\n\nexport async function action(args: ActionArgs) {\n  const bucket = args.context.COMICS_BUCKET;\n  const body = await args.request.formData();\n  const comicName = body.get('comicName');\n  const allFiles = body.getAll('files');\n\n  // TODO: For some reason, on server, they come as Blob, not File.\n  // This means they don't have the 'name' attribute.\n  // However, it SEEMS that so far, thumbnail comes first, and then\n  // the rest of the pages in order...\n  try {\n    const filePutPromises = allFiles.map(async (blob, i) => {\n      if (blob instanceof File) {\n        const fileContents = await blob.arrayBuffer();\n        return bucket.put(`${comicName}/${blob.name}`, fileContents);\n      }\n\n      const filename = i === 0 ? 'thumbnail.jpg' : `${i.toString().padStart(3, '0')}.jpg`;\n      // const fileContents = await file.arrayBuffer();\n      // return bucket.put(`${comicName}/${filename}`, fileContents);\n\n      const realBlob = new Blob([blob], { type: 'image/jpeg' });\n      const arrayBuffer = await realBlob.arrayBuffer();\n      return bucket.put(`${comicName}/${filename}`, arrayBuffer);\n\n      // blob is of type string, which is the image. Not the url.\n      // return bucket.put(`${comicName}/${filename}`, arrayBuffer);\n      // return bucket.put(`${comicName}/${filename}`, arrayBuffer);\n    });\n\n    await Promise.all(filePutPromises);\n  } catch (e: any) {\n    console.error(e);\n    return create500Json(\n      `Files length: ${allFiles.length}.\\n First file type: ${\n        allFiles[0].constructor.name\n      }. Or ${typeof allFiles[0]}. \\n` +\n        'Error uploading files: ' +\n        e.message\n    );\n  }\n\n  return createSuccessJson();\n}\n", "import { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/cloudflare';\nimport { isTheme } from '../../utils/theme-provider';\nimport { getThemeSession } from '../../utils/theme.server';\n\n// By not returning any default component, Remix will use it as a resource route.\n\nexport const action: ActionFunction = async function ({ request }) {\n  const themeSession = await getThemeSession(request);\n  const requestText = await request.text();\n  const form = new URLSearchParams(requestText);\n  const theme = form.get('theme');\n\n  if (!isTheme(theme)) {\n    return json({\n      success: false,\n      message: `Theme value ${theme} is not valid`,\n    });\n  }\n\n  themeSession.setTheme(theme);\n  return json(\n    {\n      success: true,\n    },\n    {\n      headers: {\n        'Set-Cookie': await themeSession.commit(),\n      },\n    }\n  );\n};\n\nexport const loader: LoaderFunction = async function ({ request }) {\n  return redirect('/');\n};\n", "import { useState } from 'react';\nimport { MdOpenInNew } from 'react-icons/md';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Chip from '~/components/Chip';\nimport Link from '~/components/Link';\nimport { DashboardAction } from '~/routes/api/admin/dashboard-data';\nimport { useTheme } from '~/utils/theme-provider';\n\ntype PendingComicProblemProps = {\n  action: DashboardAction;\n  isLoading: boolean;\n  onAssignMe: (action: DashboardAction) => void;\n  onUnassignMe: (action: DashboardAction) => void;\n  loadingAction?: string;\n  isAssignedToOther?: boolean;\n  isAssignedToMe?: boolean;\n  innerContainerClassName: string;\n};\n\nexport function PendingComicProblem({\n  action,\n  isLoading,\n  onAssignMe,\n  onUnassignMe,\n  loadingAction,\n  isAssignedToOther,\n  isAssignedToMe,\n  innerContainerClassName,\n}: PendingComicProblemProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [theme] = useTheme();\n  const themedColor = theme === 'light' ? '#65bf70' : '#268f33';\n\n  return (\n    <div\n      className={`flex flex-col w-full gap-2 ${\n        action.isProcessed ? 'cursor-pointer' : ''\n      }`}\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      <div className={innerContainerClassName}>\n        <div className=\"flex flex-col justify-between gap-2\">\n          <Chip color={themedColor} text=\"Pending problem\" />\n          <div className=\"flex flex-col md:flex-row gap-x-12 gap-y-1\">\n            <Link\n              href={`/admin/comics/${action.comicId}`}\n              text={action.primaryField}\n              IconRight={MdOpenInNew}\n              newTab\n            />\n            <p>{action.secondaryField}</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col md:items-end justify-between gap-2 flex-shrink-0\">\n          <p className=\"text-sm\"></p>\n\n          {isAssignedToOther && (\n            <p>\n              <i>Assigned to: {action.assignedMod!.username}</i>\n            </p>\n          )}\n\n          <div className=\"flex flex-row gap-2 self-end\">\n            {isAssignedToMe && (\n              <LoadingButton\n                color=\"error\"\n                onClick={() => onUnassignMe(action)}\n                text=\"Unassign from me\"\n                isLoading={isLoading && loadingAction === 'unassign'}\n              />\n            )}\n            {!action.isProcessed && !action.assignedMod && (\n              <LoadingButton\n                color=\"primary\"\n                onClick={() => onAssignMe(action)}\n                text=\"I'm on it\"\n                isLoading={isLoading && loadingAction === 'assign'}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "type ChipProps = {\n  text: string;\n  color: string;\n  className?: string;\n};\n\nexport default function Chip({ text, color, className = '' }: ChipProps) {\n  return (\n    <div\n      className={`w-fit px-2 rounded-xl whitespace-nowrap ${className}`}\n      style={{ backgroundColor: color, paddingTop: '2px', paddingBottom: '2px' }}\n    >\n      <p className=\"text-sm text-white\">{text}</p>\n    </div>\n  );\n}\n", "import { Form } from '@remix-run/react';\nimport { useState } from 'react';\nimport { IoCaretDown, IoCaretUp } from 'react-icons/io5';\nimport Button from '~/components/Buttons/Button';\nimport DropdownButton from '~/components/Buttons/DropdownButton';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Chip from '~/components/Chip';\nimport TextInput from '~/components/TextInput/TextInput';\nimport { DashboardAction } from '~/routes/api/admin/dashboard-data';\nimport { ComicSuggestionVerdict } from '~/types/types';\nimport { useTheme } from '~/utils/theme-provider';\nimport { getTimeAgo } from '.';\n\ntype ComicSuggestionProps = {\n  action: DashboardAction;\n  isLoading: boolean;\n  onAssignMe: (action: DashboardAction) => void;\n  onUnassignMe: (action: DashboardAction) => void;\n  onProcessed: (\n    action: DashboardAction,\n    isApproved: boolean,\n    verdict?: ComicSuggestionVerdict,\n    modComment?: string\n  ) => void;\n  loadingAction?: string;\n  isAssignedToOther?: boolean;\n  isAssignedToMe?: boolean;\n  innerContainerClassName: string;\n};\n\nexport function ComicSuggestion({\n  action,\n  isLoading,\n  onAssignMe,\n  onUnassignMe,\n  onProcessed,\n  loadingAction,\n  isAssignedToOther,\n  isAssignedToMe,\n  innerContainerClassName,\n}: ComicSuggestionProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isRejectingWithComment, setIsRejectingWithComment] = useState(false);\n  const [rejectComment, setRejectComment] = useState('');\n  const [theme] = useTheme();\n  const themedColor = theme === 'light' ? '#db72ab' : '#c54b8d';\n\n  const isChooseActionButtonLoading =\n    isLoading &&\n    !!loadingAction &&\n    ['unassign', 'process-upload'].includes(loadingAction);\n\n  function onInitiateRejectComment() {\n    if (!isOpen) setIsOpen(true);\n    setIsRejectingWithComment(true);\n    setRejectComment('');\n  }\n\n  function finishRejectWithComment() {\n    onProcessed(action, false, undefined, rejectComment);\n  }\n\n  // Close after submission\n  if (loadingAction === 'process-upload' && !isLoading && isRejectingWithComment) {\n    setIsRejectingWithComment(false);\n  }\n\n  return (\n    <div\n      className=\"flex flex-col w-full gap-2 cursor-pointer\"\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      <div className={innerContainerClassName}>\n        <div className=\"flex flex-col justify-between gap-2\">\n          <Chip color={themedColor} text=\"Comic suggestion\" />\n          <p>\n            <b>{action.primaryField}</b>\n          </p>\n        </div>\n\n        <div className=\"flex flex-col md:items-end justify-between gap-2 flex-shrink-0\">\n          <p className=\"text-sm\">\n            {action.user.username || action.user.ip}\n            {' - '}\n            {getTimeAgo(action.timestamp)}\n          </p>\n\n          {action.isProcessed && (\n            <p>\n              <i>Completed by: {action.assignedMod?.username}</i>\n            </p>\n          )}\n          {isAssignedToOther && (\n            <p>\n              <i>Assigned to: {action.assignedMod!.username}</i>\n            </p>\n          )}\n\n          <div className=\"flex flex-row gap-2 self-end\">\n            {isAssignedToMe && (\n              <DropdownButton\n                text=\"Choose action\"\n                color=\"primary\"\n                isLoading={isChooseActionButtonLoading}\n                options={[\n                  {\n                    text: 'Unassign from me',\n                    onClick: () => onUnassignMe(action),\n                  },\n                  {\n                    text: 'Reject with comment',\n                    onClick: onInitiateRejectComment,\n                  },\n                  {\n                    text: 'Reject as spam/dupl.',\n                    onClick: () => onProcessed(action, false),\n                  },\n                  {\n                    text: 'Completed - excellent info',\n                    onClick: () => onProcessed(action, true, 'good'),\n                  },\n                  {\n                    text: 'Completed - lacking info',\n                    onClick: () => onProcessed(action, true, 'bad'),\n                  },\n                ]}\n              />\n            )}\n            {!action.isProcessed && !action.assignedMod && (\n              <LoadingButton\n                color=\"primary\"\n                onClick={e => {\n                  e.stopPropagation();\n                  onAssignMe(action);\n                }}\n                text=\"I'm on it\"\n                isLoading={isLoading && loadingAction === 'assign'}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isOpen ? (\n        <>\n          <p\n            className=\"whitespace-pre-wrap cursor-auto\"\n            onClick={e => e.stopPropagation()}\n          >\n            {action.description}\n          </p>\n\n          {isRejectingWithComment && (\n            <div className=\"mt-4 mb-2 cursor-auto\" onClick={e => e.stopPropagation()}>\n              <p>\n                <b>Reject with comment</b>\n              </p>\n              <p>\n                This comment will be visible to the user. Keep it short and grammatically\n                correct!\n              </p>\n              <Form>\n                <TextInput\n                  value={rejectComment}\n                  onChange={setRejectComment}\n                  placeholder={`E.g. \"quality too low\" or \"paywalled content\"`}\n                  label=\"Comment\"\n                  name=\"comment\"\n                  className=\"mt-2 mb-2\"\n                />\n                <div className=\"flex flex-row flex-wrap gap-2\">\n                  <LoadingButton\n                    color=\"primary\"\n                    onClick={finishRejectWithComment}\n                    disabled={!rejectComment}\n                    text=\"Reject suggestion\"\n                    isSubmit\n                    isLoading={isLoading && loadingAction === 'process-upload'}\n                  />\n                  <Button\n                    color=\"error\"\n                    variant=\"outlined\"\n                    onClick={() => setIsRejectingWithComment(false)}\n                    text=\"Cancel\"\n                  />\n                </div>\n              </Form>\n            </div>\n          )}\n\n          {action.isProcessed && (\n            <p>\n              <b>Verdict: {action.verdict}</b>\n            </p>\n          )}\n\n          <IoCaretUp className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n        </>\n      ) : (\n        <IoCaretDown className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n      )}\n    </div>\n  );\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { IoCaretDown } from 'react-icons/io5';\nimport { waitMillisec } from '~/utils/general';\nimport Button, { ButtonProps } from './Button';\n\ntype DropdownButtonProps = {\n  options: { text: string; onClick: () => void }[];\n  isLoading?: boolean;\n  text: string;\n} & Omit<ButtonProps, 'onClick' | 'endIcon'>;\n\nexport default function DropdownButton({\n  options,\n  isLoading,\n  text,\n  ...props\n}: DropdownButtonProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentlyHighlightedIndex, setCurrentlyHighlightedIndex] = useState(-1);\n  const [width, setWidth] = useState<number>();\n  const [areChildrenWider, setAreChildrenWider] = useState(false);\n  const itemsContainerRef = useRef<HTMLDivElement>(null);\n  const mainButtonRef = useRef<HTMLButtonElement>(null);\n  const closeTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    tryComputeWidth();\n  }, []);\n\n  useEffect(() => {\n    setCurrentlyHighlightedIndex(-1);\n  }, [isOpen]);\n\n  function closeSoonIfOpen() {\n    closeTimeout.current = setTimeout(() => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    }, 300);\n  }\n\n  function cancelCloseTimeout() {\n    if (closeTimeout.current) {\n      clearTimeout(closeTimeout.current);\n    }\n  }\n\n  function onKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Tab' || e.key === 'Escape') {\n      setIsOpen(false);\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setCurrentlyHighlightedIndex(\n        currentlyHighlightedIndex === options.length - 1\n          ? 0\n          : currentlyHighlightedIndex + 1\n      );\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      setCurrentlyHighlightedIndex(\n        currentlyHighlightedIndex === 0 || currentlyHighlightedIndex === -1\n          ? options.length - 1\n          : currentlyHighlightedIndex - 1\n      );\n    } else if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      if (!isOpen) {\n        setIsOpen(true);\n        return;\n      }\n      if (currentlyHighlightedIndex === -1) {\n        setIsOpen(false);\n      } else {\n        options[currentlyHighlightedIndex].onClick();\n        setIsOpen(false);\n      }\n    }\n  }\n\n  // To make sure button and children have the same width\n  async function tryComputeWidth() {\n    let isFinished = false;\n    while (!isFinished) {\n      await waitMillisec(25);\n      isFinished = computeWidth();\n    }\n  }\n\n  function computeWidth() {\n    const container = itemsContainerRef.current;\n    const button = mainButtonRef.current;\n    if (container && button && container.children.length > 0) {\n      let maxChildWidth = 0;\n      for (let child of container.children) {\n        if (child.clientWidth > maxChildWidth) {\n          maxChildWidth = child.clientWidth;\n        }\n      }\n      const buttonWidth = button.clientWidth;\n      const areChildrenWider = maxChildWidth > buttonWidth;\n      setAreChildrenWider(areChildrenWider);\n      setWidth(Math.max(maxChildWidth, buttonWidth));\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const buttonStyle = width && areChildrenWider ? { width } : {};\n\n  return (\n    <div className=\"relative inline-block text-left\" onKeyDown={onKeyDown}>\n      <Button\n        {...props}\n        text={text}\n        endIcon={isLoading ? Spinner : IoCaretDown}\n        onClick={e => {\n          if (isLoading) return;\n          setIsOpen(isOpenCurrently => !isOpenCurrently);\n          e.stopPropagation();\n        }}\n        onMouseLeave={closeSoonIfOpen}\n        onMouseEnter={cancelCloseTimeout}\n        style={{ ...buttonStyle, ...props.style }}\n        buttonRef={mainButtonRef}\n        onBlur={() => {\n          if (currentlyHighlightedIndex === -1) {\n            setTimeout(() => setIsOpen(false), 50);\n          }\n        }}\n        className={isLoading ? 'opacity-70' : ''}\n      />\n      <div\n        className={`\n          origin-top-right absolute left-0 shadow-lg bg-white dark:bg-gray-400 focus:outline-none rounded overflow-hidden\n          ${isOpen ? '' : 'invisible'}`}\n        onMouseLeave={closeSoonIfOpen}\n        onMouseEnter={cancelCloseTimeout}\n      >\n        <div\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          aria-labelledby=\"options-menu\"\n          ref={itemsContainerRef}\n        >\n          {options.map((option, index) => (\n            <div\n              key={index}\n              className={`\n                  block w-full text-left px-4 py-2 text-sm cursor-pointer whitespace-nowrap\n                  font-semibold text-blue-weak-100 dark:text-text-dark\n                  ${\n                    index === currentlyHighlightedIndex\n                      ? 'bg-blue-trans dark:bg-gray-600 '\n                      : ''\n                  }\n                `}\n              role=\"menuitem\"\n              onMouseEnter={() => setCurrentlyHighlightedIndex(index)}\n              onMouseLeave={() => setCurrentlyHighlightedIndex(-1)}\n              onClick={e => {\n                e.stopPropagation();\n                option.onClick();\n                setIsOpen(false);\n              }}\n              style={width ? { width } : {}}\n            >\n              {option.text}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Spinner = () => (\n  <div className=\"ml-2 w-4 h-4 animate-spin border-solid border-transparent border-r-white border rounded-full\" />\n);\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport { ProcessTagSuggestionBody } from '~/routes/api/admin/process-tag-suggestion';\nimport { useMemo, useState } from 'react';\nimport { AssignActionBody } from '~/routes/api/admin/assign-action';\nimport { UnAssignActionBody } from '~/routes/api/admin/unassign-action';\nimport { ProcessComicProblemBody } from '~/routes/api/admin/process-comic-problem';\nimport { ProcessComicSuggestionBody } from '~/routes/api/admin/process-comic-suggestion';\nimport { ComicSuggestionVerdict } from '~/types/types';\nimport { DashboardAction, DashboardActionType } from '~/routes/api/admin/dashboard-data';\nimport { formatDistanceToNow } from 'date-fns';\nimport { TagSuggestion, TagSuggestionAction } from './TagSuggestion';\nimport { ComicUpload } from './ComicUpload';\nimport { ComicSuggestion } from './ComicSuggestion';\nimport Checkbox from '~/components/Checkbox/Checkbox';\nimport Button from '~/components/Buttons/Button';\nimport { ComicProblem } from './ComicProblem';\nimport { PendingComicProblem } from './PendingComicProblem';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport { ErrorBoundary } from '../../error';\n\nconst allActionTypes: DashboardActionType[] = [\n  'tagSuggestion',\n  'comicUpload',\n  'comicSuggestion',\n  'comicProblem',\n  'pendingComicProblem',\n];\n\nconst actionTypeToLabel: Record<DashboardActionType, string> = {\n  tagSuggestion: 'Tag suggestions',\n  comicUpload: 'Comic uploads',\n  comicSuggestion: 'Comic suggestions',\n  comicProblem: 'Comic problems',\n  pendingComicProblem: 'Pending problems',\n};\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  return { user };\n}\n\nexport default function Dashboard({}) {\n  const { user } = useLoaderData<typeof loader>();\n  // TODO: The two below are for showing loading states on the buttons.\n  // The first to check the element and the 2nd to check which button was\n  // actually pressed (approve or reject for example)\n  const [latestSubmittedId, setLatestSubmittedId] = useState<number>();\n  const [latestSubmittedAction, setLatestSubmittedAction] = useState<string>();\n  const [showMobileFilters, setShowMobileFilters] = useState(false);\n\n  const [showOthersTasks, setShowOthersTasks] = useState(false);\n  const [showCompleted, setShowCompleted] = useState(false);\n  const [typeFilter, setTypeFilter] = useState<DashboardActionType[]>([\n    ...allActionTypes,\n  ]);\n\n  const dashboardDataFetcher = useGoodFetcher<DashboardAction[]>({\n    url: '/api/admin/dashboard-data',\n    fetchGetOnLoad: true,\n  });\n  const processTagFetcher = useGoodFetcher({\n    url: '/api/admin/process-tag-suggestion',\n    method: 'post',\n    toastSuccessMessage: 'Tag suggestion processed',\n  });\n  const assignModFetcher = useGoodFetcher({\n    url: '/api/admin/assign-action',\n    method: 'post',\n  });\n  const unassignModFetcher = useGoodFetcher({\n    url: '/api/admin/unassign-action',\n    method: 'post',\n  });\n  const problemFetcher = useGoodFetcher({\n    url: '/api/admin/process-comic-problem',\n    method: 'post',\n    toastSuccessMessage: 'Problem processed',\n  });\n  const comicSuggestionFetcher = useGoodFetcher({\n    url: '/api/admin/process-comic-suggestion',\n    method: 'post',\n    toastSuccessMessage: 'Comic suggestion processed',\n  });\n\n  const allDashboardItems = dashboardDataFetcher.data || [];\n\n  const filteredDashboardItems = useMemo(() => {\n    return allDashboardItems.filter(action => {\n      if (\n        action.assignedMod &&\n        action.assignedMod.userId !== user.userId &&\n        !showOthersTasks\n      ) {\n        return false;\n      }\n      if (action.isProcessed && !showCompleted) return false;\n      if (!typeFilter.includes(action.type)) return false;\n\n      return true;\n    });\n  }, [allDashboardItems, showOthersTasks, showCompleted, typeFilter]);\n\n  async function processTagSuggestion(action: TagSuggestionAction, isApproved: boolean) {\n    const body: ProcessTagSuggestionBody = {\n      isApproved,\n      actionId: action.id,\n      isAdding: action.isAdding,\n      comicId: action.comicId!,\n      tagId: action.tagId,\n      suggestingUserId: action.user.userId,\n    };\n\n    setLatestSubmittedId(action.id);\n    setLatestSubmittedAction(isApproved ? 'approve-tag' : 'reject-tag');\n    processTagFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  function assignActionToMod(action: DashboardAction) {\n    const body: AssignActionBody = {\n      actionId: action.id,\n      modId: user.userId,\n      actionType: action.type,\n    };\n\n    setLatestSubmittedId(action.id);\n    setLatestSubmittedAction('assign');\n    assignModFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  function unassignActionFromMod(action: DashboardAction) {\n    const body: UnAssignActionBody = {\n      actionId: action.id,\n      actionType: action.type,\n    };\n\n    setLatestSubmittedId(action.id);\n    setLatestSubmittedAction('unassign');\n    unassignModFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  function processComicProblem(action: DashboardAction, isApproved: boolean) {\n    const body: ProcessComicProblemBody = {\n      isApproved,\n      actionId: action.id,\n      reportingUserId: action.user.userId,\n    };\n\n    setLatestSubmittedId(action.id);\n    setLatestSubmittedAction('process-problem');\n    problemFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  function processComicSuggestion(\n    action: DashboardAction,\n    isApproved: boolean,\n    verdict?: ComicSuggestionVerdict,\n    modComment?: string\n  ) {\n    const body: ProcessComicSuggestionBody = {\n      actionId: action.id,\n      isApproved,\n      verdict, // always if approved, otherwise none\n      modComment, // only potentially if rejected\n      suggestingUserId: action.user.userId,\n    };\n\n    setLatestSubmittedId(action.id);\n    setLatestSubmittedAction('process-upload');\n    comicSuggestionFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  return (\n    <>\n      <h1>Action dashboard</h1>\n\n      <Button\n        className={`md:hidden mb-3`}\n        onClick={() => setShowMobileFilters(!showMobileFilters)}\n        text={showMobileFilters ? 'Hide filters' : 'Show filters'}\n        variant=\"outlined\"\n      />\n\n      <div className={showMobileFilters ? '' : 'hidden md:block'}>\n        <div className=\"flex flex-row flex-wrap mb-3 md:mt-2 gap-x-8 gap-y-1\">\n          <Checkbox\n            label=\"Show others' tasks\"\n            checked={showOthersTasks}\n            onChange={() => setShowOthersTasks(!showOthersTasks)}\n          />\n\n          <Checkbox\n            label=\"Show completed\"\n            checked={showCompleted}\n            onChange={() => setShowCompleted(!showCompleted)}\n          />\n        </div>\n        <div className=\"flex flex-row flex-wrap mb-4 gap-x-8 gap-y-1\">\n          {allActionTypes.map(type => (\n            <Checkbox\n              key={type}\n              label={actionTypeToLabel[type]}\n              checked={typeFilter.includes(type as DashboardActionType)}\n              onChange={() => {\n                if (typeFilter.includes(type as DashboardActionType)) {\n                  setTypeFilter(typeFilter.filter(t => t !== type));\n                } else {\n                  setTypeFilter([...typeFilter, type as DashboardActionType]);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {allDashboardItems.length === 0 && !dashboardDataFetcher.hasFetchedOnce && (\n        <>\n          {Array(6)\n            .fill(0)\n            .map((_, i) => (\n              <div\n                className=\"w-full max-w-3xl h-20 mb-4 bg-gray-900 dark:bg-gray-300 rounded\"\n                key={i}\n              />\n            ))}\n        </>\n      )}\n\n      {filteredDashboardItems.map(action => {\n        const isAssignedToOther =\n          !action.isProcessed &&\n          action.assignedMod &&\n          action.assignedMod.userId !== user.userId;\n\n        const isAssignedToMe =\n          !action.isProcessed &&\n          action.assignedMod &&\n          action.assignedMod.userId === user.userId;\n\n        let assignationBgClass = 'bg-white dark:bg-gray-300 shadow-md';\n        if (isAssignedToOther || action.isProcessed) {\n          assignationBgClass = 'bg-gray-900 dark:bg-gray-250';\n        }\n        if (isAssignedToMe) {\n          assignationBgClass =\n            'bg-theme1-primaryLessTrans dark:bg-theme1-primaryTrans shadow-md';\n        }\n        const innerContainerClassName = `flex flex-col gap-2 md:flex-row justify-between`;\n\n        return (\n          <div\n            key={action.id}\n            className={`p-3 w-full mb-4 max-w-3xl rounded \n              ${assignationBgClass}\n            `}\n          >\n            {action.type === 'tagSuggestion' && (\n              <TagSuggestion\n                action={action as TagSuggestionAction}\n                onProcessSuggestion={processTagSuggestion}\n                loadingAction={latestSubmittedAction}\n                isLoading={latestSubmittedId === action.id && processTagFetcher.isLoading}\n                innerContainerClassName={innerContainerClassName}\n              />\n            )}\n\n            {action.type === 'comicUpload' && (\n              <ComicUpload\n                action={action}\n                onAssignMe={assignActionToMod}\n                onUnassignMe={unassignActionFromMod}\n                isLoading={\n                  latestSubmittedId === action.id &&\n                  (assignModFetcher.isLoading || unassignModFetcher.isLoading)\n                }\n                loadingAction={latestSubmittedAction}\n                isAssignedToOther={isAssignedToOther}\n                isAssignedToMe={isAssignedToMe}\n                innerContainerClassName={innerContainerClassName}\n              />\n            )}\n\n            {action.type === 'comicSuggestion' && (\n              <ComicSuggestion\n                action={action}\n                onAssignMe={assignActionToMod}\n                onUnassignMe={unassignActionFromMod}\n                onProcessed={processComicSuggestion}\n                isLoading={\n                  latestSubmittedId === action.id &&\n                  (assignModFetcher.isLoading ||\n                    unassignModFetcher.isLoading ||\n                    comicSuggestionFetcher.isLoading)\n                }\n                loadingAction={latestSubmittedAction}\n                isAssignedToOther={isAssignedToOther}\n                isAssignedToMe={isAssignedToMe}\n                innerContainerClassName={innerContainerClassName}\n              />\n            )}\n\n            {action.type === 'comicProblem' && (\n              <ComicProblem\n                action={action}\n                onAssignMe={assignActionToMod}\n                onUnassignMe={unassignActionFromMod}\n                onProcessed={processComicProblem}\n                isLoading={\n                  latestSubmittedId === action.id &&\n                  (assignModFetcher.isLoading ||\n                    unassignModFetcher.isLoading ||\n                    problemFetcher.isLoading)\n                }\n                loadingAction={latestSubmittedAction}\n                isAssignedToOther={isAssignedToOther}\n                isAssignedToMe={isAssignedToMe}\n                innerContainerClassName={innerContainerClassName}\n              />\n            )}\n\n            {action.type === 'pendingComicProblem' && (\n              <PendingComicProblem\n                action={action}\n                onAssignMe={assignActionToMod}\n                onUnassignMe={unassignActionFromMod}\n                isLoading={\n                  latestSubmittedId === action.id &&\n                  (assignModFetcher.isLoading || unassignModFetcher.isLoading)\n                }\n                loadingAction={latestSubmittedAction}\n                isAssignedToOther={isAssignedToOther}\n                isAssignedToMe={isAssignedToMe}\n                innerContainerClassName={innerContainerClassName}\n              />\n            )}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport function getTimeAgo(time: string) {\n  const timeAgo = formatDistanceToNow(new Date(time), {\n    addSuffix: false,\n  });\n\n  return timeAgo;\n}\n", "import { MdOpenInNew } from 'react-icons/md';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Chip from '~/components/Chip';\nimport Link from '~/components/Link';\nimport { DashboardAction } from '~/routes/api/admin/dashboard-data';\nimport { useTheme } from '~/utils/theme-provider';\nimport { getTimeAgo } from '.';\n\nexport type TagSuggestionAction = DashboardAction & {\n  isAdding: boolean;\n  tagId: number;\n};\n\ntype TagSuggestionProps = {\n  action: TagSuggestionAction;\n  onProcessSuggestion: (action: TagSuggestionAction, isApproved: boolean) => void;\n  isLoading: boolean;\n  loadingAction?: string;\n  innerContainerClassName: string;\n};\n\nexport function TagSuggestion({\n  action,\n  onProcessSuggestion,\n  isLoading,\n  loadingAction,\n  innerContainerClassName,\n}: TagSuggestionProps) {\n  const [theme] = useTheme();\n  const themedColor = theme === 'light' ? '#51bac8' : '#2299a9';\n\n  return (\n    <div className={innerContainerClassName}>\n      <div className=\"flex flex-col justify-between gap-2\">\n        <Chip color={themedColor} text=\"Tag suggestion\" />\n        <div className=\"flex flex-col md:flex-row gap-x-12 gap-y-1\">\n          <div className=\"flex flex-row gap-x-3\">\n            <b>{action.primaryField}</b>\n            <Link\n              href={`/admin/comics/${action.comicId!}`}\n              text=\"Admin\"\n              IconRight={MdOpenInNew}\n              newTab\n            />\n            <Link\n              href={`/comics/${action.primaryField}`}\n              text=\"Live\"\n              IconRight={MdOpenInNew}\n              newTab\n            />\n          </div>\n          <p>{action.secondaryField}</p>\n        </div>\n      </div>\n      <div className=\"flex flex-col md:items-end justify-between gap-2 flex-shrink-0\">\n        <p className=\"text-sm\">\n          {action.user.username || action.user.ip}\n          {' - '}\n          {getTimeAgo(action.timestamp)}\n        </p>\n\n        {action.isProcessed && (\n          <p>\n            <i>Completed by: {action.assignedMod?.username}</i>\n          </p>\n        )}\n        {!action.isProcessed && (\n          <div className=\"flex flex-row gap-2 self-end\">\n            <LoadingButton\n              color=\"error\"\n              onClick={() => onProcessSuggestion(action, false)}\n              text=\"Reject\"\n              isLoading={isLoading && loadingAction === 'reject-tag'}\n            />\n            <LoadingButton\n              color=\"primary\"\n              onClick={() => onProcessSuggestion(action, true)}\n              text=\"Approve\"\n              isLoading={isLoading && loadingAction === 'approve-tag'}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { useState } from 'react';\nimport { IoCaretDown, IoCaretUp } from 'react-icons/io5';\nimport { MdOpenInNew } from 'react-icons/md';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Chip from '~/components/Chip';\nimport Link from '~/components/Link';\nimport { DashboardAction } from '~/routes/api/admin/dashboard-data';\nimport { useTheme } from '~/utils/theme-provider';\nimport { getTimeAgo } from '.';\n\ntype ComicUploadProps = {\n  action: DashboardAction;\n  isLoading: boolean;\n  onAssignMe: (action: DashboardAction) => void;\n  onUnassignMe: (action: DashboardAction) => void;\n  loadingAction?: string;\n  isAssignedToOther?: boolean;\n  isAssignedToMe?: boolean;\n  innerContainerClassName: string;\n};\n\nexport function ComicUpload({\n  action,\n  isLoading,\n  onAssignMe,\n  onUnassignMe,\n  loadingAction,\n  isAssignedToOther,\n  isAssignedToMe,\n  innerContainerClassName,\n}: ComicUploadProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [theme] = useTheme();\n  const themedColor = theme === 'light' ? '#8c7ad5' : '#6751be';\n\n  return (\n    <div\n      className={`flex flex-col w-full gap-2 ${\n        action.isProcessed ? 'cursor-pointer' : ''\n      }`}\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      <div className={innerContainerClassName}>\n        <div className=\"flex flex-col justify-between gap-2\">\n          <Chip color={themedColor} text=\"Comic upload\" />\n          <div className=\"flex flex-col md:flex-row gap-x-12 gap-y-1\">\n            <div className=\"flex flex-row gap-x-3\">\n              <Link\n                href={`/admin/comics/${action.comicId}`}\n                text={action.primaryField}\n                IconRight={MdOpenInNew}\n                newTab\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col md:items-end justify-between gap-2 flex-shrink-0\">\n          <p className=\"text-sm\">\n            {action.user.username || action.user.ip}\n            {' - '}\n            {getTimeAgo(action.timestamp)}\n          </p>\n\n          {action.isProcessed && (\n            <p>\n              <i>Completed by: {action.assignedMod?.username}</i>\n            </p>\n          )}\n          {isAssignedToOther && (\n            <p>\n              <i>Assigned to: {action.assignedMod!.username}</i>\n            </p>\n          )}\n\n          <div className=\"flex flex-row gap-2 self-end\">\n            {isAssignedToMe && (\n              <LoadingButton\n                color=\"error\"\n                onClick={() => onUnassignMe(action)}\n                text=\"Unassign from me\"\n                isLoading={isLoading && loadingAction === 'unassign'}\n              />\n            )}\n            {!action.isProcessed && !action.assignedMod && (\n              <LoadingButton\n                color=\"primary\"\n                onClick={() => onAssignMe(action)}\n                text=\"I'm on it\"\n                isLoading={isLoading && loadingAction === 'assign'}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {action.isProcessed && (\n        <>\n          {isOpen ? (\n            <>\n              {action.isProcessed && (\n                <p>\n                  <b>Verdict: {action.verdict}</b>\n                </p>\n              )}\n\n              <IoCaretUp className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n            </>\n          ) : (\n            <IoCaretDown className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n", "import { useState } from 'react';\nimport { IoCaretDown, IoCaretUp } from 'react-icons/io5';\nimport DropdownButton from '~/components/Buttons/DropdownButton';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Chip from '~/components/Chip';\nimport { DashboardAction } from '~/routes/api/admin/dashboard-data';\nimport { useTheme } from '~/utils/theme-provider';\nimport { getTimeAgo } from '.';\n\ntype ComicProblemProps = {\n  action: DashboardAction;\n  isLoading: boolean;\n  onAssignMe: (action: DashboardAction) => void;\n  onUnassignMe: (action: DashboardAction) => void;\n  onProcessed: (action: DashboardAction, isApproved: boolean) => void;\n  loadingAction?: string;\n  isAssignedToOther?: boolean;\n  isAssignedToMe?: boolean;\n  innerContainerClassName: string;\n};\n\nexport function ComicProblem({\n  action,\n  isLoading,\n  onAssignMe,\n  onUnassignMe,\n  onProcessed,\n  loadingAction,\n  isAssignedToOther,\n  isAssignedToMe,\n  innerContainerClassName,\n}: ComicProblemProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [theme] = useTheme();\n  const themedColor = theme === 'light' ? '#d7a74a' : '#b28734';\n\n  const isChooseActionButtonLoading =\n    isLoading &&\n    !!loadingAction &&\n    ['unassign', 'process-problem'].includes(loadingAction);\n\n  return (\n    <div\n      className=\"flex flex-col w-full gap-2 cursor-pointer\"\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      <div className={innerContainerClassName}>\n        <div className=\"flex flex-col justify-between gap-2\">\n          <Chip color={themedColor} text=\"Comic problem\" />\n          <div className=\"flex flex-col md:flex-row gap-x-12 gap-y-1\">\n            <p>\n              <b>{action.primaryField}</b>\n            </p>\n            <p>{action.secondaryField}</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col md:items-end justify-between gap-2 flex-shrink-0\">\n          <p className=\"text-sm\">\n            {action.user.username || action.user.ip}\n            {' - '}\n            {getTimeAgo(action.timestamp)}\n          </p>\n\n          {action.isProcessed && (\n            <p>\n              <i>Completed by: {action.assignedMod?.username}</i>\n            </p>\n          )}\n          {isAssignedToOther && (\n            <p>\n              <i>Assigned to: {action.assignedMod!.username}</i>\n            </p>\n          )}\n\n          <div className=\"flex flex-row gap-2 self-end\">\n            {isAssignedToMe && (\n              <DropdownButton\n                text=\"Choose action\"\n                color=\"primary\"\n                isLoading={isChooseActionButtonLoading}\n                options={[\n                  {\n                    text: 'Unassign from me',\n                    onClick: () => onUnassignMe(action),\n                  },\n                  {\n                    text: 'Remove, irrelevant',\n                    onClick: () => onProcessed(action, false),\n                  },\n                  {\n                    text: 'Completed',\n                    onClick: () => onProcessed(action, true),\n                  },\n                ]}\n              />\n            )}\n            {!action.isProcessed && !action.assignedMod && (\n              <LoadingButton\n                color=\"primary\"\n                onClick={e => {\n                  e.stopPropagation();\n                  onAssignMe(action);\n                }}\n                text=\"I'm on it\"\n                isLoading={isLoading && loadingAction === 'assign'}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isOpen ? (\n        <>\n          <p\n            className=\"whitespace-pre-wrap cursor-auto\"\n            onClick={e => e.stopPropagation()}\n          >\n            {action.description}\n          </p>\n\n          {action.isProcessed && (\n            <p>\n              <b>Verdict: {action.verdict}</b>\n            </p>\n          )}\n\n          <IoCaretUp className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n        </>\n      ) : (\n        <IoCaretDown className=\"mx-auto -mb-1 text-blue-weak-200 dark:text-text-dark\" />\n      )}\n    </div>\n  );\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { format } from 'date-fns';\nimport { useMemo, useState } from 'react';\nimport { MdArrowDownward, MdArrowUpward, MdCheck, MdError } from 'react-icons/md';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport LoadingIconButton from '~/components/Buttons/LoadingIconButton';\nimport Link from '~/components/Link';\nimport RadioButtonGroup from '~/components/RadioButton/RadioButtonGroup';\nimport { DbPendingComic } from '~/types/types';\nimport { processApiError } from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nimport useWindowSize from '~/utils/useWindowSize';\nimport { getPendingComics } from '../api/funcs/get-pending-comics';\n\ntype PendingComicsFilter = 'all' | 'scheduled' | 'unscheduled' | 'problematic';\n\nconst filterOptions: { value: PendingComicsFilter; text: string }[] = [\n  { value: 'all', text: 'All' },\n  { value: 'scheduled', text: 'Publishing queue' },\n  { value: 'unscheduled', text: 'Unscheduled only' },\n  { value: 'problematic', text: 'Problematic only' },\n];\n\nexport default function PendingComics() {\n  const { pendingComics, dailySchedulePublishCount } = useLoaderData<typeof loader>();\n  const { isMobile } = useWindowSize();\n  const moveUpFetcher = useGoodFetcher({\n    url: '/api/admin/move-queued-comic',\n    method: 'post',\n  });\n  const moveDownFetcher = useGoodFetcher({\n    url: '/api/admin/move-queued-comic',\n    method: 'post',\n  });\n  const recalculateFetcher = useGoodFetcher({\n    url: '/api/admin/recalculate-publishing-queue',\n    method: 'post',\n    toastSuccessMessage: 'Successfully recalculated queue',\n  });\n\n  const [filter, setFilter] = useState<PendingComicsFilter>('all');\n\n  const totalPublishingQueueLength = useMemo(\n    () => pendingComics.filter(comic => comic.publishingQueuePos).length,\n    [pendingComics]\n  );\n\n  function moveComic(comicId: number, direction: 'up' | 'down') {\n    if (direction === 'up') {\n      moveUpFetcher.submit({ comicId: comicId.toString(), direction: 'up' });\n    }\n    if (direction === 'down') {\n      moveDownFetcher.submit({ comicId: comicId.toString(), direction: 'down' });\n    }\n  }\n\n  const filteredComics = useMemo(() => {\n    if (filter === 'all') {\n      return pendingComics;\n    }\n\n    // When viewing the publishing queue, sort by publishingQueuePos instead of timestamp\n    if (filter === 'scheduled') {\n      return pendingComics\n        .filter(comic => comic.publishStatus === 'scheduled')\n        .sort((a, b) => {\n          if (a.publishingQueuePos && b.publishingQueuePos) {\n            return a.publishingQueuePos - b.publishingQueuePos;\n          }\n          if (a.publishingQueuePos) {\n            return 1;\n          }\n          if (b.publishingQueuePos) {\n            return -1;\n          }\n          return 0;\n        });\n    }\n\n    if (filter === 'unscheduled') {\n      return pendingComics.filter(\n        comic => comic.publishStatus === 'pending' && !isProblematic(comic)\n      );\n    }\n\n    if (filter === 'problematic') {\n      return pendingComics.filter(comic => isProblematic(comic));\n    }\n\n    return pendingComics;\n  }, [filter, pendingComics]);\n\n  return (\n    <>\n      <h1>Pending comics</h1>\n      <p>\n        This is the home of comics that have been uploaded by mods, or by users and then\n        passed a mod review.\n      </p>\n      <p className=\"mt-2\">\n        Only admins can set schedule pending comics for publishing or add them to the\n        publishing queue.\n      </p>\n      <p className=\"mt-2\">\n        Comics in the publishing queue are published daily at noon, ET.{' '}\n        <b>{dailySchedulePublishCount}</b> comics are scheduled daily, as long as there\n        are enough in the queue.\n      </p>\n\n      <div className=\"flex flex-row flex-wrap my-4\">\n        <RadioButtonGroup\n          direction={isMobile ? 'vertical' : 'horizontal'}\n          options={filterOptions}\n          value={filter}\n          onChange={val => setFilter(val)}\n          name=\"filter\"\n        />\n      </div>\n\n      {filter === 'scheduled' && (\n        <>\n          <LoadingButton\n            isLoading={recalculateFetcher.isLoading}\n            onClick={() => recalculateFetcher.submit()}\n            text=\"Recalculate publishing queue positions\"\n          />\n          <p className=\"text-sm mb-4\">\n            In case some comics are missing placement or something else is wrong\n          </p>\n        </>\n      )}\n\n      <div className={`flex flex-col gap-2 ${isMobile ? 'w-full' : 'w-fit'}`}>\n        {filteredComics.map(comic => {\n          const nameLink = (\n            <Link\n              href={`/admin/comics/${comic.comicId}`}\n              text={`${comic.comicName} - ${comic.artistName}`}\n            />\n          );\n\n          const publishedP = comic.publishStatus === 'scheduled' && comic.publishDate && (\n            <p>\n              <MdCheck /> Scheduled: {format(new Date(comic.publishDate), 'MMM do')}\n            </p>\n          );\n\n          const scheduledP = comic.publishStatus === 'scheduled' &&\n            !comic.publishDate && (\n              <div className=\"flex flex-row items-center\">\n                <p>\n                  <MdCheck /> Publishing queue, {comic.publishingQueuePos ?? '?'}/\n                  {totalPublishingQueueLength}\n                </p>\n                <LoadingIconButton\n                  icon={MdArrowDownward}\n                  variant=\"naked\"\n                  isLoading={moveDownFetcher.isLoading}\n                  onClick={() => moveComic(comic.comicId, 'down')}\n                  disabled={comic.publishingQueuePos === totalPublishingQueueLength}\n                  className=\"ml-2\"\n                />\n                <LoadingIconButton\n                  icon={MdArrowUpward}\n                  variant=\"naked\"\n                  isLoading={moveUpFetcher.isLoading}\n                  disabled={comic.publishingQueuePos === 1}\n                  onClick={() => moveComic(comic.comicId, 'up')}\n                />\n              </div>\n            );\n\n          const noTagsP = comic.numberOfTags === 0 && (\n            <p>\n              <MdError /> No tags\n            </p>\n          );\n\n          const errorP = comic.errorText && (\n            <p>\n              <MdError /> Error: {comic.errorText}\n              {comic.pendingProblemModId && <span> (mod has been assigned)</span>}\n            </p>\n          );\n\n          const addedReviewerP = (\n            <p>\n              Added by {comic.uploadUsername || comic.uploadUserIP},{' '}\n              {format(new Date(comic.timestamp), 'MMM do')}\n              {comic.reviewerModName && <> - reviewer: {comic.reviewerModName}</>}\n            </p>\n          );\n\n          const scheduledByP = comic.scheduleModName && (\n            <p>Scheduled by: {comic.scheduleModName}</p>\n          );\n\n          return (\n            <div\n              className={`flex flex-row shadow rounded-sm justify-between gap-x-6 px-3 py-2 ${getBgColor(\n                comic\n              )}`}\n              key={comic.comicId}\n            >\n              {isMobile ? (\n                <div>\n                  {nameLink}\n                  {publishedP}\n                  {scheduledP}\n                  {noTagsP}\n                  {errorP}\n                  <p>\n                    Added by {comic.uploadUsername || comic.uploadUserIP},{' '}\n                    {format(new Date(comic.timestamp), 'MMM do')}\n                  </p>\n                  {comic.reviewerModName && <p>Reviewer: {comic.reviewerModName}</p>}\n                  {scheduledByP}\n                </div>\n              ) : (\n                <>\n                  <div className=\"w-fit\">\n                    {nameLink}\n                    {publishedP}\n                    {scheduledP}\n                    {noTagsP}\n                    {errorP}\n                  </div>\n\n                  <div className=\"w-fit flex flex-col items-end text-end justify-between\">\n                    {addedReviewerP}\n                    {scheduledByP}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const { err, pendingComics } = await getPendingComics(args.context.DB_API_URL_BASE);\n\n  if (err) {\n    return processApiError('Error getting pending comics in mod panel', err);\n  }\n\n  return {\n    pendingComics: pendingComics || [],\n    dailySchedulePublishCount: parseInt(args.context.DAILY_SCHEDULE_PUBLISH_COUNT),\n  };\n}\n\nfunction getBgColor(pendingComic: DbPendingComic) {\n  if (pendingComic.publishStatus === 'scheduled') {\n    return 'bg-theme1-primaryMoreTrans dark:bg-theme1-primaryTrans';\n  }\n  if (pendingComic.errorText || pendingComic.numberOfTags === 0) {\n    return 'bg-red-moreTrans dark:bg-red-trans';\n  }\n\n  return 'bg-white dark:bg-gray-300';\n}\n\nfunction isProblematic(pendingComic: DbPendingComic): boolean {\n  return !!pendingComic.errorText || pendingComic.numberOfTags === 0;\n}\n", "import { ButtonProps } from './Button';\nimport IconButton from './IconButton';\n\ntype LoadingButtonProps = {\n  icon: React.ElementType;\n  isLoading: boolean;\n} & Omit<ButtonProps, 'startIcon' | 'endIcon' | 'fullWidth' | 'text'>;\n\nexport default function LoadingIconButton({\n  isLoading,\n  variant = 'contained',\n  color = 'primary',\n  icon,\n  onClick,\n  ...props\n}: LoadingButtonProps) {\n  const className = (isLoading ? 'opacity-70 ' : '') + props.className;\n\n  return (\n    <IconButton\n      {...props}\n      variant={variant}\n      color={color}\n      className={className}\n      icon={isLoading ? Spinner(variant, color) : icon}\n      onClick={isLoading ? () => {} : onClick}\n    />\n  );\n}\n\nconst Spinner = (\n  variant: 'contained' | 'outlined' | 'naked',\n  color: 'primary' | 'error'\n) => {\n  let borderRightColor = '';\n\n  if (variant === 'contained') {\n    borderRightColor = 'border-r-white';\n  } else {\n    borderRightColor = 'dark:border-r-white';\n    if (color === 'error') {\n      borderRightColor += ' border-r-red-weak-200';\n      if (variant !== 'naked') borderRightColor += ' hover:border-r-white';\n    } else {\n      borderRightColor += ' border-r-blue-weak-200';\n      if (variant !== 'naked') borderRightColor += ' hover:border-r-white';\n    }\n  }\n\n  return () => (\n    <div\n      className={`w-4 h-4 animate-spin border-solid border-transparent ${borderRightColor} border border-r-2 rounded-full`}\n    />\n  );\n};\n", "import { useOutletContext } from '@remix-run/react';\nimport React from 'react';\nimport { MdArrowForward } from 'react-icons/md';\nimport Link from '~/components/Link';\nimport { GlobalAdminContext } from '../admin';\n\nexport default function UpdateThumbnails({}) {\n  const globalContext: GlobalAdminContext = useOutletContext();\n  const numTotalComics = globalContext.comics.length;\n  const numMissingComics =\n    numTotalComics -\n    globalContext.comics.filter(comic => comic.temp_hasHighresThumbnail).length;\n\n  const orderedMissingComics = globalContext.comics\n    .filter(comic => !comic.temp_hasHighresThumbnail)\n    .sort((a, b) => {\n      return b.temp_published!.localeCompare(a.temp_published!);\n    })\n    .map(comic => ({\n      id: comic.id,\n      name: comic.name,\n      daysSincePublished: Math.floor(\n        (Date.now() - new Date(comic.temp_published!).getTime()) / (1000 * 60 * 60 * 24)\n      ),\n    }));\n\n  return (\n    <>\n      <h1>Update old thumbnails</h1>\n      <p className=\"mb-2\">\n        Thumbnails uploaded to old Yiffer were converted to a too low resolution. We\n        should work on replacing them with higher res ones until all have been replaced.\n        Doing so will give you points in the contributions score system.\n      </p>\n      <p className=\"mb-2\">\n        <b>\n          Current progress: {numMissingComics}/{numTotalComics} need fixing.\n        </b>\n      </p>\n\n      <p className=\"mb-2\">\n        Ordered by time since published date (the first column). More recent = more\n        important.\n      </p>\n\n      <div className=\"grid gap-x-3 w-fit\" style={{ gridTemplateColumns: 'auto auto' }}>\n        {orderedMissingComics.map(comic => (\n          <React.Fragment key={comic.id}>\n            <p>{getTimeSincePublishString(comic.daysSincePublished)}</p>\n            <Link\n              href={`/admin/comics/${comic.id}`}\n              newTab\n              text={comic.name}\n              IconRight={MdArrowForward}\n            />\n          </React.Fragment>\n        ))}\n      </div>\n    </>\n  );\n}\n\nfunction getTimeSincePublishString(daysSincePublished: number) {\n  if (daysSincePublished < 32) {\n    return `${daysSincePublished} days`;\n  } else if (daysSincePublished < 365) {\n    const months = Math.floor(daysSincePublished / 30);\n    return `${months} month${months > 1 ? 's' : ''}`;\n  } else {\n    const years = Math.floor(daysSincePublished / 365);\n    const months = Math.floor((daysSincePublished % 365) / 30);\n    return `${years}y` + (months > 0 ? ` ${months}m` : '');\n  }\n}\n", "import { Outlet, useNavigate, useOutletContext } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport SearchableSelect from '~/components/SearchableSelect/SearchableSelect';\nimport { ArtistTiny } from '~/types/types';\nimport { GlobalAdminContext } from '../admin';\n\nexport default function ManageArtists({}) {\n  const navigate = useNavigate();\n\n  const [selectedArtist, setSelectedArtist] = useState<ArtistTiny>();\n\n  const globalContext: GlobalAdminContext = useOutletContext();\n\n  const artistOptions = globalContext.artists.map(artist => ({\n    value: artist,\n    text: artist.name,\n  }));\n\n  // update url on selected comic change\n  useEffect(() => {\n    if (!selectedArtist) return;\n    navigate(`/admin/artists/${selectedArtist.id}`);\n  }, [selectedArtist]);\n\n  return (\n    <>\n      <h1>Artist manager</h1>\n\n      <SearchableSelect\n        options={artistOptions}\n        value={selectedArtist}\n        onChange={setSelectedArtist}\n        onValueCleared={() => setSelectedArtist(undefined)}\n        title=\"Select artist\"\n        name=\"artist\"\n        className=\"mb-8\"\n      />\n\n      <Outlet context={globalContext} />\n    </>\n  );\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { Fragment, useEffect, useMemo, useState } from 'react';\nimport { MdArrowForward, MdCheck, MdClose, MdOpenInNew, MdReplay } from 'react-icons/md';\nimport ArtistEditor from '~/components/ArtistEditor';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport Link from '~/components/Link';\nimport { updateArtistData } from '~/routes/api/admin/update-artist-data';\nimport { getArtistById } from '~/routes/api/funcs/get-artist';\nimport { getComicsByArtistId } from '~/routes/api/funcs/get-comics';\nimport { NewArtist } from '~/routes/contribute/upload';\nimport { Artist, ComicTiny } from '~/types/types';\nimport { FieldChange } from '~/utils/general';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport { processApiError } from '~/utils/request-helpers';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nimport useWindowSize from '~/utils/useWindowSize';\n\nexport default function ManageArtist() {\n  const { isMobile } = useWindowSize();\n  const { artist, comics, user } = useLoaderData<typeof loader>();\n  const banArtistFetcher = useGoodFetcher({\n    url: '/api/admin/toggle-artist-ban',\n    method: 'post',\n    toastSuccessMessage: 'Artist ban status updated',\n  });\n  const saveChangesFetcher = useGoodFetcher({\n    url: '/api/admin/update-artist-data',\n    method: 'post',\n    toastSuccessMessage: 'Artist updated',\n    onFinish: () => {\n      setNeedsUpdate(true);\n      setIsBanning(false);\n    },\n  });\n\n  const [updatedArtistData, setUpdatedArtistData] = useState<NewArtist>();\n  const [needsUpdate, setNeedsUpdate] = useState(false);\n  const [isBanning, setIsBanning] = useState(false);\n\n  useEffect(() => {\n    if (\n      !updatedArtistData?.artistName ||\n      updatedArtistData.id !== artist?.id ||\n      needsUpdate\n    ) {\n      setInitialArtistData();\n      setNeedsUpdate(false);\n    }\n  }, [artist]);\n\n  function setInitialArtistData() {\n    const newUpdatedArtistData = setupInitialUpdatedArtist(artist);\n    setUpdatedArtistData(newUpdatedArtistData);\n  }\n\n  const artistChanges = useMemo(() => {\n    if (!updatedArtistData) return [];\n    return getChanges(artist, updatedArtistData);\n  }, [updatedArtistData, artist]);\n\n  function saveChanges() {\n    if (!artistChanges) return;\n\n    const body: ArtistDataChanges = {\n      artistId: artist.id,\n    };\n    for (const change of artistChanges) {\n      if (change.field === 'Name') {\n        body.name = change.newDataValue;\n      } else if (change.field === 'E621 name') {\n        body.e621Name = change.newDataValue;\n      } else if (change.field === 'Patreon name') {\n        body.patreonName = change.newDataValue;\n      } else if (change.field === 'Links') {\n        body.links = change.newDataValue;\n      }\n    }\n\n    saveChangesFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  const canSave = useMemo(() => {\n    if (!updatedArtistData) return false;\n    if (updatedArtistData.artistName !== artist.name && !updatedArtistData.isValidName)\n      return false;\n    if (!updatedArtistData.e621Name && !updatedArtistData.hasConfirmedNoE621Name) {\n      return false;\n    }\n    if (!updatedArtistData.patreonName && !updatedArtistData.hasConfirmedNoPatreonName) {\n      return false;\n    }\n    if (!updatedArtistData.areLinksValid) {\n      return false;\n    }\n\n    return true;\n  }, [artistChanges, updatedArtistData]);\n\n  function toggleArtistBan() {\n    banArtistFetcher.submit({\n      isBanned: artist.isBanned ? 'false' : 'true',\n      artistId: artist.id.toString(),\n    });\n  }\n\n  return (\n    <>\n      <h2 className=\"mb-2\">{artist.name}</h2>\n\n      {artist.isBanned && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit mb-6\">\n          <h3>Banned artist</h3>\n          <p>\n            This artist cannot be chosen for new/existing comics, and cannot be suggested.\n            The reasons could be that they've asked not to be featured on the site, or\n            anything else.\n          </p>\n\n          {user.userType === 'admin' ? (\n            <>\n              <p className=\"mt-4 mb-2\">\n                If unbanning an artist with unlisted comics, you will still have to\n                re-list the comics individually if they should be shown on the site.\n              </p>\n              <LoadingButton\n                onClick={toggleArtistBan}\n                className=\"mt-2\"\n                isLoading={banArtistFetcher.isLoading}\n                color=\"error\"\n                text=\"Unban artist\"\n              />\n            </>\n          ) : (\n            <p>Only admins can unban artists.</p>\n          )}\n        </div>\n      )}\n\n      {artist.isPending && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit mb-6\">\n          <h3>Pending artist</h3>\n          <p>\n            This artist is pending. This means that a user has uploaded a comic and in the\n            same process created a new artist. If the comic is approved, the artist stops\n            being pending. If the comic is rejected, this artist is deleted (fully - not\n            banned, actually deleted).\n          </p>\n        </div>\n      )}\n\n      {!artist.isBanned && (\n        <div className=\"mb-6\">\n          {!artist.isPending && (\n            <p className=\"text-lg text-theme1-darker\">\n              This artist is live!\n              <Link\n                href={`/artist/${artist.name}`}\n                className=\"ml-2\"\n                text=\"View live artist page\"\n                IconRight={MdOpenInNew}\n                newTab\n              />\n            </p>\n          )}\n        </div>\n      )}\n\n      <h4 className=\"mt-2\">Comics</h4>\n      <div className=\"flex flex-wrap gap-x-3 gap-y-2 mb-6\">\n        {comics.length ? (\n          comics.map(comic => (\n            <div\n              className=\"px-2 py-1 bg-theme1-primaryTrans dark:bg-theme1-primaryMoreTrans flex flex-row flex-wrap gap-x-3\"\n              key={comic.id}\n            >\n              <p>{comic.name}</p>\n              <div className=\"flex flex-row gap-3\">\n                {comic.publishStatus === 'published' && (\n                  <Link\n                    href={`/${comic.name}`}\n                    text=\"Live\"\n                    newTab\n                    IconRight={MdOpenInNew}\n                  />\n                )}\n                <Link\n                  href={`/admin/comics/${comic.id}`}\n                  text=\"Admin\"\n                  IconRight={MdArrowForward}\n                />\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>This artist has no comics that are uploaded, pending, or live.</p>\n        )}\n      </div>\n\n      {updatedArtistData && (\n        <ArtistEditor\n          newArtistData={updatedArtistData}\n          existingArtist={artist}\n          onUpdate={setUpdatedArtistData}\n          hideBorderTitle\n          className=\"max-w-3xl\"\n        />\n      )}\n\n      {artistChanges.length > 0 && (\n        <>\n          <div\n            className={`py-2 px-4 bg-theme1-primaryTrans flex flex-col gap-1 mt-6 ${\n              isMobile ? '' : 'w-fit'\n            }`}\n          >\n            <h4>Changes</h4>\n            <div\n              className={`grid ${isMobile ? 'gap-y-2' : 'gap-x-4'}`}\n              style={{ gridTemplateColumns: isMobile ? 'auto' : 'auto auto' }}\n            >\n              {artistChanges.map(change => {\n                const hasDetails = !!change.newValue;\n\n                return isMobile ? (\n                  <div key={change.field} className=\"grid gap-y-2\">\n                    <p className={hasDetails ? '' : 'col-span-2'}>\n                      <b>{change.field}:</b>\n                    </p>\n                    {hasDetails && (\n                      <p>\n                        {change.oldValue ? (\n                          <>\n                            {change.oldValue} <MdArrowForward /> {change.newValue}\n                          </>\n                        ) : (\n                          change.newValue\n                        )}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <Fragment key={change.field}>\n                    <p className={hasDetails ? '' : 'col-span-2'}>\n                      <b>{change.field}</b>\n                    </p>\n                    {hasDetails && (\n                      <p>\n                        {change.oldValue ? (\n                          <>\n                            {change.oldValue} <MdArrowForward /> {change.newValue}\n                          </>\n                        ) : (\n                          change.newValue\n                        )}\n                      </p>\n                    )}\n                  </Fragment>\n                );\n              })}\n            </div>\n          </div>\n\n          <div className=\"flex flex-row gap-2 mt-4\">\n            <Button\n              variant=\"outlined\"\n              text=\"Revert changes\"\n              onClick={setInitialArtistData}\n              startIcon={MdReplay}\n            />\n            <LoadingButton\n              text=\"Save changes\"\n              isLoading={saveChangesFetcher.isLoading}\n              onClick={saveChanges}\n              startIcon={MdCheck}\n              disabled={!canSave}\n            />\n          </div>\n        </>\n      )}\n\n      {user.userType === 'admin' && !artist.isBanned && (\n        <div className=\"mt-10\">\n          <h3>Admin tools</h3>\n          {!isBanning && (\n            <Button\n              text=\"Ban artist\"\n              onClick={() => setIsBanning(true)}\n              color=\"error\"\n              className=\"mt-2\"\n            />\n          )}\n          {isBanning && (\n            <>\n              <h4>Ban artist</h4>\n              <p className=\"mt-2\">\n                Banning an artist will unlist any comics they have, and prevent users from\n                suggesting or uploading comics by them. It will also reject any pending\n                and user uploaded comic by them.\n              </p>\n              <div className=\"flex flex-row gap-2 flex-wrap mt-2\">\n                <Button\n                  variant=\"outlined\"\n                  text=\"Cancel\"\n                  onClick={() => setIsBanning(false)}\n                  startIcon={MdClose}\n                />\n                <LoadingButton\n                  isLoading={banArtistFetcher.isLoading}\n                  text=\"Ban artist\"\n                  onClick={toggleArtistBan}\n                  color=\"error\"\n                  startIcon={MdCheck}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport type ArtistDataChanges = {\n  artistId: number;\n  name?: string;\n  e621Name?: string;\n  patreonName?: string;\n  links?: string[];\n};\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n  const artistParam = args.params.artist as string;\n  const artistId = parseInt(artistParam);\n\n  const artistPromise = getArtistById(urlBase, artistId);\n  const comicsPromise = getComicsByArtistId(urlBase, artistId, { includeUnlisted: true });\n  const [artistRes, comicsRes] = await Promise.all([artistPromise, comicsPromise]);\n\n  if (artistRes.err) {\n    return processApiError('Error getting artist for admin>artist', artistRes.err);\n  }\n  if (comicsRes.err) {\n    return processApiError('Error getting comic for admin>artist', comicsRes.err);\n  }\n  if (artistRes.notFound || !artistRes.artist) {\n    throw new Response('Artist not found', {\n      status: 404,\n    });\n  }\n\n  return {\n    artist: artistRes.artist,\n    comics: comicsRes.comics as ComicTiny[],\n    user,\n  };\n}\n\nfunction getChanges(initialArtist: Artist, updatedArtist: NewArtist): FieldChange[] {\n  const changes: FieldChange[] = [];\n\n  if (initialArtist.name !== updatedArtist.artistName) {\n    changes.push({\n      field: 'Name',\n      oldValue: initialArtist.name,\n      newValue: updatedArtist.artistName,\n      newDataValue: updatedArtist.artistName,\n    });\n  }\n\n  if (initialArtist.e621Name !== updatedArtist.e621Name) {\n    changes.push({\n      field: 'E621 name',\n      oldValue: initialArtist.e621Name || 'None',\n      newValue: updatedArtist.e621Name || 'None',\n      newDataValue: updatedArtist.e621Name,\n    });\n  }\n\n  if (initialArtist.patreonName !== updatedArtist.patreonName) {\n    changes.push({\n      field: 'Patreon name',\n      oldValue: initialArtist.patreonName || 'None',\n      newValue: updatedArtist.patreonName || 'None',\n      newDataValue: updatedArtist.patreonName,\n    });\n  }\n\n  const realNewLinks = updatedArtist.links.filter(link => link !== '');\n  if (initialArtist.links.length !== realNewLinks.length) {\n    changes.push({\n      field: 'Links',\n      newDataValue: realNewLinks,\n    });\n  } else {\n    for (let i = 0; i < initialArtist.links.length; i++) {\n      if (initialArtist.links[i] !== realNewLinks[i]) {\n        changes.push({\n          field: 'Links',\n          newDataValue: realNewLinks,\n        });\n        break;\n      }\n    }\n  }\n\n  return changes;\n}\n\nfunction setupInitialUpdatedArtist(artist: Artist): NewArtist {\n  const newArtist: NewArtist = {\n    id: artist.id,\n    artistName: artist.name,\n    e621Name: artist.e621Name,\n    patreonName: artist.patreonName,\n    links: [...artist.links, ''],\n  };\n  if (!artist.e621Name) {\n    newArtist.hasConfirmedNoE621Name = true;\n  }\n  if (!artist.patreonName) {\n    newArtist.hasConfirmedNoPatreonName = true;\n  }\n\n  return newArtist;\n}\n", "import { Outlet, useNavigate, useOutletContext } from '@remix-run/react';\nimport { useEffect, useState } from 'react';\nimport SearchableSelect from '~/components/SearchableSelect/SearchableSelect';\nimport { ComicTiny } from '~/types/types';\nimport { GlobalAdminContext } from '../admin';\n\nexport default function ManageComics({}) {\n  const navigate = useNavigate();\n\n  const [selectedComic, setSelectedComic] = useState<ComicTiny>();\n\n  const globalContext: GlobalAdminContext = useOutletContext();\n\n  const comicOptions = globalContext.comics.map(comic => ({\n    value: comic,\n    text: comic.name,\n  }));\n\n  // update url on selected comic change\n  useEffect(() => {\n    if (!selectedComic) return;\n    navigate(`/admin/comics/${selectedComic.id}`);\n  }, [selectedComic]);\n\n  return (\n    <>\n      <h1>Comic manager</h1>\n\n      <SearchableSelect\n        options={comicOptions}\n        value={selectedComic}\n        onChange={setSelectedComic}\n        onValueCleared={() => setSelectedComic(undefined)}\n        title=\"Select comic\"\n        name=\"comic\"\n        className=\"mb-8\"\n      />\n\n      <Outlet context={globalContext} />\n    </>\n  );\n}\n", "import { useState } from 'react';\nimport { Comic } from '~/types/types';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { format } from 'date-fns';\nimport RadioButtonGroup from '~/components/RadioButton/RadioButtonGroup';\nimport InfoBox from '~/components/InfoBox';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nexport type AllowedAnonComicVerdict = 'approved' | 'rejected' | 'rejected-list';\n\ntype AnonUploadSectionProps = {\n  comicData: Comic;\n  updateComic: () => void;\n};\n\nexport default function AnonUploadSection({\n  comicData,\n  updateComic,\n}: AnonUploadSectionProps) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/process-anon-upload',\n    method: 'post',\n    toastSuccessMessage: 'Comic processed',\n    onFinish: updateComic,\n  });\n  const [verdict, setVerdict] = useState<AllowedAnonComicVerdict | undefined>();\n\n  function processComic() {\n    if (!verdict) return;\n\n    const body = {\n      comicId: comicData.id.toString(),\n      comicName: comicData.name,\n      verdict: verdict,\n    };\n    fetcher.submit(body);\n  }\n\n  return (\n    <>\n      <p className=\"mt-2\">\n        This comic is not live. It has been uploaded by a user and is now up for mod\n        review.\n      </p>\n      <p>\n        You should <b>fix errors</b> before approving. If the quality of the uploaded\n        content is not good enough, you should <b>reject it</b>.\n      </p>\n      <p>Uploaded by a guest user with IP {comicData.metadata?.uploadUserIP}.</p>\n      <p>Uploaded {format(new Date(comicData.metadata?.timestamp || ''), 'PPPPp')}</p>\n\n      <RadioButtonGroup\n        onChange={val => setVerdict(val as AllowedAnonComicVerdict)}\n        value={verdict}\n        name=\"verdict\"\n        className=\"mt-4\"\n        options={[\n          { value: 'approved', text: 'Approve submission - set comic pending' },\n          {\n            value: 'rejected-list',\n            text: 'Reject submission due to the nature of the comic - add to ban list (click to read more)',\n          },\n          {\n            value: 'rejected',\n            text: 'Reject submission due to poorly provided info in the submission (click to read more)',\n          },\n        ]}\n      />\n\n      {(verdict === 'rejected' || verdict === 'rejected-list') && (\n        <InfoBox\n          variant=\"info\"\n          title=\"Rejecting\"\n          showIcon\n          className=\"mt-4 max-w-4xl\"\n          boldText={false}\n          disableElevation\n        >\n          <p className=\"mt-2\">\n            If the comic should not be on Yiffer.xyz at all - for example if the art\n            quality is too bad, if it's a cub comic, if it's not in English, or if it's\n            got censoring bars (etc.) - use the upper of the two reject options. This will\n            add the comic's name to a <u>ban list</u>, preventing others from uploading\n            it. It is therefore important that you <u>fix the name</u> in case it's\n            misspelled. If choosing this, you should absolutely leave a brief comment\n            explaining why.\n          </p>\n          <p className=\"mt-4\">\n            If the comic could be on Yiffer.xyz but the quality upload is garbage, use the\n            lower of the two options. Use this one if it's spam/trolling as well.\n          </p>\n        </InfoBox>\n      )}\n\n      <LoadingButton\n        text=\"Submit\"\n        className=\"mt-4\"\n        isLoading={fetcher.isLoading}\n        disabled={!verdict}\n        onClick={processComic}\n      />\n    </>\n  );\n}\n", "import { useState } from 'react';\nimport { IoCheckmark } from 'react-icons/io5';\nimport { Comic } from '~/types/types';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { format } from 'date-fns';\nimport RadioButtonGroup from '~/components/RadioButton/RadioButtonGroup';\nimport TextInput from '~/components/TextInput/TextInput';\nimport InfoBox from '~/components/InfoBox';\nimport { CONTRIBUTION_POINTS } from '~/types/contributions';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\nconst reviewOptions = Object.entries(CONTRIBUTION_POINTS.comicUpload).map(\n  ([verdict, value]) => ({\n    value: verdict,\n    text: value.modPanelDescription,\n  })\n);\n\ntype UserUploadSectionProps = {\n  comicData: Comic;\n  updateComic: () => void;\n};\n\nexport default function UserUploadSection({\n  comicData,\n  updateComic,\n}: UserUploadSectionProps) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/process-user-upload',\n    method: 'post',\n    toastSuccessMessage: 'Comic processed',\n    onFinish: updateComic,\n  });\n  const [verdict, setVerdict] = useState<string | null>();\n  const [modComment, setModComment] = useState<string>('');\n\n  function submitReview() {\n    if (!verdict) return;\n\n    const body: any = {\n      comicId: comicData.id.toString(),\n      comicName: comicData.name,\n      verdict,\n      uploaderId: comicData.metadata?.uploadUserId,\n    };\n    if (modComment) body.modComment = modComment;\n\n    fetcher.submit(body);\n  }\n\n  return (\n    <>\n      <p className=\"mt-2\">\n        This comic is not live. It has been uploaded by a user and is now up for mod\n        review.\n      </p>\n      <p>Uploaded by {comicData.metadata?.uploadUsername}.</p>\n      <p>Uploaded {format(new Date(comicData.metadata?.timestamp || ''), 'PPPPp')}</p>\n\n      <h4 className=\"mt-4\">Review submission</h4>\n      <p>\n        You should <b>fix errors before you submit the review</b>. Submitting the review\n        will turn the comic into a pending one, unless you reject it.\n      </p>\n\n      <RadioButtonGroup\n        options={reviewOptions}\n        name=\"review\"\n        value={verdict}\n        onChange={setVerdict}\n        className=\"mt-2\"\n      />\n\n      {(verdict === 'rejected' || verdict === 'rejected-list') && (\n        <InfoBox\n          variant=\"info\"\n          title=\"Rejecting\"\n          showIcon\n          className=\"mt-4 max-w-4xl\"\n          boldText={false}\n          disableElevation\n        >\n          <p className=\"mt-2\">\n            If the comic should not be on Yiffer.xyz at all - for example if the art\n            quality is too bad, if it's a cub comic, if it's not in English, or if it's\n            got censoring bars (etc.) - use the upper of the two reject options. This will\n            add the comic's name to a <u>ban list</u>, preventing others from uploading\n            it. It is therefore important that you <u>fix the name</u> in case it's\n            misspelled.\n          </p>\n          <p className=\"mt-4\">\n            If the comic could be on Yiffer.xyz but the quality upload is garbage, use the\n            lower of the two options. Use this one if it's spam/trolling as well.\n          </p>\n        </InfoBox>\n      )}\n\n      <p className=\"mt-4\">\n        You can add a comment for the user to see. Keep it <u>short</u> and constructive!\n        The goal is to help the user do better next time.\n      </p>\n      <p>\n        You <i>can</i> leave it blank even if there are issues, but helping the user helps\n        us in the long run. Do not comment on obvious trolling.\n      </p>\n\n      <TextInput\n        name=\"modComment\"\n        label=\"Comment - optional\"\n        className=\"mt-4\"\n        value={modComment}\n        onChange={setModComment}\n      />\n\n      <fetcher.Form>\n        <LoadingButton\n          text=\"Save review and process comic\"\n          isLoading={fetcher.isLoading}\n          onClick={submitReview}\n          startIcon={IoCheckmark}\n          className=\"mt-6\"\n          disabled={!verdict}\n        />\n      </fetcher.Form>\n    </>\n  );\n}\n", "import { Comic, UserSession } from '~/types/types';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype UnlistedComicSectionProps = {\n  comicData: Comic;\n  user: UserSession;\n  updateComic: () => void;\n};\n\nexport default function UnlistedComicSection({\n  comicData,\n  user,\n  updateComic,\n}: UnlistedComicSectionProps) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/relist-comic',\n    method: 'post',\n    toastSuccessMessage: 'Comic re-listed',\n    onFinish: updateComic,\n  });\n\n  return (\n    <>\n      <p className=\"mb-2\">\n        This comic is not live. It has been removed from the available comics on\n        Yiffer.xyz for one reason or another. It can be re-listed by an admin.\n      </p>\n\n      <p>\n        <b>Reason for unlisting</b>: {comicData.metadata?.unlistComment}\n      </p>\n\n      {user.userType === 'admin' && (\n        <fetcher.Form>\n          <LoadingButton\n            text=\"Re-list comic\"\n            isLoading={fetcher.isLoading}\n            isSubmit\n            className=\"mt-2\"\n          />\n\n          <input type=\"hidden\" name=\"comicId\" value={comicData.id.toString()} />\n        </fetcher.Form>\n      )}\n    </>\n  );\n}\n", "import { IoClose } from 'react-icons/io5';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { Comic } from '~/types/types';\nimport \"react-calendar/dist/Calendar.css?__remix_sideEffect__\";\nimport { format } from 'date-fns';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype ScheduledComicParams = {\n  comicData: Comic;\n  onReschedule: () => void;\n  onUnscheduleFinished: () => void;\n};\n\nexport function ScheduledComic({\n  comicData,\n  onReschedule,\n  onUnscheduleFinished\n}: ScheduledComicParams) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/unschedule-comic',\n    method: 'post',\n    toastSuccessMessage: 'Comic unscheduled',\n    onFinish: onUnscheduleFinished\n  });\n\n  const hasDate = comicData.metadata?.publishDate;\n\n  return (\n    <>\n      {hasDate ?\n      <p className=\"mb-2 -mt-2\">\n          <b>\n            Scheduled for {format(new Date(comicData.metadata?.publishDate || ''), 'PPP')}\n          </b>\n        </p> :\n\n      <p className=\"mb-2 -mt-2\">\n          <b>Comic is in the publishing queue.</b>\n        </p>}\n\n\n      <fetcher.Form>\n        <div className=\"flex flex-row gap-4\">\n          <input type=\"hidden\" name=\"comicId\" value={comicData.id} />\n          <div className=\"flex flex-row gap-4\">\n            <LoadingButton\n              text={\n              hasDate ? 'Unschedule (set pending)' : 'Remove from queue (set pending)'}\n\n              startIcon={IoClose}\n              isLoading={fetcher.isLoading}\n              color=\"error\"\n              isSubmit />\n\n            <Button\n              text={hasDate ? 'Re-schedule' : 'Schedule for specific date'}\n              onClick={onReschedule}\n              variant=\"outlined\" />\n\n          </div>\n        </div>\n      </fetcher.Form>\n    </>);\n\n}", "import { useMemo, useState } from 'react';\nimport Button from '~/components/Buttons/Button';\nimport { Comic, ComicMetadata } from '~/types/types';\nimport { useNavigate } from '@remix-run/react';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { HasError, SetError } from './pending/Error';\nimport { Reject } from './pending/Reject';\nimport { Schedule } from './scheduling/Schedule';\nimport { ScheduledComic } from './scheduling/Scheduled';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype ActionState = 'none' | 'set-error' | 'scheduling' | 'rejecting';\n\ntype PendingComicSectionProps = {\n  comicData: Comic;\n  updateComic: () => void;\n};\n\nexport default function PendingComicSection({\n  comicData,\n  updateComic,\n}: PendingComicSectionProps) {\n  const navigate = useNavigate();\n  const metadata = comicData.metadata as ComicMetadata;\n  const [actionState, setActionState] = useState<ActionState>('none');\n  const publishNowFetcher = useGoodFetcher({\n    url: '/api/admin/publish-comic',\n    method: 'post',\n    toastSuccessMessage: 'Comic published',\n    onFinish: updateComic,\n  });\n  const addToQueueFetcher = useGoodFetcher({\n    url: '/api/admin/schedule-comic-to-queue',\n    method: 'post',\n    toastSuccessMessage: 'Added to publishing queue',\n    onFinish: updateComic,\n  });\n\n  const comicState = useMemo(() => {\n    if (comicData.publishStatus === 'rejected') return 'rejected';\n    if (comicData.publishStatus === 'scheduled') return 'scheduled';\n    if (metadata.errorText) return 'has-error';\n    return 'initial';\n  }, [comicData]);\n\n  if (actionState === 'set-error') {\n    return (\n      <SetError\n        comicData={comicData}\n        onCancel={() => setActionState('none')}\n        onFinish={() => {\n          setActionState('none');\n          updateComic();\n        }}\n      />\n    );\n  }\n\n  if (comicState === 'has-error') {\n    return <HasError comicData={comicData} onFinish={updateComic} />;\n  }\n\n  if (actionState === 'rejecting') {\n    return (\n      <Reject\n        comicData={comicData}\n        onCancel={() => setActionState('none')}\n        onFinish={() => {\n          setActionState('none');\n          updateComic();\n          navigate(`/admin/comics`);\n        }}\n      />\n    );\n  }\n\n  if (actionState === 'scheduling') {\n    return (\n      <Schedule\n        comicData={comicData}\n        onCancel={() => setActionState('none')}\n        onFinish={() => {\n          setActionState('none');\n          updateComic();\n        }}\n      />\n    );\n  }\n\n  if (comicData.publishStatus === 'scheduled') {\n    return (\n      <ScheduledComic\n        comicData={comicData}\n        onReschedule={() => setActionState('scheduling')}\n        onUnscheduleFinished={updateComic}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"mb-4 -mt-2\">\n        <p>\n          Normally, add the comic to the publishing queue. Only in specific cases (for\n          example per an artist's request) should a comic be scheduled for a specific\n          date.\n        </p>\n\n        {comicData.artist.isPending && (\n          <p className=\"mt-2\">\n            This comic's <b>artist is pending</b>. Once this or any other pending comic by\n            the artist is published, the artist will automatically do the same.\n          </p>\n        )}\n      </div>\n\n      <div className=\"flex flex-col gap-4\">\n        <div className=\"flex flex-row gap-4 flex-wrap\">\n          <LoadingButton\n            text=\"Add to publishing queue\"\n            onClick={() => addToQueueFetcher.submit({ comicId: comicData.id.toString() })}\n            isLoading={addToQueueFetcher.isLoading}\n            className=\"min-w-40\"\n          />\n          <Button\n            text=\"Schedule for specific date\"\n            onClick={() => setActionState('scheduling')}\n            className=\"min-w-40\"\n          />\n          <LoadingButton\n            text=\"Publish now\"\n            onClick={() => publishNowFetcher.submit({ comicId: comicData.id.toString() })}\n            isLoading={publishNowFetcher.isLoading}\n            className=\"min-w-40\"\n          />\n        </div>\n        <Button\n          text=\"Set error\"\n          color=\"error\"\n          onClick={() => setActionState('set-error')}\n          className=\"min-w-40\"\n        />\n        <Button\n          text=\"Reject comic\"\n          color=\"error\"\n          onClick={() => setActionState('rejecting')}\n          className=\"min-w-40\"\n        />\n      </div>\n    </div>\n  );\n}\n", "import { IoCheckmark, IoClose } from 'react-icons/io5';\nimport { MdCheck, MdError } from 'react-icons/md';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport TextInputUncontrolled from '~/components/TextInput/TextInputUncontrolled';\nimport { Comic } from '~/types/types';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype PendingComicErrorParams = {\n  comicData: Comic;\n  onCancel: () => void;\n  onFinish: () => void;\n};\n\nexport function SetError({ comicData, onCancel, onFinish }: PendingComicErrorParams) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/set-comic-error',\n    method: 'post',\n    onFinish: onFinish,\n    toastSuccessMessage: 'Error set',\n  });\n\n  return (\n    <>\n      <h4>Set error</h4>\n      <fetcher.Form>\n        <input type=\"hidden\" name=\"comicId\" value={comicData.id} />\n\n        <TextInputUncontrolled\n          label=\"Short error text\"\n          placeholder={`Eg. \"low page res\", \"bad thumbnail\"`}\n          name=\"errorText\"\n          className=\"max-w-sm\"\n        />\n        <div className=\"flex flex-row gap-4 mt-4\">\n          <Button\n            text=\"Cancel\"\n            variant=\"outlined\"\n            onClick={onCancel}\n            startIcon={IoClose}\n          />\n          <LoadingButton\n            text=\"Save\"\n            startIcon={IoCheckmark}\n            isLoading={fetcher.isLoading}\n            isSubmit\n          />\n        </div>\n      </fetcher.Form>\n    </>\n  );\n}\n\ntype PendingComicHasErrorParams = {\n  comicData: Comic;\n  onFinish: () => void;\n};\n\nexport function HasError({ comicData, onFinish }: PendingComicHasErrorParams) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/set-comic-error',\n    method: 'post',\n    onFinish: onFinish,\n    toastSuccessMessage: 'Error removed',\n  });\n\n  return (\n    <>\n      <div className=\"mt-2 mb-4\">\n        <p>\n          <b>\n            <MdError /> Error: {comicData.metadata?.errorText}\n          </b>\n        </p>\n        {comicData.metadata?.pendingProblemModId && (\n          <p>\n            <MdCheck /> A mod has been assigned to fix this problem\n          </p>\n        )}\n      </div>\n\n      <fetcher.Form>\n        <input type=\"hidden\" name=\"comicId\" value={comicData.id} />\n        <input type=\"hidden\" name=\"errorText\" value={''} />\n        <LoadingButton\n          text=\"Remove error status\"\n          isLoading={fetcher.isLoading}\n          isSubmit\n        />\n      </fetcher.Form>\n    </>\n  );\n}\n", "import { IoCheckmark, IoClose } from 'react-icons/io5';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { Comic } from '~/types/types';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype RejectParams = {\n  comicData: Comic;\n  onCancel: () => void;\n  onFinish: () => void;\n};\n\nexport function Reject({ comicData, onCancel, onFinish }: RejectParams) {\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/reject-pending-comic',\n    method: 'post',\n    onFinish: onFinish,\n    toastSuccessMessage: 'Comic rejected',\n  });\n\n  return (\n    <>\n      <h4 className=\"mb-2\">Reject comic</h4>\n      <fetcher.Form>\n        <input type=\"hidden\" name=\"comicId\" value={comicData.id} />\n\n        <div className=\"flex flex-row gap-4\">\n          <Button\n            text=\"Cancel\"\n            variant=\"outlined\"\n            onClick={onCancel}\n            startIcon={IoClose}\n          />\n          <LoadingButton\n            text=\"Reject comic\"\n            startIcon={IoCheckmark}\n            color=\"error\"\n            isLoading={fetcher.isLoading}\n            isSubmit\n          />\n        </div>\n      </fetcher.Form>\n    </>\n  );\n}\n", "import { useState } from 'react';\nimport { IoCheckmark, IoClose } from 'react-icons/io5';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport { Comic } from '~/types/types';\nimport Calendar from 'react-calendar';\nimport \"react-calendar/dist/Calendar.css?__remix_sideEffect__\";\nimport { format } from 'date-fns';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\n\ntype ScheduleParams = {\n  comicData: Comic;\n  onCancel: () => void;\n  onFinish: () => void;\n};\n\nexport function Schedule({ comicData, onCancel, onFinish }: ScheduleParams) {\n  const [publishDate, setPublishDate] = useState<Date>(\n    comicData.metadata?.publishDate ?\n    new Date(comicData.metadata.publishDate) :\n    new Date()\n  );\n\n  const fetcher = useGoodFetcher({\n    url: '/api/admin/schedule-comic',\n    method: 'post',\n    onFinish: onFinish,\n    toastSuccessMessage: 'Comic scheduled'\n  });\n\n  const dateString = publishDate ? format(publishDate, 'yyyy-MM-dd') : '';\n\n  return (\n    <>\n      <h4 className=\"mb-2\">Schedule comic</h4>\n      <fetcher.Form>\n        <input type=\"hidden\" name=\"comicId\" value={comicData.id} />\n        <input type=\"hidden\" name=\"publishDate\" value={dateString} />\n\n        <Calendar value={publishDate} onChange={setPublishDate} className=\"pb-2 w-fit\" />\n\n        <p className=\"mb-4\">\n          <b>\n            {publishDate.toLocaleDateString('en-US', {\n              weekday: 'long',\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            })}\n          </b>\n        </p>\n\n        <div className=\"flex flex-row gap-4\">\n          <Button\n            text=\"Cancel\"\n            variant=\"outlined\"\n            onClick={onCancel}\n            startIcon={IoClose} />\n\n          <LoadingButton\n            text=\"Schedule comic\"\n            startIcon={IoCheckmark}\n            isLoading={fetcher.isLoading}\n            isSubmit\n            disabled={!dateString} />\n\n        </div>\n      </fetcher.Form>\n    </>);\n\n}", "import { Fragment, useEffect, useState } from 'react';\nimport { MdArrowForward, MdCheck, MdReplay } from 'react-icons/md';\nimport Button from '~/components/Buttons/Button';\nimport LoadingButton from '~/components/Buttons/LoadingButton';\nimport ComicDataEditor from '~/components/ComicManager/ComicData';\nimport TagsEditor from '~/components/ComicManager/Tags';\nimport PageManager from '~/components/PageManager/PageManager';\nimport TextInput from '~/components/TextInput/TextInput';\nimport { NewArtist, NewComicData } from '~/routes/contribute/upload';\nimport { ArtistTiny, Comic, ComicTiny, Tag, UserSession } from '~/types/types';\nimport { ComicImage, FieldChange } from '~/utils/general';\nimport { useGoodFetcher } from '~/utils/useGoodFetcher';\nimport useWindowSize from '~/utils/useWindowSize';\n\ntype LiveComicProps = {\n  comic: Comic;\n  user: UserSession;\n  allComics: ComicTiny[];\n  allArtists: ArtistTiny[];\n  allTags: Tag[];\n  PAGES_PATH: string;\n};\n\nexport default function LiveComic({\n  comic,\n  user,\n  allComics,\n  allArtists,\n  allTags,\n  PAGES_PATH,\n}: LiveComicProps) {\n  const unlistFetcher = useGoodFetcher({\n    url: '/api/admin/unlist-comic',\n    method: 'post',\n    toastSuccessMessage: 'Comic unlisted',\n    onFinish: cancelUnlisting,\n  });\n  const saveChangesFetcher = useGoodFetcher({\n    url: '/api/admin/update-comic-data',\n    method: 'post',\n    toastSuccessMessage: 'Changes saved',\n    onFinish: () => setNeedsUpdate(true),\n  });\n  const { isMobile } = useWindowSize();\n\n  const [isUnlisting, setIsUnlisting] = useState(false);\n  const [unlistComment, setUnlistComment] = useState('');\n  const [updatedComicData, setUpdatedComicData] = useState<NewComicData>();\n  const [comicDataChanges, setComicDataChanges] = useState<FieldChange[]>([]);\n  const [needsUpdate, setNeedsUpdate] = useState(false);\n\n  useEffect(() => {\n    setComicDataChanges(\n      getComicDataChanges(updatedComicData, comic, allArtists, allComics)\n    );\n  }, [updatedComicData]);\n\n  useEffect(() => {\n    if (\n      !updatedComicData?.comicName ||\n      needsUpdate ||\n      comic.id !== updatedComicData.comicId\n    ) {\n      setInitialComicData();\n      setNeedsUpdate(false);\n    }\n  }, [comic]);\n\n  function setInitialComicData() {\n    const newUpdatedComicData = setupInitialUpdatedComic(comic);\n    setUpdatedComicData(newUpdatedComicData);\n  }\n\n  function saveComicDataChanges() {\n    if (!comicDataChanges) return;\n\n    const body: ComicDataChanges = {\n      comicId: comic.id,\n    };\n    for (const change of comicDataChanges) {\n      if (change.field === 'Name') {\n        body.name = change.newDataValue;\n      } else if (change.field === 'Artist') {\n        body.artistId = change.newDataValue;\n      } else if (change.field === 'New tags' || change.field === 'Removed tags') {\n        body.tagIds = change.newDataValue;\n      } else if (change.field === 'Category') {\n        body.category = change.newDataValue;\n      } else if (change.field === 'Classification') {\n        body.classification = change.newDataValue;\n      } else if (change.field === 'State') {\n        body.state = change.newDataValue;\n      } else if (change.field === 'Previous comic') {\n        body.previousComicId = change.newDataValue;\n      } else if (change.field === 'Next comic') {\n        body.nextComicId = change.newDataValue;\n      }\n    }\n\n    saveChangesFetcher.submit({ body: JSON.stringify(body) });\n  }\n\n  function unlistComic() {\n    unlistFetcher.submit({ comicId: comic.id.toString(), unlistComment: unlistComment });\n  }\n\n  function cancelUnlisting() {\n    setIsUnlisting(false);\n    setUnlistComment('');\n  }\n\n  const isNameChangedAndInvalid =\n    comicDataChanges.some(change => change.field === 'Name') &&\n    !updatedComicData?.validation.isLegalComicName;\n\n  const canSave =\n    !isNameChangedAndInvalid && updatedComicData?.artistId && updatedComicData.comicName;\n\n  const comicPages: ComicImage[] = [];\n  for (let i = 0; i < comic.numberOfPages; i++) {\n    comicPages.push({\n      url: `${PAGES_PATH}/${comic.name}/00${i + 1}.jpg`,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <h4 className=\"mb-1\">Comic data</h4>\n        {updatedComicData && (\n          <>\n            <ComicDataEditor\n              comicData={updatedComicData}\n              artists={allArtists}\n              comics={allComics}\n              onUpdate={setUpdatedComicData}\n              existingComic={comic}\n              isAdminPanel={true}\n            />\n\n            <TagsEditor\n              allTags={allTags}\n              comicData={updatedComicData}\n              onUpdate={setUpdatedComicData}\n              className=\"mt-8 max-w-5xl\"\n            />\n          </>\n        )}\n\n        {comicDataChanges.length > 0 && (\n          <>\n            <div\n              className={`py-2 px-4 bg-theme1-primaryTrans flex flex-col gap-1 mt-6 ${\n                isMobile ? '' : 'w-fit'\n              }`}\n            >\n              <h4>Changes</h4>\n              <div\n                className={`grid ${isMobile ? 'gap-y-2' : 'gap-x-4'}`}\n                style={{ gridTemplateColumns: isMobile ? 'auto' : 'auto auto' }}\n              >\n                {comicDataChanges.map(change => {\n                  const hasDetails = !!change.newValue;\n\n                  return isMobile ? (\n                    <div key={change.field}>\n                      <p className={hasDetails ? '' : 'col-span-2'}>\n                        <b>{change.field}:</b>\n                      </p>\n                      {hasDetails && (\n                        <p>\n                          {change.oldValue ? (\n                            <>\n                              {change.oldValue} <MdArrowForward /> {change.newValue}\n                            </>\n                          ) : (\n                            change.newValue\n                          )}\n                        </p>\n                      )}\n                    </div>\n                  ) : (\n                    <Fragment key={change.field}>\n                      <p className={hasDetails ? '' : 'col-span-2'}>\n                        <b>{change.field}</b>\n                      </p>\n                      {hasDetails && (\n                        <p>\n                          {change.oldValue ? (\n                            <>\n                              {change.oldValue} <MdArrowForward /> {change.newValue}\n                            </>\n                          ) : (\n                            change.newValue\n                          )}\n                        </p>\n                      )}\n                    </Fragment>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className=\"flex flex-row gap-2 mt-4\">\n              <Button\n                variant=\"outlined\"\n                text=\"Revert changes\"\n                onClick={setInitialComicData}\n                startIcon={MdReplay}\n              />\n              <LoadingButton\n                text=\"Save changes\"\n                isLoading={saveChangesFetcher.isLoading}\n                onClick={saveComicDataChanges}\n                startIcon={MdCheck}\n                disabled={!canSave}\n              />\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"mt-8\">\n        <h3>Thumbnail</h3>\n      </div>\n\n      <div className=\"mt-8\">\n        <h3>Pages</h3>\n\n        <PageManager\n          files={comicPages}\n          onChange={newFiles => {\n            console.log(newFiles);\n          }}\n        />\n      </div>\n\n      {user.userType === 'admin' && comic.publishStatus !== 'unlisted' && (\n        <div className=\"mt-8\">\n          <h3>Admin tools</h3>\n\n          {!isUnlisting && (\n            <Button\n              text=\"Unlist comic\"\n              className=\"mt-2\"\n              onClick={() => setIsUnlisting(true)}\n              color=\"error\"\n            />\n          )}\n\n          {isUnlisting && (\n            <div className=\"mt-2\">\n              <h4>Unlist comic</h4>\n              <TextInput\n                label=\"Reason for unlisting\"\n                value={unlistComment}\n                onChange={setUnlistComment}\n                className=\"mb-2 max-w-lg\"\n                name=\"unlistComment\"\n              />\n              <div className=\"flex flex-row gap-2 mt-2\">\n                <Button text=\"Cancel\" onClick={cancelUnlisting} variant=\"outlined\" />\n                <LoadingButton\n                  text=\"Confirm unlisting\"\n                  isLoading={unlistFetcher.isLoading}\n                  onClick={unlistComic}\n                  color=\"error\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nconst emptyUnusedNewArtist: NewArtist = {\n  artistName: '',\n  e621Name: '',\n  patreonName: '',\n  links: [],\n};\n\nexport type ComicDataChanges = {\n  comicId: number;\n  name?: string;\n  artistId?: number;\n  tagIds?: number[];\n  category?: string;\n  classification?: string;\n  state?: string;\n  previousComicId?: number;\n  nextComicId?: number;\n};\n\nfunction setupInitialUpdatedComic(comic: Comic): NewComicData {\n  const newComicData: NewComicData = {\n    comicId: comic.id,\n    comicName: comic.name,\n    artistId: comic.artist.id,\n    category: comic.category,\n    classification: comic.classification,\n    state: comic.state,\n    validation: {\n      isLegalComicName: true,\n    },\n    tags: comic.tags,\n    previousComic: comicLinkToTinyComic(comic.previousComic),\n    nextComic: comicLinkToTinyComic(comic.nextComic),\n    files: [],\n    newArtist: emptyUnusedNewArtist,\n  };\n\n  return newComicData;\n}\n\nfunction comicLinkToTinyComic(comic?: {\n  name: string;\n  id: number;\n}): ComicTiny | undefined {\n  if (!comic) return undefined;\n  if (comic) {\n    const tinyComic: ComicTiny = {\n      id: comic.id,\n      name: comic.name,\n      publishStatus: 'published',\n    };\n    return tinyComic;\n  }\n}\n\nfunction getComicDataChanges(\n  updatedComicData: NewComicData | undefined,\n  comic: Comic,\n  allArtists: ArtistTiny[],\n  allComics: ComicTiny[]\n): FieldChange[] {\n  if (!updatedComicData) return [];\n  const changes: FieldChange[] = [];\n\n  if (comic.name !== updatedComicData.comicName) {\n    changes.push({\n      field: 'Name',\n      oldValue: comic.name,\n      newValue: updatedComicData.comicName,\n      newDataValue: updatedComicData.comicName,\n    });\n  }\n  if (comic.artist.id !== updatedComicData.artistId) {\n    changes.push({\n      field: 'Artist',\n      oldValue: comic.artist.name,\n      newValue: allArtists.find(a => a.id === updatedComicData.artistId)?.name,\n      newDataValue: updatedComicData.artistId,\n    });\n  }\n  if (comic.category !== updatedComicData.category) {\n    changes.push({\n      field: 'Category',\n      oldValue: comic.category,\n      newValue: updatedComicData.category,\n      newDataValue: updatedComicData.category,\n    });\n  }\n  if (comic.classification !== updatedComicData.classification) {\n    changes.push({\n      field: 'Classification',\n      oldValue: comic.classification,\n      newValue: updatedComicData.classification,\n      newDataValue: updatedComicData.classification,\n    });\n  }\n  if (comic.state !== updatedComicData.state) {\n    changes.push({\n      field: 'State',\n      oldValue: comic.state,\n      newValue: updatedComicData.state,\n      newDataValue: updatedComicData.state,\n    });\n  }\n  if (comic.previousComic?.id !== updatedComicData.previousComic?.id) {\n    changes.push({\n      field: 'Previous comic',\n      oldValue: comic.previousComic?.name || 'None',\n      newValue:\n        allComics.find(c => c.id === updatedComicData.previousComic?.id)?.name || 'None',\n      newDataValue: updatedComicData.previousComic?.id,\n    });\n  }\n  if (comic.nextComic?.id !== updatedComicData.nextComic?.id) {\n    changes.push({\n      field: 'Next comic',\n      oldValue: comic.nextComic?.name || 'None',\n      newValue:\n        allComics.find(c => c.id === updatedComicData.nextComic?.id)?.name || 'None',\n      newDataValue: updatedComicData.nextComic?.id,\n    });\n  }\n\n  let newTags: Tag[] = [];\n  let removedTags: Tag[] = [];\n  for (const tag of comic.tags) {\n    if (!updatedComicData.tags.find(t => t.id === tag.id)) {\n      removedTags.push(tag);\n    }\n  }\n  for (const tag of updatedComicData.tags) {\n    if (!comic.tags.find(t => t.id === tag.id)) {\n      newTags.push(tag);\n    }\n  }\n  if (newTags.length > 0) {\n    changes.push({\n      field: 'New tags',\n      oldValue: undefined,\n      newValue: `${newTags.length}: ${newTags.map(t => t.name).join(', ')}`,\n      newDataValue: updatedComicData.tags.map(t => t.id),\n    });\n  }\n  if (removedTags.length > 0) {\n    changes.push({\n      field: 'Removed tags',\n      oldValue: undefined,\n      newValue: `${removedTags.length}: ${removedTags.map(t => t.name).join(', ')}`,\n      newDataValue: updatedComicData.tags.map(t => t.id),\n    });\n  }\n\n  return changes;\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData, useOutletContext, useRevalidator } from '@remix-run/react';\nimport { format } from 'date-fns';\nimport { MdOpenInNew } from 'react-icons/md';\nimport Link from '~/components/Link';\nimport { GlobalAdminContext } from '~/routes/admin';\nimport { getComicById } from '~/routes/api/funcs/get-comic';\nimport { Comic } from '~/types/types';\nimport { redirectIfNotMod } from '~/utils/loaders';\nimport { processApiError } from '~/utils/request-helpers';\nimport AnonUploadSection from './AnonUploadedComicSection';\nimport LiveComic from './LiveComic';\nimport PendingComicSection from './PendingComicSection';\nimport UnlistedComicSection from './UnlistedComicSection';\nimport UserUploadSection from './UserUploadedComicSection';\n\nexport default function ManageComicInner() {\n  const revalidator = useRevalidator();\n  const globalContext: GlobalAdminContext = useOutletContext();\n  const { comic: maybeComic, user, PAGES_PATH } = useLoaderData<typeof loader>();\n  if (!maybeComic) {\n    return <div>Comic not found</div>;\n  }\n  const comic = maybeComic as Comic;\n\n  const isAnonUpload =\n    comic.publishStatus === 'uploaded' && !comic.metadata?.uploadUserId;\n  const isUserUpload = comic.publishStatus === 'uploaded' && comic.metadata?.uploadUserId;\n  const isPendingOrScheduled =\n    comic.publishStatus === 'pending' || comic.publishStatus === 'scheduled';\n  const isRejected =\n    comic.publishStatus === 'rejected' || comic.publishStatus === 'rejected-list';\n\n  function updateComic() {\n    revalidator.revalidate();\n  }\n\n  return (\n    <>\n      <h2 className=\"mb-2\">{comic.name}</h2>\n\n      {isRejected && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit\">\n          <h3>Rejected comic</h3>\n          <p className=\"mb-2\">This comic has been rejected.</p>\n          {comic.publishStatus === 'rejected' && (\n            <p>It has not been added to the ban list.</p>\n          )}\n          {comic.publishStatus === 'rejected-list' && (\n            <>\n              <p>\n                It has been added to the ban list, so users will be warned when trying to\n                suggest or upload comics with this name.\n              </p>\n              {comic.metadata?.modComment && (\n                <p>Mod comment: {comic.metadata.modComment}</p>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      {isAnonUpload && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit\">\n          <h3>User-uploaded comic, anonymous</h3>\n          <AnonUploadSection comicData={comic} updateComic={updateComic} />\n        </div>\n      )}\n\n      {isUserUpload && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit\">\n          <h3>User-uploaded comic</h3>\n          <UserUploadSection comicData={comic} updateComic={updateComic} />\n        </div>\n      )}\n\n      {isPendingOrScheduled && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit\">\n          <h3>Pending comic</h3>\n          <p className=\"mb-4\">\n            This comic is not live. It has been uploaded by a mod, or by a user and then\n            passed mod review. Once all data is correct, an admin can schedule or publish\n            the comic.\n          </p>\n\n          <PendingComicSection comicData={comic} updateComic={updateComic} />\n        </div>\n      )}\n\n      {comic.publishStatus === 'unlisted' && (\n        <div className=\"bg-theme1-primaryTrans p-4 pt-3 w-fit\">\n          <h3>Unlisted comic</h3>\n          <UnlistedComicSection comicData={comic} updateComic={updateComic} user={user} />\n        </div>\n      )}\n\n      {comic.publishStatus === 'published' && (\n        <>\n          <p className=\"text-lg text-theme1-darker\">\n            This comic is live!\n            <Link\n              href={`/${comic.name}`}\n              className=\"ml-2\"\n              text=\"View live comic\"\n              IconRight={MdOpenInNew}\n              newTab\n            />\n          </p>\n          {comic.published && comic.updated && (\n            <>\n              <p>Published: {format(new Date(comic.published), 'PPP')}</p>\n              <p>Last updated: {format(new Date(comic.updated), 'PPP')}</p>\n            </>\n          )}\n        </>\n      )}\n\n      <LiveComic\n        comic={comic}\n        user={user}\n        allComics={globalContext.comics}\n        allArtists={globalContext.artists}\n        allTags={globalContext.tags}\n        PAGES_PATH={PAGES_PATH}\n      />\n    </>\n  );\n}\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const user = await redirectIfNotMod(args);\n  const urlBase = args.context.DB_API_URL_BASE;\n  const comicParam = args.params.comic as string;\n  const comicId = parseInt(comicParam);\n\n  const { comic, err } = await getComicById(urlBase, comicId);\n  if (err) {\n    return processApiError('Error getting comic in admin>comic', err);\n  }\n  return { comic, user, PAGES_PATH: args.context.PAGES_PATH };\n}\n", "import { LoaderFunctionArgs } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { MdCheck, MdClose } from 'react-icons/md';\nimport { Table, TableBody, TableCell, TableHeadRow, TableRow } from '~/components/Table';\nimport { queryDbMultiple } from '~/utils/database-facade';\nimport { createSuccessJson, makeDbErr, processApiError } from '~/utils/request-helpers';\n\ntype SiteStats = {\n  totalUsers: number;\n  totalComics: number;\n  totalArtists: number;\n  totalPages: number;\n  adPayments: {\n    amount: number;\n    year: number;\n  }[];\n  ads: {\n    card: {\n      active: number;\n      expired: number;\n    };\n    banner: {\n      active: number;\n      expired: number;\n    };\n    topSmall: {\n      active: number;\n      expired: number;\n    };\n  };\n  contributions: {\n    loggedIn: ContributionData;\n    guests: ContributionData;\n  };\n};\n\ntype ContributionData = {\n  comicUploadRejected: number;\n  comicUploadterrible: number;\n  comicUploadpageissues: number;\n  comicUploadmajorissues: number;\n  comicUploadminorissues: number;\n  comicUploadexcellent: number;\n  comicSuggestiongood: number;\n  comicSuggestionbad: number;\n  comicSuggestionRejected: number;\n  comicProblem: number;\n  comicProblemRejected: number;\n  tagSuggestion: number;\n  tagSuggestionRejected: number;\n};\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const urlBase = args.context.DB_API_URL_BASE;\n  const userQuery = { query: 'SELECT COUNT(*) AS count FROM user' };\n  const totalComicsQuery = {\n    query: `SELECT COUNT(*) AS count FROM comic WHERE publishStatus = 'published'`,\n  };\n  const totalArtistsQuery = {\n    query:\n      'SELECT COUNT(*) AS count FROM artist WHERE isBanned = 0 AND isPending = 0 AND isRejected = 0',\n  };\n  const pagesQuery = {\n    query: `SELECT SUM(numberOfpages) AS count FROM comic WHERE publishStatus = 'published'`,\n  };\n  const adsQuery = {\n    query: `SELECT\n      COUNT(*) AS count, status, adType FROM advertisement WHERE status = 'ACTIVE' || status = 'ENDED'\n      GROUP BY status, adType`,\n  };\n  const contributionsQuery = {\n    query: `SELECT\n      ISNULL(userid) AS isGuest,\n      SUM(tagSuggestion) AS tagSuggestion,\n      SUM(tagSuggestionRejected) AS tagSuggestionRejected,\n      SUM(comicProblem) AS comicProblem,\n      SUM(comicProblemRejected) AS comicProblemRejected,\n      SUM(comicSuggestiongood) AS comicSuggestiongood,\n      SUM(comicSuggestionbad) AS comicSuggestionbad,\n      SUM(comicSuggestionRejected) AS comicSuggestionRejected,\n      SUM(comicUploadexcellent) AS comicUploadexcellent,\n      SUM(comicUploadminorissues) AS comicUploadminorissues,\n      SUM(comicUploadmajorissues) AS comicUploadmajorissues,\n      SUM(comicUploadpageissues) AS comicUploadpageissues,\n      SUM(comicUploadterrible) AS comicUploadterrible,\n      SUM(comicUploadRejected) AS comicUploadRejected\n    FROM contributionpoints\n    LEFT JOIN user ON (user.id = contributionpoints.userId)\n    WHERE (\n      user.UserType IS NULL\n      OR (user.UserType != 'moderator' AND user.userType != 'admin')\n    )\n    GROUP BY isGuest`,\n  };\n  const adPaymentQuery = {\n    query: `SELECT SUM(amount) AS amount, YEAR(registeredDate) AS year\n      FROM advertisementpayment GROUP BY year ORDER BY year desc`,\n  };\n\n  const dbRes = await queryDbMultiple<\n    [\n      // { count: number }[],\n      { result: [{ count: number }] },\n      { result: [{ count: number }] },\n      { result: [{ count: number }] },\n      { result: [{ count: number }] },\n      {\n        result: {\n          count: number;\n          status: 'ACTIVE' | 'ENDED';\n          adType: 'topSmall' | 'card' | 'banner';\n        }[];\n      },\n      {\n        result: {\n          isGuest: number;\n          tagSuggestion: number;\n          tagSuggestionRejected: number;\n          comicProblem: number;\n          comicProblemRejected: number;\n          comicSuggestiongood: number;\n          comicSuggestionbad: number;\n          comicSuggestionRejected: number;\n          comicUploadexcellent: number;\n          comicUploadminorissues: number;\n          comicUploadmajorissues: number;\n          comicUploadpageissues: number;\n          comicUploadterrible: number;\n          comicUploadRejected: number;\n        }[];\n      },\n      {\n        result: {\n          amount: number;\n          year: number;\n        }[];\n      }\n    ]\n  >(urlBase, [\n    userQuery,\n    totalComicsQuery,\n    totalArtistsQuery,\n    pagesQuery,\n    adsQuery,\n    contributionsQuery,\n    adPaymentQuery,\n  ]);\n\n  if (dbRes.isError || !dbRes.result) {\n    return await processApiError('Error in GET /stats', makeDbErr(dbRes, 'DB error'));\n  }\n\n  const adsRes = dbRes.result[4].result;\n  const contribRes = dbRes.result[5].result;\n\n  const siteStats: SiteStats = {\n    totalUsers: dbRes.result[0].result[0].count,\n    totalComics: dbRes.result[1].result[0].count,\n    totalArtists: dbRes.result[2].result[0].count,\n    totalPages: dbRes.result[3].result[0].count,\n    adPayments: dbRes.result[6].result,\n    ads: {\n      banner: {\n        active:\n          adsRes.find(adRes => adRes.adType === 'banner' && adRes.status === 'ACTIVE')\n            ?.count || 0,\n        expired:\n          adsRes.find(adRes => adRes.adType === 'banner' && adRes.status === 'ENDED')\n            ?.count || 0,\n      },\n      card: {\n        active:\n          adsRes.find(adRes => adRes.adType === 'card' && adRes.status === 'ACTIVE')\n            ?.count || 0,\n        expired:\n          adsRes.find(adRes => adRes.adType === 'card' && adRes.status === 'ENDED')\n            ?.count || 0,\n      },\n      topSmall: {\n        active:\n          adsRes.find(adRes => adRes.adType === 'topSmall' && adRes.status === 'ACTIVE')\n            ?.count || 0,\n        expired:\n          adsRes.find(adRes => adRes.adType === 'topSmall' && adRes.status === 'ENDED')\n            ?.count || 0,\n      },\n    },\n    contributions: {\n      loggedIn: contribRes.find(c => c.isGuest === 0) as ContributionData,\n      guests: contribRes.find(c => c.isGuest === 1) as ContributionData,\n    },\n  };\n\n  return siteStats;\n}\n\nexport default function Stats({}) {\n  const stats = useLoaderData<typeof loader>();\n  const ads = stats.ads;\n  const contrib = stats.contributions;\n\n  const guestUploadTotal =\n    contrib.guests.comicUploadRejected +\n    contrib.guests.comicUploadexcellent +\n    contrib.guests.comicUploadmajorissues +\n    contrib.guests.comicUploadminorissues +\n    contrib.guests.comicUploadpageissues +\n    contrib.guests.comicUploadterrible;\n  const guestUploadAccepted = guestUploadTotal - contrib.guests.comicUploadRejected;\n  const guestUploadRejected = guestUploadTotal - guestUploadAccepted;\n\n  let userUploadTotal =\n    contrib.loggedIn.comicUploadRejected +\n    contrib.loggedIn.comicUploadexcellent +\n    contrib.loggedIn.comicUploadmajorissues +\n    contrib.loggedIn.comicUploadminorissues +\n    contrib.loggedIn.comicUploadpageissues +\n    contrib.loggedIn.comicUploadterrible;\n  let userUploadAccepted = userUploadTotal - contrib.loggedIn.comicUploadRejected;\n  let userUploadRejected = userUploadTotal - userUploadAccepted;\n\n  const uploadsTotal = guestUploadTotal + userUploadTotal;\n\n  const comicSuggLoggedIn =\n    contrib.loggedIn.comicSuggestiongood + contrib.loggedIn.comicSuggestionbad;\n  const comicSuggGuests =\n    contrib.guests.comicSuggestiongood + contrib.guests.comicSuggestionbad;\n  const comicSuggTotal = comicSuggLoggedIn + comicSuggGuests;\n\n  const comicProbTotal =\n    contrib.loggedIn.comicProblem +\n    contrib.guests.comicProblem +\n    contrib.loggedIn.comicProblemRejected +\n    contrib.guests.comicProblemRejected;\n\n  const tagSuggTotal =\n    contrib.loggedIn.tagSuggestion +\n    contrib.guests.tagSuggestion +\n    contrib.loggedIn.tagSuggestionRejected +\n    contrib.guests.tagSuggestionRejected;\n\n  return (\n    <>\n      <h1>Stats</h1>\n\n      <h2>General</h2>\n      <p>\n        <b>{stats.totalUsers}</b> users\n      </p>\n      <p>\n        <b>{stats.totalComics}</b> comics\n      </p>\n      <p>\n        <b>{stats.totalArtists}</b> artists\n      </p>\n      <p>\n        <b>{stats.totalPages}</b> pages\n      </p>\n\n      <h2 className=\"mt-4\">Contributions</h2>\n      <Table horizontalScroll>\n        <TableHeadRow>\n          <TableCell> </TableCell>\n          <TableCell>Total</TableCell>\n          <TableCell>Users</TableCell>\n          <TableCell>Guests</TableCell>\n        </TableHeadRow>\n        <TableBody className=\"text-green-600 dark:text-green-400\">\n          <TableRow>\n            <TableCell>\n              <b>Uploads total</b>\n            </TableCell>\n            <TableCell>{uploadsTotal}</TableCell>\n            <TableCell>{userUploadTotal}</TableCell>\n            <TableCell>{guestUploadTotal}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>\n                <MdCheck /> Accepted tot\n              </b>\n            </TableCell>\n            <TableCell>\n              {guestUploadAccepted + userUploadAccepted}{' '}\n              {getRoundedPercent(guestUploadAccepted + userUploadAccepted, uploadsTotal)}\n            </TableCell>\n            <TableCell>\n              {userUploadAccepted}{' '}\n              {getRoundedPercent(userUploadAccepted, userUploadTotal)}\n            </TableCell>\n            <TableCell>\n              {guestUploadAccepted}{' '}\n              {getRoundedPercent(guestUploadAccepted, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Excellent\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadexcellent +\n                contrib.guests.comicUploadexcellent}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadexcellent +\n                  contrib.guests.comicUploadexcellent,\n                uploadsTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadexcellent}{' '}\n              {getRoundedPercent(contrib.loggedIn.comicUploadexcellent, userUploadTotal)}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicUploadexcellent}{' '}\n              {getRoundedPercent(contrib.guests.comicUploadexcellent, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Minor issues\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadminorissues +\n                contrib.guests.comicUploadminorissues}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadminorissues +\n                  contrib.guests.comicUploadminorissues,\n                uploadsTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadminorissues}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadminorissues,\n                userUploadTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicUploadminorissues}{' '}\n              {getRoundedPercent(contrib.guests.comicUploadminorissues, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Major issues\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadmajorissues +\n                contrib.guests.comicUploadmajorissues}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadmajorissues +\n                  contrib.guests.comicUploadmajorissues,\n                uploadsTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadmajorissues}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadmajorissues,\n                userUploadTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicUploadmajorissues}{' '}\n              {getRoundedPercent(contrib.guests.comicUploadmajorissues, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Page issues\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadpageissues +\n                contrib.guests.comicUploadpageissues}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadpageissues +\n                  contrib.guests.comicUploadpageissues,\n                uploadsTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadpageissues}{' '}\n              {getRoundedPercent(contrib.loggedIn.comicUploadpageissues, userUploadTotal)}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicUploadpageissues}{' '}\n              {getRoundedPercent(contrib.guests.comicUploadpageissues, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Terrible\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadterrible + contrib.guests.comicUploadterrible}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicUploadterrible + contrib.guests.comicUploadterrible,\n                uploadsTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicUploadterrible}{' '}\n              {getRoundedPercent(contrib.loggedIn.comicUploadterrible, userUploadTotal)}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicUploadterrible}{' '}\n              {getRoundedPercent(contrib.guests.comicUploadterrible, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <b>\n                <MdClose /> Rejected\n              </b>\n            </TableCell>\n            <TableCell>\n              {guestUploadRejected + userUploadRejected}{' '}\n              {getRoundedPercent(guestUploadRejected + userUploadRejected, uploadsTotal)}\n            </TableCell>\n            <TableCell>\n              {userUploadRejected}{' '}\n              {getRoundedPercent(userUploadRejected, userUploadTotal)}\n            </TableCell>\n            <TableCell>\n              {guestUploadRejected}{' '}\n              {getRoundedPercent(guestUploadRejected, guestUploadTotal)}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n        <TableBody className=\"dark:text-blue-400 text-blue-600\">\n          <TableRow>\n            <TableCell>\n              <b>Comic suggestions</b>\n            </TableCell>\n            <TableCell>{comicSuggTotal}</TableCell>\n            <TableCell>{comicSuggLoggedIn}</TableCell>\n            <TableCell>{comicSuggGuests}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Good\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestiongood + contrib.guests.comicSuggestiongood}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicSuggestiongood + contrib.guests.comicSuggestiongood,\n                comicSuggTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestiongood}{' '}\n              {getRoundedPercent(contrib.loggedIn.comicSuggestiongood, comicSuggLoggedIn)}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicSuggestiongood}{' '}\n              {getRoundedPercent(contrib.guests.comicSuggestiongood, comicSuggGuests)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Bad\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestionbad + contrib.guests.comicSuggestionbad}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicSuggestionbad + contrib.guests.comicSuggestionbad,\n                comicSuggTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestionbad}{' '}\n              {getRoundedPercent(contrib.loggedIn.comicSuggestionbad, comicSuggLoggedIn)}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicSuggestionbad}{' '}\n              {getRoundedPercent(contrib.guests.comicSuggestionbad, comicSuggGuests)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdClose /> Rejected\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestionRejected +\n                contrib.guests.comicSuggestionRejected}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicSuggestionRejected +\n                  contrib.guests.comicSuggestionRejected,\n                comicSuggTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicSuggestionRejected}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicSuggestionRejected,\n                comicSuggLoggedIn\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicSuggestionRejected}{' '}\n              {getRoundedPercent(contrib.guests.comicSuggestionRejected, comicSuggGuests)}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n        <TableBody className=\"dark:text-purple-400 text-purple-600\">\n          <TableRow>\n            <TableCell>\n              <b>Comic problems</b>\n            </TableCell>\n            <TableCell>{comicProbTotal}</TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicProblem + contrib.loggedIn.comicProblemRejected}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicProblem + contrib.guests.comicProblemRejected}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Approved\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicProblem + contrib.guests.comicProblem}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicProblem + contrib.guests.comicProblem,\n                comicProbTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.comicProblem}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.comicProblem,\n                contrib.loggedIn.comicProblem + contrib.loggedIn.comicProblemRejected\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.comicProblem}{' '}\n              {getRoundedPercent(\n                contrib.guests.comicProblem,\n                contrib.guests.comicProblem + contrib.guests.comicProblemRejected\n              )}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n        <TableBody className=\"dark:text-yellow-500 text-yellow-600\">\n          <TableRow>\n            <TableCell>\n              <b>Tag suggestions</b>\n            </TableCell>\n            <TableCell>{tagSuggTotal}</TableCell>\n            <TableCell>\n              {contrib.loggedIn.tagSuggestion + contrib.guests.tagSuggestionRejected}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.tagSuggestion + contrib.guests.tagSuggestionRejected}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <MdCheck /> Approved\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.tagSuggestion + contrib.guests.tagSuggestion}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.tagSuggestion + contrib.guests.tagSuggestion,\n                tagSuggTotal\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.loggedIn.tagSuggestion}{' '}\n              {getRoundedPercent(\n                contrib.loggedIn.tagSuggestion,\n                contrib.loggedIn.tagSuggestion + contrib.loggedIn.tagSuggestionRejected\n              )}\n            </TableCell>\n            <TableCell>\n              {contrib.guests.tagSuggestion}{' '}\n              {getRoundedPercent(\n                contrib.guests.tagSuggestion,\n                contrib.guests.tagSuggestion + contrib.guests.tagSuggestionRejected\n              )}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n\n      <h2 className=\"mt-4\">Avertising</h2>\n      <div className=\"flex flex-row flex-wrap gap-x-8 gap-y-4\">\n        <Table className=\"h-fit\">\n          <TableHeadRow>\n            <TableCell>Ad type</TableCell>\n            <TableCell>Active</TableCell>\n            <TableCell>Expired</TableCell>\n          </TableHeadRow>\n          <TableBody>\n            <TableRow>\n              <TableCell>Total</TableCell>\n              <TableCell>\n                {ads.banner.active + ads.card.active + ads.topSmall.active}\n              </TableCell>\n              <TableCell>\n                {ads.banner.expired + ads.card.expired + ads.topSmall.expired}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Card</TableCell>\n              <TableCell>{ads.card.active}</TableCell>\n              <TableCell>{ads.card.expired}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Banner</TableCell>\n              <TableCell>{ads.banner.active}</TableCell>\n              <TableCell>{ads.banner.expired}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Top of page</TableCell>\n              <TableCell>{ads.topSmall.active}</TableCell>\n              <TableCell>{ads.topSmall.expired}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n\n        <Table className=\"h-fit\">\n          <TableHeadRow>\n            <TableCell>Year</TableCell>\n            <TableCell>Money</TableCell>\n          </TableHeadRow>\n          <TableBody>\n            {stats.adPayments.map(({ year, amount }) => (\n              <TableRow key={year}>\n                <TableCell>{year}</TableCell>\n                <TableCell>${amount}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </>\n  );\n}\n\nfunction getRoundedPercent(num?: number, total?: number) {\n  if (!num || !total) return '';\n  return '(' + Math.round((num / total) * 100) + '%)';\n}\n", "export default function TagManager({}) {\n  return (\n    <>\n      <h1>Tag manager</h1>\n    </>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-TY6G7OQA.js','imports':['/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-NOZAJOD3.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-GYC7E6GP.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-YN5CMY25.js','imports':['/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-GA6XGWX7.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-ANBBMAVX.js','imports':['/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/admin/artists':{'id':'routes/admin/artists','parentId':'routes/admin','path':'artists','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/artists-POSLSZVG.js','imports':['/build/_shared/chunk-TGGKCCFQ.js','/build/_shared/chunk-KEMJ7ID2.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/artists/$artist':{'id':'routes/admin/artists/$artist','parentId':'routes/admin/artists','path':':artist','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/artists/$artist-W7BLBN3V.js','imports':['/build/_shared/chunk-T7R3HSKW.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-GA6XGWX7.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/admin/comics':{'id':'routes/admin/comics','parentId':'routes/admin','path':'comics','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics-6MQ5EKIY.js','imports':['/build/_shared/chunk-TGGKCCFQ.js','/build/_shared/chunk-KEMJ7ID2.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/$comic':{'id':'routes/admin/comics/$comic','parentId':'routes/admin/comics','path':':comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/$comic-OG4TNGG2.js','imports':['/build/_shared/chunk-DWON2V7Z.js','/build/_shared/chunk-U4XMYBJF.js','/build/_shared/chunk-447JW342.js','/build/_shared/chunk-L5XC6NM2.js','/build/_shared/chunk-4YY65RFW.js','/build/_shared/chunk-XMAFLJMK.js','/build/_shared/chunk-EYUBCDIQ.js','/build/_shared/chunk-T7R3HSKW.js','/build/_shared/chunk-SP3O2GUC.js','/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-YARPHBWQ.js','/build/_shared/chunk-MLHRPB57.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-KNUP74JU.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-GA6XGWX7.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/admin/comics/AnonUploadedComicSection':{'id':'routes/admin/comics/AnonUploadedComicSection','parentId':'routes/admin/comics','path':'AnonUploadedComicSection','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/AnonUploadedComicSection-EPMI7XYD.js','imports':['/build/_shared/chunk-U4XMYBJF.js','/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/LiveComic':{'id':'routes/admin/comics/LiveComic','parentId':'routes/admin/comics','path':'LiveComic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/LiveComic-3UBG2TQH.js','imports':['/build/_shared/chunk-DWON2V7Z.js','/build/_shared/chunk-EYUBCDIQ.js','/build/_shared/chunk-T7R3HSKW.js','/build/_shared/chunk-SP3O2GUC.js','/build/_shared/chunk-YARPHBWQ.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/PendingComicSection':{'id':'routes/admin/comics/PendingComicSection','parentId':'routes/admin/comics','path':'PendingComicSection','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/PendingComicSection-6DYAQZLE.js','imports':['/build/_shared/chunk-4YY65RFW.js','/build/_shared/chunk-XMAFLJMK.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-KNUP74JU.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/UnlistedComicSection':{'id':'routes/admin/comics/UnlistedComicSection','parentId':'routes/admin/comics','path':'UnlistedComicSection','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/UnlistedComicSection-N6GBP2HD.js','imports':['/build/_shared/chunk-L5XC6NM2.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/UserUploadedComicSection':{'id':'routes/admin/comics/UserUploadedComicSection','parentId':'routes/admin/comics','path':'UserUploadedComicSection','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/UserUploadedComicSection-RCHDGPWT.js','imports':['/build/_shared/chunk-447JW342.js','/build/_shared/chunk-XMAFLJMK.js','/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-MLHRPB57.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/pending/Error':{'id':'routes/admin/comics/pending/Error','parentId':'routes/admin/comics','path':'pending/Error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/pending/Error-4UUP72JA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/pending/Reject':{'id':'routes/admin/comics/pending/Reject','parentId':'routes/admin/comics','path':'pending/Reject','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/pending/Reject-US3MNLCJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/scheduling/Schedule':{'id':'routes/admin/comics/scheduling/Schedule','parentId':'routes/admin/comics','path':'scheduling/Schedule','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/scheduling/Schedule-WK3YFI5R.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/comics/scheduling/Scheduled':{'id':'routes/admin/comics/scheduling/Scheduled','parentId':'routes/admin/comics','path':'scheduling/Scheduled','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/comics/scheduling/Scheduled-TWQFH4LV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/ComicProblem':{'id':'routes/admin/dashboard/ComicProblem','parentId':'routes/admin','path':'dashboard/ComicProblem','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/ComicProblem-SVKVJST5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/ComicSuggestion':{'id':'routes/admin/dashboard/ComicSuggestion','parentId':'routes/admin','path':'dashboard/ComicSuggestion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/ComicSuggestion-L65PRR4J.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/ComicUpload':{'id':'routes/admin/dashboard/ComicUpload','parentId':'routes/admin','path':'dashboard/ComicUpload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/ComicUpload-ELLWS2DM.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/PendingComicProblem':{'id':'routes/admin/dashboard/PendingComicProblem','parentId':'routes/admin','path':'dashboard/PendingComicProblem','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/PendingComicProblem-22D2UR64.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/TagSuggestion':{'id':'routes/admin/dashboard/TagSuggestion','parentId':'routes/admin','path':'dashboard/TagSuggestion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/TagSuggestion-EJRHOORR.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/dashboard/index':{'id':'routes/admin/dashboard/index','parentId':'routes/admin','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/admin/dashboard/index-YSFEWPNM.js','imports':['/build/_shared/chunk-XMAFLJMK.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-GA6XGWX7.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/admin/pending-comics':{'id':'routes/admin/pending-comics','parentId':'routes/admin','path':'pending-comics','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/pending-comics-UBR33LVP.js','imports':['/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-PVQP6LHP.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-GA6XGWX7.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/admin/stats':{'id':'routes/admin/stats','parentId':'routes/admin','path':'stats','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/stats-TFMU54SU.js','imports':['/build/_shared/chunk-65272WMF.js','/build/_shared/chunk-GA6XGWX7.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/admin/tags':{'id':'routes/admin/tags','parentId':'routes/admin','path':'tags','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/tags-KIYSOAER.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/admin/thumbnails':{'id':'routes/admin/thumbnails','parentId':'routes/admin','path':'thumbnails','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/thumbnails-4F5FGAIV.js','imports':['/build/_shared/chunk-IROW2AMK.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/assign-action':{'id':'routes/api/admin/assign-action','parentId':'root','path':'api/admin/assign-action','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/assign-action-ZSHY64UM.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/dashboard-data':{'id':'routes/api/admin/dashboard-data','parentId':'root','path':'api/admin/dashboard-data','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/dashboard-data-2ZFPG557.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/api/admin/manage-artist':{'id':'routes/api/admin/manage-artist','parentId':'root','path':'api/admin/manage-artist','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/manage-artist-7EREDL26.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/move-queued-comic':{'id':'routes/api/admin/move-queued-comic','parentId':'root','path':'api/admin/move-queued-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/move-queued-comic-JDH7JPON.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/process-anon-upload':{'id':'routes/api/admin/process-anon-upload','parentId':'root','path':'api/admin/process-anon-upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/process-anon-upload-KZJMVF6V.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/process-comic-problem':{'id':'routes/api/admin/process-comic-problem','parentId':'root','path':'api/admin/process-comic-problem','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/process-comic-problem-PAAR6AOW.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/process-comic-suggestion':{'id':'routes/api/admin/process-comic-suggestion','parentId':'root','path':'api/admin/process-comic-suggestion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/process-comic-suggestion-FQVDP735.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/process-tag-suggestion':{'id':'routes/api/admin/process-tag-suggestion','parentId':'root','path':'api/admin/process-tag-suggestion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/process-tag-suggestion-SO6BR7L3.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/process-user-upload':{'id':'routes/api/admin/process-user-upload','parentId':'root','path':'api/admin/process-user-upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/process-user-upload-P33X4XXS.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/publish-comic':{'id':'routes/api/admin/publish-comic','parentId':'root','path':'api/admin/publish-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/publish-comic-YSBHBSES.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/publish-comics-cron':{'id':'routes/api/admin/publish-comics-cron','parentId':'root','path':'api/admin/publish-comics-cron','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/publish-comics-cron-UTCL3D5T.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/api/admin/recalculate-publishing-queue':{'id':'routes/api/admin/recalculate-publishing-queue','parentId':'root','path':'api/admin/recalculate-publishing-queue','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/recalculate-publishing-queue-RBBKFGFP.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/reject-pending-comic':{'id':'routes/api/admin/reject-pending-comic','parentId':'root','path':'api/admin/reject-pending-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/reject-pending-comic-32HNKDLF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/relist-comic':{'id':'routes/api/admin/relist-comic','parentId':'root','path':'api/admin/relist-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/relist-comic-NJHZA6I2.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/api/admin/schedule-comic':{'id':'routes/api/admin/schedule-comic','parentId':'root','path':'api/admin/schedule-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/schedule-comic-JGB72US5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/schedule-comic-to-queue':{'id':'routes/api/admin/schedule-comic-to-queue','parentId':'root','path':'api/admin/schedule-comic-to-queue','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/schedule-comic-to-queue-OMTZWTI2.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/set-comic-error':{'id':'routes/api/admin/set-comic-error','parentId':'root','path':'api/admin/set-comic-error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/set-comic-error-BSQ7JZ4C.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/toggle-artist-ban':{'id':'routes/api/admin/toggle-artist-ban','parentId':'root','path':'api/admin/toggle-artist-ban','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/toggle-artist-ban-V4OWDFEA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/unassign-action':{'id':'routes/api/admin/unassign-action','parentId':'root','path':'api/admin/unassign-action','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/unassign-action-LIF564OL.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/unlist-comic':{'id':'routes/api/admin/unlist-comic','parentId':'root','path':'api/admin/unlist-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/unlist-comic-MFMAF7Q5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/unschedule-comic':{'id':'routes/api/admin/unschedule-comic','parentId':'root','path':'api/admin/unschedule-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/unschedule-comic-E2LRPEPN.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/update-artist-data':{'id':'routes/api/admin/update-artist-data','parentId':'root','path':'api/admin/update-artist-data','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/update-artist-data-KXASFKH4.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/admin/update-comic-data':{'id':'routes/api/admin/update-comic-data','parentId':'root','path':'api/admin/update-comic-data','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/admin/update-comic-data-5NSHPGOR.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/add-contribution-points':{'id':'routes/api/funcs/add-contribution-points','parentId':'root','path':'api/funcs/add-contribution-points','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/add-contribution-points-3DVI2U7N.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-artist':{'id':'routes/api/funcs/get-artist','parentId':'root','path':'api/funcs/get-artist','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-artist-Z3HVHDFT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-artists':{'id':'routes/api/funcs/get-artists','parentId':'root','path':'api/funcs/get-artists','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-artists-C76CQ4OP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-comic':{'id':'routes/api/funcs/get-comic','parentId':'root','path':'api/funcs/get-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-comic-KFEBJKLZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-comics':{'id':'routes/api/funcs/get-comics','parentId':'root','path':'api/funcs/get-comics','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-comics-BHWWDGYV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-mod-application':{'id':'routes/api/funcs/get-mod-application','parentId':'root','path':'api/funcs/get-mod-application','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-mod-application-YJNGVLCA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-pending-comics':{'id':'routes/api/funcs/get-pending-comics','parentId':'root','path':'api/funcs/get-pending-comics','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-pending-comics-6HKY6GND.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/get-tags':{'id':'routes/api/funcs/get-tags','parentId':'root','path':'api/funcs/get-tags','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/get-tags-TMFNKPOI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/funcs/publishing-queue':{'id':'routes/api/funcs/publishing-queue','parentId':'root','path':'api/funcs/publishing-queue','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/funcs/publishing-queue-EQX3QLU2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/api/search-similar-artist':{'id':'routes/api/search-similar-artist','parentId':'root','path':'api/search-similar-artist','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/search-similar-artist-SGKSOEAO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/search-similarly-named-comic':{'id':'routes/api/search-similarly-named-comic','parentId':'root','path':'api/search-similarly-named-comic','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/search-similarly-named-comic-BQ7XNDB7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/api/set-theme':{'id':'routes/api/set-theme','parentId':'root','path':'api/set-theme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/set-theme-74DKX3RK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/api/upload-comic-pages':{'id':'routes/api/upload-comic-pages','parentId':'root','path':'api/upload-comic-pages','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/upload-comic-pages-FBFEOINS.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute':{'id':'routes/contribute','parentId':'root','path':'contribute','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/index-QNESKWSF.js','imports':['/build/_shared/chunk-DPPBPQ7M.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/index':{'id':'routes/contribute/index','parentId':'root','path':'contribute','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/index-QNESKWSF.js','imports':['/build/_shared/chunk-DPPBPQ7M.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/BackToContribute':{'id':'routes/contribute/BackToContribute','parentId':'root','path':'contribute/BackToContribute','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/BackToContribute-3QGGG6UH.js','imports':['/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/feedback/index':{'id':'routes/contribute/feedback/index','parentId':'root','path':'contribute/feedback','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/feedback/index-RNAXM5Q2.js','imports':['/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-7IMHRCVJ.js','/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/join-us/apply/index':{'id':'routes/contribute/join-us/apply/index','parentId':'root','path':'contribute/join-us/apply','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/join-us/apply/index-MOGISO62.js','imports':['/build/_shared/chunk-7IMHRCVJ.js','/build/_shared/chunk-KNUP74JU.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/join-us/index':{'id':'routes/contribute/join-us/index','parentId':'root','path':'contribute/join-us','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/join-us/index-MWOLYSXZ.js','imports':['/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/scoreboard/index':{'id':'routes/contribute/scoreboard/index','parentId':'root','path':'contribute/scoreboard','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/scoreboard/index-6DVEQW3N.js','imports':['/build/_shared/chunk-7NC2HCUX.js','/build/_shared/chunk-65272WMF.js','/build/_shared/chunk-MLHRPB57.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-KEMJ7ID2.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/suggest-comic/index':{'id':'routes/contribute/suggest-comic/index','parentId':'root','path':'contribute/suggest-comic','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/suggest-comic/index-74D4Y5I2.js','imports':['/build/_shared/chunk-7IMHRCVJ.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/upload/index':{'id':'routes/contribute/upload/index','parentId':'root','path':'contribute/upload','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/index-4FBSNLPG.js','imports':['/build/_shared/chunk-EYUBCDIQ.js','/build/_shared/chunk-T7R3HSKW.js','/build/_shared/chunk-TGGKCCFQ.js','/build/_shared/chunk-BLXOIMHH.js','/build/_shared/chunk-JAPRM4DZ.js','/build/_shared/chunk-D7KEIL4Q.js','/build/_shared/chunk-SP3O2GUC.js','/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-RZCJ7RWW.js','/build/_shared/chunk-YARPHBWQ.js','/build/_shared/chunk-LCW5FZYE.js','/build/_shared/chunk-KEMJ7ID2.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/contribute/upload/step1':{'id':'routes/contribute/upload/step1','parentId':'root','path':'contribute/upload/step1','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/step1-PATKZRN3.js','imports':['/build/_shared/chunk-BLXOIMHH.js','/build/_shared/chunk-KEMJ7ID2.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/upload/step3-pagemanager':{'id':'routes/contribute/upload/step3-pagemanager','parentId':'root','path':'contribute/upload/step3-pagemanager','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/step3-pagemanager-KJVNAXWF.js','imports':['/build/_shared/chunk-RZCJ7RWW.js','/build/_shared/chunk-YARPHBWQ.js','/build/_shared/chunk-LCW5FZYE.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/upload/step4-thumbnail':{'id':'routes/contribute/upload/step4-thumbnail','parentId':'root','path':'contribute/upload/step4-thumbnail','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/step4-thumbnail-MKA6QCLO.js','imports':['/build/_shared/chunk-D7KEIL4Q.js','/build/_shared/chunk-SP3O2GUC.js','/build/_shared/chunk-7ZL2YVHF.js','/build/_shared/chunk-LCW5FZYE.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-G7RFWOIH.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/upload/success':{'id':'routes/contribute/upload/success','parentId':'root','path':'contribute/upload/success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/success-FBJ3EYUQ.js','imports':['/build/_shared/chunk-JAPRM4DZ.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/upload/upload-handler.server':{'id':'routes/contribute/upload/upload-handler.server','parentId':'root','path':'contribute/upload/upload-handler/server','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/upload/upload-handler.server-KKXA72NA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/your-contributions/data-fetchers':{'id':'routes/contribute/your-contributions/data-fetchers','parentId':'root','path':'contribute/your-contributions/data-fetchers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contribute/your-contributions/data-fetchers-PXYEWMKC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/contribute/your-contributions/index':{'id':'routes/contribute/your-contributions/index','parentId':'root','path':'contribute/your-contributions','index':true,'caseSensitive':undefined,'module':'/build/routes/contribute/your-contributions/index-PQZ6OYQT.js','imports':['/build/_shared/chunk-7NC2HCUX.js','/build/_shared/chunk-65272WMF.js','/build/_shared/chunk-MLHRPB57.js','/build/_shared/chunk-CHHLOFTP.js','/build/_shared/chunk-KEMJ7ID2.js','/build/_shared/chunk-U5M3GG4V.js','/build/_shared/chunk-SECVNS4V.js','/build/_shared/chunk-TMKGCAS4.js','/build/_shared/chunk-MXFDKN7O.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-66BV474U.js','imports':['/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':true},'routes/forgotten-password':{'id':'routes/forgotten-password','parentId':'root','path':'forgotten-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/forgotten-password-PPMVAR4W.js','imports':['/build/_shared/chunk-IROW2AMK.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-TFFSDTPY.js','imports':['/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-IUZF42UH.js','imports':['/build/_shared/chunk-R4RPDCQD.js','/build/_shared/chunk-KNUP74JU.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-GGSXPJWV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-67QUUQE3.js','imports':['/build/_shared/chunk-R4RPDCQD.js','/build/_shared/chunk-KNUP74JU.js','/build/_shared/chunk-DJPO7VRC.js','/build/_shared/chunk-XUF3G4EY.js','/build/_shared/chunk-JOXLHWZN.js','/build/_shared/chunk-N3P7HA7R.js','/build/_shared/chunk-IROW2AMK.js','/build/_shared/chunk-2TN4O6PS.js','/build/_shared/chunk-3IJKRM2T.js','/build/_shared/chunk-NJVP5TAD.js','/build/_shared/chunk-QX4QACTM.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false}},'version':'99705f95','hmr':{'runtime':'/build/_shared/chunk-GYC7E6GP.js','timestamp':1700058445882},'url':'/build/manifest-99705F95.js'};"],
  "mappings": "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",
  "names": ["import_react", "import_cloudflare", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "jwt", "import_react", "import_jsx_dev_runtime", "import_cloudflare", "Sentry", "import_jsx_dev_runtime", "clsx", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "RemixLink", "import_cloudflare", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "loader", "loader", "loader", "action", "loader", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Spinner", "import_md", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_react_toastify", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "redirect", "loader", "import_cloudflare", "import_react", "import_md", "import_react", "import_jsx_dev_runtime", "loader", "Index", "import_md", "import_jsx_dev_runtime", "Index", "action", "Signup", "loader", "import_auth_server", "import_jsx_dev_runtime", "Signup", "loader", "action", "redirect", "entry", "err", "action", "action", "import_react", "import_react", "import_md", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_md", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_md", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_date_fns", "import_md", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "import_jsx_dev_runtime", "loader", "action", "action", "action", "action", "import_react", "import_md", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_md", "import_jsx_dev_runtime", "Cropper", "import_jsx_dev_runtime", "action", "action", "action", "action", "action", "action", "action", "action", "action", "loader", "import_react", "import_md", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_react", "import_jsx_dev_runtime", "loader", "similarComics", "comicName", "action", "action", "action", "action", "action", "loader", "action", "action", "loader", "err", "action", "action", "links", "action", "action", "action", "action", "action", "action", "err", "action", "action", "updateGeneralDetails", "action", "action", "action", "action", "action", "action", "action", "action", "action", "import_react", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "loader", "loader", "action", "scheduleComic", "action", "scheduleComic", "import_react", "import_md", "import_jsx_dev_runtime", "action", "action", "action", "Upload", "links", "loader", "import_react", "import_ri", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_ri", "import_jsx_dev_runtime", "waitMillisec", "import_react", "import_jsx_dev_runtime", "isAnySimilar", "comicName", "import_react", "import_md", "import_jsx_dev_runtime", "links", "isExactMatch", "import_md", "import_jsx_dev_runtime", "import_react", "import_ri", "import_jsx_dev_runtime", "waitMillisec", "value", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "links", "Upload", "comicData", "error", "loader", "action", "action", "action", "action", "action", "action", "loader", "import_cloudflare", "action", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "import_react", "import_io5", "import_react", "import_jsx_dev_runtime", "areChildrenWider", "Spinner", "loader", "import_react", "import_react", "import_date_fns", "import_md", "import_jsx_dev_runtime", "action", "import_react", "import_io5", "import_md", "import_jsx_dev_runtime", "action", "import_react", "import_io5", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "loader", "action", "processTagSuggestion", "assignActionToMod", "processComicProblem", "processComicSuggestion", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_date_fns", "import_md", "import_jsx_dev_runtime", "Spinner", "import_jsx_dev_runtime", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "React", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "toggleArtistBan", "loader", "import_react", "import_jsx_dev_runtime", "import_react", "import_date_fns", "import_jsx_dev_runtime", "import_react", "import_io5", "import_date_fns", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_io5", "import_date_fns", "import_jsx_dev_runtime", "import_react", "import_react", "import_io5", "import_md", "import_jsx_dev_runtime", "import_io5", "import_jsx_dev_runtime", "import_react", "import_io5", "import_date_fns", "import_jsx_dev_runtime", "Calendar", "import_jsx_dev_runtime", "import_react", "import_md", "import_jsx_dev_runtime", "unlistComic", "loader", "import_react", "import_date_fns", "import_md", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_md", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "handleRequest"]
}
